{
  "jacdac.MultitouchEvent.LongPress": "Argument: channel uint8_t. Emitted when an input is touched for longer than 500ms. TODO Not implemented.\n* ```\nconst [channel] = jdunpack<[number]>(buf, \"u8\")\n```",
  "jacdac.MultitouchEvent.Release": "Argument: channel uint8_t. Emitted when an input is no longer touched.\n* ```\nconst [channel] = jdunpack<[number]>(buf, \"u8\")\n```",
  "jacdac.MultitouchEvent.SwipeNeg": "Emitted when input channels are successively touched in order of decreasing channel numbers.\n* ```\nconst [duration, startChannel, endChannel] = jdunpack<[number, number, number]>(buf, \"u16 u8 u8\")\n```",
  "jacdac.MultitouchEvent.SwipePos": "Emitted when input channels are successively touched in order of increasing channel numbers.\n* ```\nconst [duration, startChannel, endChannel] = jdunpack<[number, number, number]>(buf, \"u16 u8 u8\")\n```",
  "jacdac.MultitouchEvent.Tap": "Argument: channel uint8_t. Emitted when an input is briefly touched. TODO Not implemented.\n* ```\nconst [channel] = jdunpack<[number]>(buf, \"u8\")\n```",
  "jacdac.MultitouchEvent.Touch": "Argument: channel uint8_t. Emitted when an input is touched.\n* ```\nconst [channel] = jdunpack<[number]>(buf, \"u8\")\n```",
  "jacdac.MultitouchEventPack.LongPress": "Pack format for 'long_press' data.",
  "jacdac.MultitouchEventPack.Release": "Pack format for 'release' data.",
  "jacdac.MultitouchEventPack.SwipeNeg": "Pack format for 'swipe_neg' data.",
  "jacdac.MultitouchEventPack.SwipePos": "Pack format for 'swipe_pos' data.",
  "jacdac.MultitouchEventPack.Tap": "Pack format for 'tap' data.",
  "jacdac.MultitouchEventPack.Touch": "Pack format for 'touch' data.",
  "jacdac.MultitouchReg.Capacity": "Read-only. Capacitance of channels. The capacitance is continuously calibrated, and a value of `0` indicates\nno touch, wheres a value of around `100` or more indicates touch.\nIt's best to ignore this (unless debugging), and use events.\n* ```\nconst [capacitance] = jdunpack<[number[]]>(buf, \"i16[]\")\n```",
  "jacdac.MultitouchRegPack.Capacity": "Pack format for 'capacity' data.",
  "modules": "Jacdac modules",
  "modules.MultiTouchClient": "A client of multiple buttons",
  "modules.MultiTouchClient.value": "Reads the current capacitance"
}