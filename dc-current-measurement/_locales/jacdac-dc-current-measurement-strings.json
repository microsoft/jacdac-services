{
  "jacdac.DcCurrentMeasurementReg.MaxMeasurement": "Constant A f64 (uint64_t). Maximum measurable current\n* ```\nconst [maxMeasurement] = jdunpack<[number]>(buf, \"f64\")\n```",
  "jacdac.DcCurrentMeasurementReg.Measurement": "Read-only A f64 (uint64_t). The current measurement.\n* ```\nconst [measurement] = jdunpack<[number]>(buf, \"f64\")\n```",
  "jacdac.DcCurrentMeasurementReg.MeasurementError": "Read-only A f64 (uint64_t). Absolute error on the reading value.\n* ```\nconst [measurementError] = jdunpack<[number]>(buf, \"f64\")\n```",
  "jacdac.DcCurrentMeasurementReg.MeasurementName": "Constant string (bytes). A string containing the net name that is being measured e.g. `POWER_DUT` or a reference e.g. `DIFF_DEV1_DEV2`. These constants can be used to identify a measurement from client code.\n* ```\nconst [measurementName] = jdunpack<[string]>(buf, \"s\")\n```",
  "jacdac.DcCurrentMeasurementReg.MinMeasurement": "Constant A f64 (uint64_t). Minimum measurable current\n* ```\nconst [minMeasurement] = jdunpack<[number]>(buf, \"f64\")\n```",
  "modules.DcCurrentMeasurementClient.measurement|block": "%dccurrentmeasurement measurement (A)",
  "modules.DcCurrentMeasurementClient.onMeasurementChangedBy|block": "on %dccurrentmeasurement measurement changed by %threshold (A)",
  "modules.dcCurrentMeasurement1|block": "dc current measurement1",
  "modules|block": "modules",
  "{id:category}Jacdac": "Jacdac",
  "{id:category}Modules": "Modules",
  "{id:group}DC Current Measurement": "DC Current Measurement"
}