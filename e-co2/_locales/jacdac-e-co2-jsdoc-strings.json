{
  "jacdac.ECO2Reg.ECO2": "Read-only ppm u22.10 (uint32_t). Equivalent CO₂ (eCO₂) readings.\n* ```\nconst [eCO2] = jdunpack<[number]>(buf, \"u22.10\")\n```",
  "jacdac.ECO2Reg.ECO2Error": "Read-only ppm u22.10 (uint32_t). Error on the reading value.\n* ```\nconst [eCO2Error] = jdunpack<[number]>(buf, \"u22.10\")\n```",
  "jacdac.ECO2Reg.MaxECO2": "Constant ppm u22.10 (uint32_t). Minimum measurable value\n* ```\nconst [maxECO2] = jdunpack<[number]>(buf, \"u22.10\")\n```",
  "jacdac.ECO2Reg.MinECO2": "Constant ppm u22.10 (uint32_t). Minimum measurable value\n* ```\nconst [minECO2] = jdunpack<[number]>(buf, \"u22.10\")\n```",
  "jacdac.ECO2Reg.Variant": "Constant Variant (uint8_t). Type of physical sensor and capabilities.\n* ```\nconst [variant] = jdunpack<[jacdac.ECO2Variant]>(buf, \"u8\")\n```",
  "jacdac.ECO2RegPack.ECO2": "Pack format for 'e_CO2' data.",
  "jacdac.ECO2RegPack.ECO2Error": "Pack format for 'e_CO2_error' data.",
  "jacdac.ECO2RegPack.MaxECO2": "Pack format for 'max_e_CO2' data.",
  "jacdac.ECO2RegPack.MinECO2": "Pack format for 'min_e_CO2' data.",
  "jacdac.ECO2RegPack.Variant": "Pack format for 'variant' data.",
  "modules": "Jacdac modules",
  "modules.ECO2Client": "Measures equivalent CO₂ levels.",
  "modules.ECO2Client.eCO2": "Equivalent CO₂ (eCO₂) readings.",
  "modules.ECO2Client.eCO2Error": "Error on the reading value.",
  "modules.ECO2Client.maxECO2": "Minimum measurable value",
  "modules.ECO2Client.minECO2": "Minimum measurable value",
  "modules.ECO2Client.onECO2ChangedBy": "Run code when the e CO2 changes by the given threshold value.",
  "modules.ECO2Client.variant": "Type of physical sensor and capabilities."
}