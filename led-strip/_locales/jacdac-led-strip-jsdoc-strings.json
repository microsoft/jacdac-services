{
  "jacdac.LedStripCmd.Run": "Argument: program bytes. Run the given light \"program\". See service description for details.\n* ```\nconst [program] = jdunpack<[Buffer]>(buf, \"b\")\n```",
  "jacdac.LedStripCmdPack.Run": "Pack format for 'run' data.",
  "jacdac.LedStripReg.ActualBrightness": "Read-only ratio u0.8 (uint8_t). This is the luminosity actually applied to the strip.\nMay be lower than `brightness` if power-limited by the `max_power` register.\nIt will rise slowly (few seconds) back to `brightness` is limits are no longer required.\n* ```\nconst [actualBrightness] = jdunpack<[number]>(buf, \"u0.8\")\n```",
  "jacdac.LedStripReg.Brightness": "Read-write ratio u0.8 (uint8_t). Set the luminosity of the strip.\nAt `0` the power to the strip is completely shut down.\n* ```\nconst [brightness] = jdunpack<[number]>(buf, \"u0.8\")\n```",
  "jacdac.LedStripReg.LightType": "Read-write LightType (uint8_t). Specifies the type of light strip connected to controller.\nControllers which are sold with lights should default to the correct type\nand could not allow change.\n* ```\nconst [lightType] = jdunpack<[jacdac.LedStripLightType]>(buf, \"u8\")\n```",
  "jacdac.LedStripReg.MaxPixels": "Constant # uint16_t. The maximum supported number of pixels.\nAll writes to `num_pixels` are clamped to `max_pixels`.\n* ```\nconst [maxPixels] = jdunpack<[number]>(buf, \"u16\")\n```",
  "jacdac.LedStripReg.MaxPower": "Read-write mA uint16_t. Limit the power drawn by the light-strip (and controller).\n* ```\nconst [maxPower] = jdunpack<[number]>(buf, \"u16\")\n```",
  "jacdac.LedStripReg.NumColumns": "Read-write # uint16_t. If the LED pixel strip is a matrix, specifies the number of columns. Otherwise, a square shape is assumed. Controllers which are sold with lights should default to the correct length\nand could not allow change. Increasing length at runtime leads to ineffective use of memory and may lead to controller reboot.\n* ```\nconst [numColumns] = jdunpack<[number]>(buf, \"u16\")\n```",
  "jacdac.LedStripReg.NumPixels": "Read-write # uint16_t. Specifies the number of pixels in the strip.\nControllers which are sold with lights should default to the correct length\nand could not allow change. Increasing length at runtime leads to ineffective use of memory and may lead to controller reboot.\n* ```\nconst [numPixels] = jdunpack<[number]>(buf, \"u16\")\n```",
  "jacdac.LedStripReg.NumRepeats": "Read-write # uint16_t. How many times to repeat the program passed in `run` command.\nShould be set before the `run` command.\nSetting to `0` means to repeat forever.\n* ```\nconst [numRepeats] = jdunpack<[number]>(buf, \"u16\")\n```",
  "jacdac.LedStripReg.Variant": "Constant Variant (uint8_t). Specifies the shape of the light strip.\n* ```\nconst [variant] = jdunpack<[jacdac.LedStripVariant]>(buf, \"u8\")\n```",
  "jacdac.LedStripRegPack.ActualBrightness": "Pack format for 'actual_brightness' data.",
  "jacdac.LedStripRegPack.Brightness": "Pack format for 'brightness' data.",
  "jacdac.LedStripRegPack.LightType": "Pack format for 'light_type' data.",
  "jacdac.LedStripRegPack.MaxPixels": "Pack format for 'max_pixels' data.",
  "jacdac.LedStripRegPack.MaxPower": "Pack format for 'max_power' data.",
  "jacdac.LedStripRegPack.NumColumns": "Pack format for 'num_columns' data.",
  "jacdac.LedStripRegPack.NumPixels": "Pack format for 'num_pixels' data.",
  "jacdac.LedStripRegPack.NumRepeats": "Pack format for 'num_repeats' data.",
  "jacdac.LedStripRegPack.Variant": "Pack format for 'variant' data.",
  "modules.LedStripClient.actualBrightness": "This is the luminosity actually applied to the strip.\nMay be lower than `brightness` if power-limited by the `max_power` register.\nIt will rise slowly (few seconds) back to `brightness` is limits are no longer required.",
  "modules.LedStripClient.brightness": "Set the luminosity of the strip.\nAt `0` the power to the strip is completely shut down.",
  "modules.LedStripClient.configure": "Configure the light strip",
  "modules.LedStripClient.lightType": "Specifies the type of light strip connected to controller.\nControllers which are sold with lights should default to the correct type\nand could not allow change.",
  "modules.LedStripClient.maxPixels": "The maximum supported number of pixels.\nAll writes to `num_pixels` are clamped to `max_pixels`.",
  "modules.LedStripClient.maxPower": "Limit the power drawn by the light-strip (and controller).",
  "modules.LedStripClient.numColumns": "If the LED pixel strip is a matrix, specifies the number of columns. Otherwise, a square shape is assumed. Controllers which are sold with lights should default to the correct length\nand could not allow change. Increasing length at runtime leads to ineffective use of memory and may lead to controller reboot.",
  "modules.LedStripClient.numPixels": "Specifies the number of pixels in the strip.\nControllers which are sold with lights should default to the correct length\nand could not allow change. Increasing length at runtime leads to ineffective use of memory and may lead to controller reboot.",
  "modules.LedStripClient.numRepeats": "How many times to repeat the program passed in `run` command.\nShould be set before the `run` command.\nSetting to `0` means to repeat forever.",
  "modules.LedStripClient.setAll": "Set all of the pixels on the strip to one RGB color.",
  "modules.LedStripClient.setAll|param|rgb": "RGB color of the LED",
  "modules.LedStripClient.setBrightness": "Set the luminosity of the strip.\nAt `0` the power to the strip is completely shut down.",
  "modules.LedStripClient.setLightType": "Specifies the type of light strip connected to controller.\nControllers which are sold with lights should default to the correct type\nand could not allow change.",
  "modules.LedStripClient.setMaxPower": "Limit the power drawn by the light-strip (and controller).",
  "modules.LedStripClient.setNumColumns": "If the LED pixel strip is a matrix, specifies the number of columns. Otherwise, a square shape is assumed. Controllers which are sold with lights should default to the correct length\nand could not allow change. Increasing length at runtime leads to ineffective use of memory and may lead to controller reboot.",
  "modules.LedStripClient.setNumPixels": "Specifies the number of pixels in the strip.\nControllers which are sold with lights should default to the correct length\nand could not allow change. Increasing length at runtime leads to ineffective use of memory and may lead to controller reboot.",
  "modules.LedStripClient.setNumRepeats": "How many times to repeat the program passed in `run` command.\nShould be set before the `run` command.\nSetting to `0` means to repeat forever.",
  "modules.LedStripClient.setPixel": "Set a single of the pixels on the strip to one RGB color.",
  "modules.LedStripClient.setPixel|param|rgb": "RGB color of the LED",
  "modules.LedStripClient.showAnimation": "Show an animation or queue an animation in the animation queue",
  "modules.LedStripClient.showAnimation|param|animation": "the animation to run",
  "modules.LedStripClient.showAnimation|param|duration": "the duration to run in milliseconds, eg: 500",
  "modules.LedStripClient.variant": "Specifies the shape of the light strip."
}