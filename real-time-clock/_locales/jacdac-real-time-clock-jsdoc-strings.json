{
  "jacdac.RealTimeClockCmd.SetTime": "Sets the current time and resets the error.\n* ```\nconst [year, month, dayOfMonth, dayOfWeek, hour, min, sec] = jdunpack<[number, number, number, number, number, number, number]>(buf, \"u16 u8 u8 u8 u8 u8 u8\")\n```",
  "jacdac.RealTimeClockCmdPack.SetTime": "Pack format for 'set_time' data.",
  "jacdac.RealTimeClockReg.Drift": "Read-only s u16.16 (uint32_t). Time drift since the last call to the `set_time` command.\n* ```\nconst [drift] = jdunpack<[number]>(buf, \"u16.16\")\n```",
  "jacdac.RealTimeClockReg.LocalTime": "Current time in 24h representation. Default streaming period is 1 second.\n* ```\nconst [year, month, dayOfMonth, dayOfWeek, hour, min, sec] = jdunpack<[number, number, number, number, number, number, number]>(buf, \"u16 u8 u8 u8 u8 u8 u8\")\n```",
  "jacdac.RealTimeClockReg.Precision": "Constant ppm u16.16 (uint32_t). Error on the clock, in parts per million of seconds.\n* ```\nconst [precision] = jdunpack<[number]>(buf, \"u16.16\")\n```",
  "jacdac.RealTimeClockReg.Variant": "Constant Variant (uint8_t). The type of physical clock used by the sensor.\n* ```\nconst [variant] = jdunpack<[jacdac.RealTimeClockVariant]>(buf, \"u8\")\n```",
  "jacdac.RealTimeClockRegPack.Drift": "Pack format for 'drift' data.",
  "jacdac.RealTimeClockRegPack.LocalTime": "Pack format for 'local_time' data.",
  "jacdac.RealTimeClockRegPack.Precision": "Pack format for 'precision' data.",
  "jacdac.RealTimeClockRegPack.Variant": "Pack format for 'variant' data.",
  "modules": "Jacdac modules",
  "modules.RealTimeClockClient": "Real time clock to support collecting data with precise time stamps.",
  "modules.RealTimeClockClient.dayOfMonth": "Current time in 24h representation. Default streaming period is 1 second.\n* -   `day_of_month` is day of the month, starting at `1`\n-   `day_of_week` is day of the week, starting at `1` as monday. Leave at 0 if unsupported.",
  "modules.RealTimeClockClient.dayOfWeek": "Current time in 24h representation. Default streaming period is 1 second.\n* -   `day_of_month` is day of the month, starting at `1`\n-   `day_of_week` is day of the week, starting at `1` as monday. Leave at 0 if unsupported.",
  "modules.RealTimeClockClient.drift": "Time drift since the last call to the `set_time` command.",
  "modules.RealTimeClockClient.hour": "Current time in 24h representation. Default streaming period is 1 second.\n* -   `day_of_month` is day of the month, starting at `1`\n-   `day_of_week` is day of the week, starting at `1` as monday. Leave at 0 if unsupported.",
  "modules.RealTimeClockClient.min": "Current time in 24h representation. Default streaming period is 1 second.\n* -   `day_of_month` is day of the month, starting at `1`\n-   `day_of_week` is day of the week, starting at `1` as monday. Leave at 0 if unsupported.",
  "modules.RealTimeClockClient.month": "Current time in 24h representation. Default streaming period is 1 second.\n* -   `day_of_month` is day of the month, starting at `1`\n-   `day_of_week` is day of the week, starting at `1` as monday. Leave at 0 if unsupported.",
  "modules.RealTimeClockClient.precision": "Error on the clock, in parts per million of seconds.",
  "modules.RealTimeClockClient.sec": "Current time in 24h representation. Default streaming period is 1 second.\n* -   `day_of_month` is day of the month, starting at `1`\n-   `day_of_week` is day of the week, starting at `1` as monday. Leave at 0 if unsupported.",
  "modules.RealTimeClockClient.setTime": "Sets the current time and resets the error.",
  "modules.RealTimeClockClient.variant": "The type of physical clock used by the sensor.",
  "modules.RealTimeClockClient.year": "Current time in 24h representation. Default streaming period is 1 second.\n* -   `day_of_month` is day of the month, starting at `1`\n-   `day_of_week` is day of the week, starting at `1` as monday. Leave at 0 if unsupported."
}