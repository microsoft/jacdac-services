{
  "jacdac.GamepadEvent.ButtonsChanged": "Argument: buttons Buttons (uint32_t). Wird immer dann ausgelöst, wenn sich der Zustand der Tasten ändert.\n* ```\nconst [buttons] = jdunpack<[jacdac.GamepadButtons]>(buf, \"u32\")\n```",
  "jacdac.GamepadEventPack.ButtonsChanged": "Packformat für 'buttons_changed' Daten.",
  "jacdac.GamepadReg.ButtonsAvailable": "Konstante Tasten (uint32_t). Gibt eine Bitmaske der Tasten an, die auf dem Gamepad montiert sind.\nWenn die `Left`/`Up`/`Right`/`Down` Tasten hier als verfügbar markiert sind, ist das Gamepad digital.\nSelbst wenn sie als nicht verfügbar markiert sind, werden sie dennoch basierend auf dem analogen Gamepad simuliert.\n* ```\nconst [buttonsAvailable] = jdunpack<[jacdac.GamepadButtons]>(buf, \"u32\")\n```",
  "jacdac.GamepadReg.Direction": "Wenn das Gamepad analog ist, sollten die Richtungstasten basierend auf der Gamepad-Position \"simuliert\" werden\n(`Left` ist `{ x = -1, y = 0 }`, `Up` ist `{ x = 0, y = -1}`).\nWenn das Gamepad digital ist, dann wird jede Richtung entweder als `-1`, `0` oder `1` gelesen (in fester Darstellung).\nDie primäre Taste auf dem Gamepad ist `A`.\n* ```\nconst [buttons, x, y] = jdunpack<[jacdac.GamepadButtons, number, number]>(buf, \"u32 i1.15 i1.15\")\n```",
  "jacdac.GamepadReg.Variant": "Konstanter Variant (uint8_t). Der Typ des physischen Gamepads.\n* ```\nconst [variant] = jdunpack<[jacdac.GamepadVariant]>(buf, \"u8\")\n```",
  "jacdac.GamepadRegPack.ButtonsAvailable": "Packformat für 'buttons_available' Daten.",
  "jacdac.GamepadRegPack.Direction": "Packformat für 'direction' Daten.",
  "jacdac.GamepadRegPack.Variant": "Packformat für 'variant' Daten.",
  "modules": "Jacdac-Module",
  "modules.GamepadClient": "Ein zweiachssiger Richtungs-Joystick",
  "modules.GamepadClient.buttons": "Wenn der Joystick analog ist, sollten die Richtungstasten basierend auf der Joystick-Position \"simuliert\" werden\n(`Left` ist `{ x = -1, y = 0 }`, `Up` ist `{ x = 0, y = -1}`).\nWenn der Joystick digital ist, dann wird jede Richtung entweder als `-1`, `0` oder `1` gelesen (in fester Darstellung).\nDie primäre Taste auf dem Joystick ist `A`.",
  "modules.GamepadClient.buttonsAvailable": "Gibt eine Bitmaske der Tasten an, die auf dem Joystick montiert sind.\nWenn die `Left`/`Up`/`Right`/`Down` Tasten hier als verfügbar markiert sind, ist der Joystick digital.\nSelbst wenn sie als nicht verfügbar markiert sind, werden sie dennoch basierend auf dem analogen Joystick simuliert.",
  "modules.GamepadClient.isButtonDown": "Gibt an, ob die Taste (oder Kombination) gedrückt ist.",
  "modules.GamepadClient.isButtonDown|param|button": "@returns true, wenn ausgewählte Tasten gedrückt sind",
  "modules.GamepadClient.onButtonsChanged": "Wird immer dann ausgelöst, wenn sich der Zustand der Tasten ändert.",
  "modules.GamepadClient.onEvent": "Code registrieren, der ausgeführt wird, wenn ein Ereignis ausgelöst wird",
  "modules.GamepadClient.variant": "Der Typ des physischen Joysticks.",
  "modules.GamepadClient.x": "Wenn der Joystick analog ist, sollten die Richtungstasten basierend auf der Joystick-Position \"simuliert\" werden\n(`Left` ist `{ x = -1, y = 0 }`, `Up` ist `{ x = 0, y = -1}`).\nWenn der Joystick digital ist, dann wird jede Richtung entweder als `-1`, `0` oder `1` gelesen (in fester Darstellung).\nDie primäre Taste auf dem Joystick ist `A`.",
  "modules.GamepadClient.y": "Wenn der Joystick analog ist, sollten die Richtungstasten basierend auf der Joystick-Position \"simuliert\" werden\n(`Left` ist `{ x = -1, y = 0 }`, `Up` ist `{ x = 0, y = -1}`).\nWenn der Joystick digital ist, dann wird jede Richtung entweder als `-1`, `0` oder `1` gelesen (in fester Darstellung).\nDie primäre Taste auf dem Joystick ist `A`."
}