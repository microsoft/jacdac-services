{
  "jacdac.ButtonEvent.Down": "Émis lorsque le bouton passe de l'état inactif à actif.",
  "jacdac.ButtonEvent.Hold": "Argument : temps ms uint32_t. Émis lorsque le temps d'appui est supérieur à 500ms, puis au moins toutes les 500ms\ntant que le bouton reste enfoncé. Le paramètre 'temps' enregistre la durée pendant laquelle\nle bouton a été maintenu (depuis l'événement d'appui).\n* ```\nconst [time] = jdunpack<[number]>(buf, \"u32\")\n```",
  "jacdac.ButtonEvent.Up": "Argument : temps ms uint32_t. Émis lorsque le bouton passe de l'état actif à inactif. Le paramètre 'temps'\nenregistre la durée entre les événements d'appui et de relâchement.\n* ```\nconst [time] = jdunpack<[number]>(buf, \"u32\")\n```",
  "jacdac.ButtonEventPack.Hold": "Format de paquet pour les données 'hold'.",
  "jacdac.ButtonEventPack.Up": "Format de paquet pour les données 'up'.",
  "jacdac.ButtonReg.Analog": "Constante bool (uint8_t). Indique si le bouton fournit des lectures analogiques de `pression`.\n* ```\nconst [analog] = jdunpack<[number]>(buf, \"u8\")\n```",
  "jacdac.ButtonReg.Pressed": "Booléen en lecture seule (uint8_t). Détermine si le bouton est actuellement enfoncé.",
  "jacdac.ButtonReg.Pressure": "Ratio en lecture seule u0.16 (uint16_t). Indique l'état de pression du bouton, où `0` est ouvert.\n* ```\nconst [pressure] = jdunpack<[number]>(buf, \"u0.16\")\n```",
  "jacdac.ButtonRegPack.Analog": "Format de paquet pour les données 'analog'.",
  "jacdac.ButtonRegPack.Pressed": "Format de paquet pour les données 'pressed'.",
  "jacdac.ButtonRegPack.Pressure": "Format de paquet pour les données 'pressure'.",
  "modules": "Modules Jacdac",
  "modules.ButtonClient": "Un bouton-poussoir, qui revient à la position inactive lorsqu'il n'est plus actionné.",
  "modules.ButtonClient.analog": "Indique si le bouton fournit des lectures analogiques de ``pression``.",
  "modules.ButtonClient.holdDuration": "La dernière durée d'appui signalée lorsque le bouton est enfoncé.\n* Les événements `down` et `hold` rapportent également la durée totale d'appui en millisecondes.\nLa valeur est la dernière durée d'appui lorsque le bouton est relâché.",
  "modules.ButtonClient.onDown": "Émis lorsque le bouton passe de l'état inactif à actif.",
  "modules.ButtonClient.onEvent": "Enregistrer le code à exécuter lorsqu'un événement est déclenché",
  "modules.ButtonClient.onHold": "Émis lorsque le temps d'appui est supérieur à 500ms, puis au moins toutes les 500ms\ntant que le bouton reste enfoncé. Le paramètre 'temps' enregistre la durée pendant laquelle\nle bouton a été maintenu (depuis l'événement d'appui).",
  "modules.ButtonClient.onPressureChangedBy": "Exécuter le code lorsque la pression change d'une valeur seuil donnée.",
  "modules.ButtonClient.onUp": "Émis lorsque le bouton passe de l'état actif à inactif. Le paramètre 'temps'\nenregistre la durée entre les événements d'appui et de relâchement.",
  "modules.ButtonClient.pressed": "Détermine si le bouton est actuellement enfoncé.\n* Si l'événement ``down`` est observé, ``pressed`` est vrai; si ``up`` ou ``hold`` sont observés, ``pressed`` est faux.\nPour initialiser, attendez n'importe quel événement ou timeout pour que ``pressed`` soit vrai après 750ms (1.5x temps d'appui).",
  "modules.ButtonClient.pressure": "Indique l'état de pression du bouton, où ``0`` est ouvert."
}