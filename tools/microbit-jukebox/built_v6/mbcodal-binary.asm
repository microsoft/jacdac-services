; Interface tables: 1713/5426 (32%)
; Virtual methods: 10 / 235
; generated code sizes (bytes): 150028 (incl. 104346 user, 4516 helpers, 28902 vtables, 12264 lits); src size 0
; assembly: 93997 lines; density: 32.51 bytes/stmt; (3210 stmts)
; total bytes: 449036 (85.6% of 512.0k flash with 75252 free)
; peep hole pass: 1738 instructions removed and 3565 updated
; peep hole pass: 1474 instructions removed and 3 updated
; peep hole pass: 3 instructions removed and 3 updated
; peep hole pass: 0 instructions removed and 0 updated


; start
    .startaddr 0x49000
    .hex 708E3B92C615A841C49866C975EE5197 ; magic number
    .hex 85358AD629D14C86 ; hex template hash
    .hex 873266330af9dbdb ; replaced in binary by program hash
    .short 147   ; num. globals
    .short 0 ; patched with number of 64 bit words resulting from assembly
    .word _pxt_config_data
    .short 0 ; patched with comm section size
    .short 1 ; number of globals that are not pointers (they come first)
    .word _pxt_iface_member_names
    .word _pxt_lambda_trampoline@fn
    .word _pxt_perf_counters
    .word _pxt_restore_exception_state@fn
    .word _str251 ; name
    ;
; Function sonify.ts(1,1): <main>
    ;
    .object _main___P4699 "sonify.ts(1,1): <main>"
_main___P4699_pre:
    .section code
    .balign 4
_main___P4699_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word _main___P4699_args@fn
_main___P4699_args:
    .section code
_main___P4699:
_main___P4699_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
_main___P4699_locals:
    ldr r0, _ldlit_2 ; 65537      
    movs r1, #176
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #4]
    @stackempty locals
    movs r0, #3
    ldr r7, [r6, #0]
    str r0, [r7, #96]
    @stackempty locals
    movs r0, #1
    movs r1, #89
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #1
    movs r1, #45
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #66
    movs r1, #11
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #241
    ldr r7, [r6, #0]
    str r0, [r7, #88]
    @stackempty locals
    ldr r0, _ldlit_3 ; _hexlit71      
    movs r1, #77
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
    ldr r0, _ldlit_4 ; SoundExpression__C2699_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_5 ; _str93      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl SoundExpression_constructor__P2700
_proccall252:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    movs r1, #129
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_4 ; SoundExpression__C2699_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_6 ; _str94      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl SoundExpression_constructor__P2700
_proccall253:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    movs r1, #65
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_7 ; _str96      
    movs r1, #35
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_8 ; _str97      
    movs r1, #141
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl settings_initScopes__P4896
_proccall254:
    @stackempty locals
    movs r0, #10
    movs r1, #139
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #10
    movs r1, #69
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl initPlatform__P2867
_proccall255:
    @stackempty locals
    ldr r0, _ldlit_9 ; _str114      
    movs r1, #208
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_10 ; _str116      
    movs r1, #184
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_11 ; _str139      
    movs r1, #172
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_12 ; _str140      
    movs r1, #168
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_11 ; _str139      
    movs r1, #160
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_12 ; _str140      
    movs r1, #9
    lsls r1, r1, #6
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_10 ; _str116      
    movs r1, #71
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_12 ; _str140      
    movs r1, #143
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_13 ; jacdac_LoggerServer__C3207_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_LoggerServer_constructor__P3209
_proccall256:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    movs r1, #131
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_9 ; _str114      
    movs r1, #73
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_14 ; _str141      
    movs r1, #144
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_15 ; jacdac__rolemgr_RoleManagerServer__C3330_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_constructor__P3332
_proccall257:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    movs r1, #33
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_16 ; _str157      
    movs r1, #136
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_17 ; _str158      
    movs r1, #140
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_18 ; _str159      
    movs r1, #148
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_19 ; _str160      
    ldr r7, [r6, #0]
    str r0, [r7, #112]
    @stackempty locals
    ldr r0, _ldlit_20 ; _str161      
    ldr r7, [r6, #0]
    str r0, [r7, #44]
    @stackempty locals
    ldr r0, _ldlit_21 ; _str162      
    movs r1, #67
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_22 ; _str163      
    ldr r7, [r6, #0]
    str r0, [r7, #40]
    @stackempty locals
    ldr r0, _ldlit_23 ; _str164      
    movs r1, #133
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_24 ; _str165      
    ldr r7, [r6, #0]
    str r0, [r7, #104]
    @stackempty locals
    ldr r0, _ldlit_25 ; _str166      
    movs r1, #128
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_26 ; _str167      
    movs r1, #132
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_27 ; _str168      
    ldr r7, [r6, #0]
    str r0, [r7, #108]
    @stackempty locals
    ldr r0, _ldlit_28 ; _str169      
    ldr r7, [r6, #0]
    str r0, [r7, #120]
    @stackempty locals
    ldr r0, _ldlit_29 ; _str170      
    ldr r7, [r6, #0]
    str r0, [r7, #124]
    @stackempty locals
    ldr r0, _ldlit_30 ; _str171      
    movs r1, #137
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_31 ; _str172      
    movs r1, #135
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_32 ; _str173      
    movs r1, #93
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_33 ; jacdac_Bus__C3455_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_Bus_constructor__P3461
_proccall258:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
    movs r0, #1
    movs r1, #156
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_34 ; _str215      
    movs r1, #152
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_35 ; _str216      
    movs r1, #17
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physStart
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl jacdac_setLed__P3613
_proccall259:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_1      
.jmpz260:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl _lambda_call0_0
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_1      
.object PUSH
.balign 4
_ldlit_2:
 .word 65537
_ldlit_3:
 .word _hexlit71
_ldlit_4:
 .word SoundExpression__C2699_VT
_ldlit_5:
 .word _str93
_ldlit_6:
 .word _str94
_ldlit_7:
 .word _str96
_ldlit_8:
 .word _str97
_ldlit_9:
 .word _str114
_ldlit_10:
 .word _str116
_ldlit_11:
 .word _str139
_ldlit_12:
 .word _str140
_ldlit_13:
 .word jacdac_LoggerServer__C3207_VT
_ldlit_14:
 .word _str141
_ldlit_15:
 .word jacdac__rolemgr_RoleManagerServer__C3330_VT
_ldlit_16:
 .word _str157
_ldlit_17:
 .word _str158
_ldlit_18:
 .word _str159
_ldlit_19:
 .word _str160
_ldlit_20:
 .word _str161
_ldlit_21:
 .word _str162
_ldlit_22:
 .word _str163
_ldlit_23:
 .word _str164
_ldlit_24:
 .word _str165
_ldlit_25:
 .word _str166
_ldlit_26:
 .word _str167
_ldlit_27:
 .word _str168
_ldlit_28:
 .word _str169
_ldlit_29:
 .word _str170
_ldlit_30:
 .word _str171
_ldlit_31:
 .word _str172
_ldlit_32:
 .word _str173
_ldlit_33:
 .word jacdac_Bus__C3455_VT
_ldlit_34:
 .word _str215
_ldlit_35:
 .word _str216
.object POP
.else_0_1:
.afterif_1_1:
    bl jacdac_startProxy__P5133
_proccall262:
    @stackempty locals
    ldr r0, _ldlit_37 ; jacdac_inline__P5143_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2297
_proccall263:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_38 ; _str224      
    movs r1, #87
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_39 ; _str225      
    ldr r7, [r6, #0]
    str r0, [r7, #32]
    @stackempty locals
    ldr r0, _ldlit_40 ; _str226      
    movs r1, #61
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_41 ; _str227      
    movs r1, #123
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_41 ; _str227      
    movs r1, #31
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_42 ; _str228      
    movs r1, #125
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_43 ; _str229      
    movs r1, #59
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_43 ; _str229      
    movs r1, #119
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_43 ; _str229      
    movs r1, #15
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_43 ; _str229      
    movs r1, #121
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #113
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_45 ; _str140      
    movs r1, #57
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #115
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #7
    lsls r1, r1, #6
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_46 ; _str233      
    movs r1, #188
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_46 ; _str233      
    movs r1, #192
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_46 ; _str233      
    movs r1, #196
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_46 ; _str233      
    movs r1, #200
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #204
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #27
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_47 ; _str116      
    movs r1, #109
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_48 ; _str235      
    ldr r7, [r6, #0]
    str r0, [r7, #92]
    @stackempty locals
    ldr r0, _ldlit_43 ; _str229      
    movs r1, #13
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_43 ; _str229      
    movs r1, #105
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_43 ; _str229      
    movs r1, #53
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_43 ; _str229      
    movs r1, #107
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_49 ; _str88      
    movs r1, #47
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_50 ; _str236      
    movs r1, #95
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_50 ; _str236      
    movs r1, #3
    lsls r1, r1, #7
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_51 ; _str115      
    movs r1, #97
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_51 ; _str115      
    movs r1, #49
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_51 ; _str115      
    movs r1, #99
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_51 ; _str115      
    movs r1, #25
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_51 ; _str115      
    movs r1, #101
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_51 ; _str115      
    movs r1, #51
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #103
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_52 ; _str231      
    movs r1, #41
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_52 ; _str231      
    movs r1, #83
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #21
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_53 ; _str237      
    movs r1, #85
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #43
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_52 ; _str231      
    movs r1, #91
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #23
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #79
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #5
    lsls r1, r1, #6
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_47 ; _str116      
    movs r1, #81
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_54 ; _str119      
    movs r1, #35
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_51 ; _str115      
    movs r1, #71
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #9
    lsls r1, r1, #5
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_55 ; _str238      
    movs r1, #244
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #248
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_55 ; _str238      
    movs r1, #252
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_55 ; _str238      
    movs r1, #1
    lsls r1, r1, #8
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_51 ; _str115      
    movs r1, #65
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_55 ; _str238      
    movs r1, #33
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_51 ; _str115      
    movs r1, #67
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_46 ; _str233      
    movs r1, #17
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_46 ; _str233      
    movs r1, #69
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_55 ; _str238      
    movs r1, #240
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #232
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #236
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_56 ; _str240      
    movs r1, #212
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_56 ; _str240      
    movs r1, #216
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_56 ; _str240      
    movs r1, #220
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_43 ; _str229      
    movs r1, #224
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_44 ; _str114      
    movs r1, #228
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_57 ; _str241      
    movs r1, #180
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    b _jmpwords_58      
.object PUSH
.balign 4
_ldlit_37:
 .word jacdac_inline__P5143_Lit
_ldlit_38:
 .word _str224
_ldlit_39:
 .word _str225
_ldlit_40:
 .word _str226
_ldlit_41:
 .word _str227
_ldlit_42:
 .word _str228
_ldlit_43:
 .word _str229
_ldlit_44:
 .word _str114
_ldlit_45:
 .word _str140
_ldlit_46:
 .word _str233
_ldlit_47:
 .word _str116
_ldlit_48:
 .word _str235
_ldlit_49:
 .word _str88
_ldlit_50:
 .word _str236
_ldlit_51:
 .word _str115
_ldlit_52:
 .word _str231
_ldlit_53:
 .word _str237
_ldlit_54:
 .word _str119
_ldlit_55:
 .word _str238
_ldlit_56:
 .word _str240
_ldlit_57:
 .word _str241
_jmpwords_58:
.object POP
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #0]      
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #0]      
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #0]      
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #0]      
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #0]      
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #0]      
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #0]      
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #0]      
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @3
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #0]      
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    movs r1, #117
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #6
    ldr r7, [r6, #0]
    str r0, [r7, #20]
    @stackempty locals
    ldr r0, _ldlit_59 ; _img242      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    ldr r7, [r6, #0]
    str r0, [r7, #20]
    @stackempty locals
    ldr r0, _ldlit_60 ; 2071540595      
    ldr r7, [r6, #0]
    str r0, [r7, #24]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #32]
    ldr r7, [r6, #0]
    str r0, [r7, #28]
    @stackempty locals
    ldr r0, _ldlit_61 ; _str243      
    ldr r7, [r6, #0]
    str r0, [r7, #72]
    @stackempty locals
    ldr r0, _ldlit_62 ; _str244      
    ldr r7, [r6, #0]
    str r0, [r7, #76]
    @stackempty locals
    ldr r0, _ldlit_63 ; _str245      
    ldr r7, [r6, #0]
    str r0, [r7, #80]
    @stackempty locals
    ldr r0, _ldlit_64 ; _str246      
    ldr r7, [r6, #0]
    str r0, [r7, #52]
    @stackempty locals
    ldr r0, _ldlit_65 ; _str247      
    ldr r7, [r6, #0]
    str r0, [r7, #48]
    @stackempty locals
    ldr r0, _ldlit_66 ; machine_MicrobitMachine__C5435_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_constructor__P5440
_proccall264:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #36]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #29
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #1
    movs r1, #1
    lsls r1, r1, #9
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #10
    movs r1, #127
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_67 ; machine_schedulePlayDeviceCount__P5451_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624
_proccall265:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_67 ; machine_schedulePlayDeviceCount__P5451_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624
_proccall266:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #63
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl machine_start__P5468
_proccall267:
    @stackempty locals
    ldr r0, _ldlit_68 ; inline__P5472_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_69 ; 1042810899      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall268:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_70 ; inline__P5520_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_71 ; 1008925141      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall269:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_72 ; inline__P5539_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_73 ; 662663065      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall270:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_74 ; inline__P5568_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_75 ; 917463983      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall271:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #75
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #59
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #79
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #63
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #35
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #60]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #73
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #57
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #77
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #65
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #19
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #37
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #64]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #13
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #77
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #149
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #187
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    lsls r1, r1, #8
    adds r1, #17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    lsls r1, r1, #8
    adds r1, #113
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    lsls r1, r1, #8
    adds r1, #221
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #23
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #68]
    @stackempty locals
    movs r0, #1
    ldr r7, [r6, #0]
    str r0, [r7, #56]
    @stackempty locals
    ldr r0, _ldlit_76 ; inline__P5624_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_77 ; 686245063      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall272:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_78 ; inline__P5689_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_79 ; 555673773      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall273:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_80 ; inline__P5710_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_81 ; 764420465      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall274:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    ldr r1, _ldlit_82 ; 33423361      
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    ldr r1, _ldlit_83 ; 130561      
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #84]
    @stackempty locals
    ldr r0, _ldlit_84 ; inline__P5733_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_85 ; 739486177      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall275:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_86 ; inline__P5823_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_87 ; 1045335693      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall276:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_88 ; inline__P5856_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_89 ; 637284383      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall277:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_90 ; inline__P5877_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_91 ; 800666681      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall278:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_92 ; inline__P5903_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_93 ; 813681837      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall279:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_94 ; inline__P5944_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_95 ; 569660307      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall280:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_96 ; inline__P5986_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_97 ; 637084167      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall281:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_98 ; inline__P6034_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_99 ; 900016133      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall282:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_100 ; inline__P6062_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_101 ; 675509647      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall283:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_102 ; inline__P6090_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_103 ; 674551573      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall284:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_104 ; inline__P6116_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_105 ; 813664581      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall285:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_106 ; inline__P6181_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_107 ; 828421845      
    push {r0} ; proc-arg
    bl machine_addClientFactory__P4677
_proccall286:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #100
    mov r7, sp
    str r7, [r6, #4]
    bl music::setVolume
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #105
    b _jmpwords_108      
.object PUSH
.balign 4
_ldlit_59:
 .word _img242
_ldlit_60:
 .word 2071540595
_ldlit_61:
 .word _str243
_ldlit_62:
 .word _str244
_ldlit_63:
 .word _str245
_ldlit_64:
 .word _str246
_ldlit_65:
 .word _str247
_ldlit_66:
 .word machine_MicrobitMachine__C5435_VT
_ldlit_67:
 .word machine_schedulePlayDeviceCount__P5451_Lit
_ldlit_68:
 .word inline__P5472_Lit
_ldlit_69:
 .word 1042810899
_ldlit_70:
 .word inline__P5520_Lit
_ldlit_71:
 .word 1008925141
_ldlit_72:
 .word inline__P5539_Lit
_ldlit_73:
 .word 662663065
_ldlit_74:
 .word inline__P5568_Lit
_ldlit_75:
 .word 917463983
_ldlit_76:
 .word inline__P5624_Lit
_ldlit_77:
 .word 686245063
_ldlit_78:
 .word inline__P5689_Lit
_ldlit_79:
 .word 555673773
_ldlit_80:
 .word inline__P5710_Lit
_ldlit_81:
 .word 764420465
_ldlit_82:
 .word 33423361
_ldlit_83:
 .word 130561
_ldlit_84:
 .word inline__P5733_Lit
_ldlit_85:
 .word 739486177
_ldlit_86:
 .word inline__P5823_Lit
_ldlit_87:
 .word 1045335693
_ldlit_88:
 .word inline__P5856_Lit
_ldlit_89:
 .word 637284383
_ldlit_90:
 .word inline__P5877_Lit
_ldlit_91:
 .word 800666681
_ldlit_92:
 .word inline__P5903_Lit
_ldlit_93:
 .word 813681837
_ldlit_94:
 .word inline__P5944_Lit
_ldlit_95:
 .word 569660307
_ldlit_96:
 .word inline__P5986_Lit
_ldlit_97:
 .word 637084167
_ldlit_98:
 .word inline__P6034_Lit
_ldlit_99:
 .word 900016133
_ldlit_100:
 .word inline__P6062_Lit
_ldlit_101:
 .word 675509647
_ldlit_102:
 .word inline__P6090_Lit
_ldlit_103:
 .word 674551573
_ldlit_104:
 .word inline__P6116_Lit
_ldlit_105:
 .word 813664581
_ldlit_106:
 .word inline__P6181_Lit
_ldlit_107:
 .word 828421845
_jmpwords_108:
.object POP
    push {r0} ; proc-arg
    bl music_setTempo__P2546
_proccall287:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4699:
    @stackempty locals
    movs r0, #0
.final_2_1:
_main___P4699_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(2081,27): jacdac.inline
    ;
    .object jacdac_inline__P5143 "jacdac/routing.ts(2081,27): jacdac.inline"
jacdac_inline__P5143_pre:
    .section code
    .balign 4
jacdac_inline__P5143_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_inline__P5143_args@fn
jacdac_inline__P5143_args:
    .section code
jacdac_inline__P5143:
jacdac_inline__P5143_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_inline__P5143_locals:
    movs r0, #0
    push {r0} ; proc-arg
    bl jacdac_start__P3607
_proccall288:
    add sp, #4*1 ; pop locals 1
.ret.5143:
    @stackempty locals
    movs r0, #0
.final_0_2:
jacdac_inline__P5143_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function accelerometer.ts(1,52): inline
    ;
    .object inline__P5472 "accelerometer.ts(1,52): inline"
inline__P5472_pre:
    .section code
    .balign 4
inline__P5472_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5472_args@fn
inline__P5472_args:
    cmp r4, #2
    bge inline__P5472_nochk
    push {lr}
    bl _expand_args_2_1
    bl inline__P5472_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
inline__P5472:
inline__P5472_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5472_locals:
    ldr r0, _ldlit_109 ; modules_AccelerometerClient__C3660_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_110 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_AccelerometerClient_constructor__P3661
_proccall289:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_111 ; inline__P5489_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_AccelerometerClient_onFaceDown__P3675
_proccall290:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_112 ; inline__P5494_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_AccelerometerClient_onFaceUp__P3674
_proccall291:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_113 ; inline__P5499_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_AccelerometerClient_onTiltLeft__P3672
_proccall292:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_114 ; inline__P5504_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_AccelerometerClient_onTiltRight__P3673
_proccall293:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_115 ; inline__P5509_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_AccelerometerClient_onTiltUp__P3670
_proccall294:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_116 ; inline__P5514_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_AccelerometerClient_onTiltDown__P3671
_proccall295:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5472:
    @stackempty locals
.final_0_3:
    add sp, #4*1 ; pop locals 1
inline__P5472_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function accelerometer.ts(3,23): inline
    ;
    .object inline__P5489 "accelerometer.ts(3,23): inline"
inline__P5489_pre:
    .section code
    .balign 4
inline__P5489_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5489_args@fn
inline__P5489_args:
    .section code
inline__P5489:
inline__P5489_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5489_locals:
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #11
    push {r0} ; proc-arg
    bl basic_showIcon__P2281
_proccall296:
    add sp, #4*2 ; pop locals 2
.ret.5489:
    @stackempty locals
    movs r0, #0
.final_0_4:
inline__P5489_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function accelerometer.ts(4,21): inline
    ;
    .object inline__P5494 "accelerometer.ts(4,21): inline"
inline__P5494_pre:
    .section code
    .balign 4
inline__P5494_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5494_args@fn
inline__P5494_args:
    .section code
inline__P5494:
inline__P5494_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5494_locals:
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    bl basic_showIcon__P2281
_proccall297:
    add sp, #4*2 ; pop locals 2
.ret.5494:
    @stackempty locals
    movs r0, #0
.final_0_5:
inline__P5494_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function accelerometer.ts(5,23): inline
    ;
    .object inline__P5499 "accelerometer.ts(5,23): inline"
inline__P5499_pre:
    .section code
    .balign 4
inline__P5499_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5499_args@fn
inline__P5499_args:
    .section code
inline__P5499:
inline__P5499_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5499_locals:
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #177
    push {r0} ; proc-arg
    movs r0, #13
    push {r0} ; proc-arg
    bl basic_showArrow__P2282
_proccall298:
    add sp, #4*2 ; pop locals 2
.ret.5499:
    @stackempty locals
    movs r0, #0
.final_0_6:
inline__P5499_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function accelerometer.ts(6,24): inline
    ;
    .object inline__P5504 "accelerometer.ts(6,24): inline"
inline__P5504_pre:
    .section code
    .balign 4
inline__P5504_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5504_args@fn
inline__P5504_args:
    .section code
inline__P5504:
inline__P5504_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5504_locals:
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #177
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    bl basic_showArrow__P2282
_proccall299:
    add sp, #4*2 ; pop locals 2
.ret.5504:
    @stackempty locals
    movs r0, #0
.final_0_7:
inline__P5504_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function accelerometer.ts(7,21): inline
    ;
    .object inline__P5509 "accelerometer.ts(7,21): inline"
inline__P5509_pre:
    .section code
    .balign 4
inline__P5509_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5509_args@fn
inline__P5509_args:
    .section code
inline__P5509:
inline__P5509_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5509_locals:
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #177
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl basic_showArrow__P2282
_proccall300:
    add sp, #4*2 ; pop locals 2
.ret.5509:
    @stackempty locals
    movs r0, #0
.final_0_8:
inline__P5509_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function accelerometer.ts(8,23): inline
    ;
    .object inline__P5514 "accelerometer.ts(8,23): inline"
inline__P5514_pre:
    .section code
    .balign 4
inline__P5514_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5514_args@fn
inline__P5514_args:
    .section code
inline__P5514:
inline__P5514_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5514_locals:
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #177
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    bl basic_showArrow__P2282
_proccall301:
    add sp, #4*2 ; pop locals 2
.ret.5514:
    @stackempty locals
    movs r0, #0
.final_0_9:
inline__P5514_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function airpressure.ts(1,51): inline
    ;
    .object inline__P5520 "airpressure.ts(1,51): inline"
inline__P5520_pre:
    .section code
    .balign 4
inline__P5520_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5520_args@fn
inline__P5520_args:
    cmp r4, #1
    bge inline__P5520_nochk
    push {lr}
    bl _expand_args_1_5
    bl inline__P5520_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
inline__P5520:
inline__P5520_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5520_locals:
    ldr r0, _ldlit_117 ; modules_AirPressureClient__C3696_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_AirPressureClient_constructor__P3697
_proccall302:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_118 ; inline__P5528_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_AirPressureClient_onPressureChangedBy__P3702
_proccall303:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5520:
    @stackempty locals
.final_0_10:
    add sp, #4*1 ; pop locals 1
inline__P5520_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function airpressure.ts(3,35): inline
    ;
    .object inline__P5528 "airpressure.ts(3,35): inline"
inline__P5528_pre:
    .section code
    .balign 4
inline__P5528_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5528_args@fn
inline__P5528_args:
    .section code
inline__P5528:
inline__P5528_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5528_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_AirPressureClient_pressure__P3698
_proccall304:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #71
    push {r0} ; proc-arg
    bl machine_showNumber__P4673
_proccall305:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5528:
    @stackempty locals
    movs r0, #0
.final_0_11:
    add sp, #4*1 ; pop locals 1
inline__P5528_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function brailledisplay.ts(1,54): inline
    ;
    .object inline__P5539 "brailledisplay.ts(1,54): inline"
inline__P5539_pre:
    .section code
    .balign 4
inline__P5539_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5539_args@fn
inline__P5539_args:
    cmp r4, #2
    bge inline__P5539_nochk
    push {lr}
    bl _expand_args_2_1
    bl inline__P5539_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
inline__P5539:
inline__P5539_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5539_locals:
    ldr r0, _ldlit_119 ; modules_BrailleDisplayClient__C3716_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_110 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_BrailleDisplayClient_constructor__P3717
_proccall306:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_120 ; inline__P5559_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #48]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onClient__P5437
_proccall307:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5539:
    @stackempty locals
.final_0_12:
    add sp, #4*1 ; pop locals 1
inline__P5539_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function brailledisplay.ts(3,61): inline
    ;
    .object inline__P5559 "brailledisplay.ts(3,61): inline"
inline__P5559_pre:
    .section code
    .balign 4
inline__P5559_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5559_args@fn
inline__P5559_args:
    cmp r4, #1
    bge inline__P5559_nochk
    push {lr}
    bl _expand_args_1_5
    bl inline__P5559_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
inline__P5559:
inline__P5559_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5559_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl modules_BrailleDisplayClient_showNumber__P3719
_proccall308:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5559:
    @stackempty locals
    movs r0, #0
.final_0_13:
inline__P5559_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_109:
 .word modules_AccelerometerClient__C3660_VT
_ldlit_110:
 .word _str89
_ldlit_111:
 .word inline__P5489_Lit
_ldlit_112:
 .word inline__P5494_Lit
_ldlit_113:
 .word inline__P5499_Lit
_ldlit_114:
 .word inline__P5504_Lit
_ldlit_115:
 .word inline__P5509_Lit
_ldlit_116:
 .word inline__P5514_Lit
_ldlit_117:
 .word modules_AirPressureClient__C3696_VT
_ldlit_118:
 .word inline__P5528_Lit
_ldlit_119:
 .word modules_BrailleDisplayClient__C3716_VT
_ldlit_120:
 .word inline__P5559_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function buzzer.ts(1,45): inline
    ;
    .object inline__P5568 "buzzer.ts(1,45): inline"
inline__P5568_pre:
    .section code
    .balign 4
inline__P5568_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5568_args@fn
inline__P5568_args:
    cmp r4, #2
    bge inline__P5568_nochk
    push {lr}
    bl _expand_args_2_1
    bl inline__P5568_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
inline__P5568:
inline__P5568_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5568_locals:
    ldr r0, _ldlit_122 ; modules_BuzzerClient__C3773_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_123 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_BuzzerClient_constructor__P3774
_proccall309:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_124 ; inline__P5588_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #52]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onClient__P5437
_proccall310:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5568:
    @stackempty locals
.final_0_14:
    add sp, #4*1 ; pop locals 1
inline__P5568_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function buzzer.ts(3,59): inline
    ;
    .object inline__P5588 "buzzer.ts(3,59): inline"
inline__P5588_pre:
    .section code
    .balign 4
inline__P5588_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5588_args@fn
inline__P5588_args:
    .section code
inline__P5588:
inline__P5588_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5588_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    bl _inst_machine_MicrobitMachine__C5435_validate_6
    ldr r0, [r0, #8]
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_BuzzerClient_playTone__P3775
_proccall311:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.5588:
    @stackempty locals
    movs r0, #0
.final_0_15:
    add sp, #4*1 ; pop locals 1
inline__P5588_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function button.ts(32,45): inline
    ;
    .object inline__P5624 "button.ts(32,45): inline"
inline__P5624_pre:
    .section code
    .balign 4
inline__P5624_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5624_args@fn
inline__P5624_args:
    cmp r4, #3
    bge inline__P5624_nochk
    push {lr}
    bl _expand_args_3_7
    bl inline__P5624_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
inline__P5624:
inline__P5624_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
inline__P5624_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #56]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    ldr r7, [r6, #0]
    str r0, [r7, #56]
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #60]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #60]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #64]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #68]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #68]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, _ldlit_125 ; modules_ButtonClient__C3745_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_123 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_ButtonClient_constructor__P3746
_proccall312:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, _ldlit_126 ; inline__P5670_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl modules_ButtonClient_onUp__P3754
_proccall313:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_127 ; inline__P5675_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl modules_ButtonClient_onDown__P3753
_proccall314:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_128 ; inline__P5683_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl modules_ButtonClient_onHold__P3755
_proccall315:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@4]
.ret.5624:
    @stackempty locals
.final_0_16:
    add sp, #4*5 ; pop locals 5
inline__P5624_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function button.ts(39,17): inline
    ;
    .object inline__P5670 "button.ts(39,17): inline"
inline__P5670_pre:
    .section code
    .balign 4
inline__P5670_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5670_args@fn
inline__P5670_args:
    .section code
inline__P5670:
inline__P5670_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5670_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl basic::clearScreen
    @stackempty locals
.ret.5670:
    @stackempty locals
    movs r0, #0
.final_0_17:
inline__P5670_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function button.ts(42,19): inline
    ;
    .object inline__P5675 "button.ts(42,19): inline"
inline__P5675_pre:
    .section code
    .balign 4
inline__P5675_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5675_args@fn
inline__P5675_args:
    .section code
inline__P5675:
inline__P5675_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5675_locals:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl basic_showIcon__P2281
_proccall316:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    bl machine_scheduleTone__P4694
_proccall317:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5675:
    @stackempty locals
    movs r0, #0
.final_0_18:
inline__P5675_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function button.ts(46,19): inline
    ;
    .object inline__P5683 "button.ts(46,19): inline"
inline__P5683_pre:
    .section code
    .balign 4
inline__P5683_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5683_args@fn
inline__P5683_args:
    .section code
inline__P5683:
inline__P5683_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5683_locals:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl basic_showIcon__P2281
_proccall318:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5683:
    @stackempty locals
    movs r0, #0
.final_0_19:
inline__P5683_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function gamepad.ts(17,46): inline
    ;
    .object inline__P5689 "gamepad.ts(17,46): inline"
inline__P5689_pre:
    .section code
    .balign 4
inline__P5689_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5689_args@fn
inline__P5689_args:
    cmp r4, #1
    bge inline__P5689_nochk
    push {lr}
    bl _expand_args_1_5
    bl inline__P5689_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_122:
 .word modules_BuzzerClient__C3773_VT
_ldlit_123:
 .word _str89
_ldlit_124:
 .word inline__P5588_Lit
_ldlit_125:
 .word modules_ButtonClient__C3745_VT
_ldlit_126:
 .word inline__P5670_Lit
_ldlit_127:
 .word inline__P5675_Lit
_ldlit_128:
 .word inline__P5683_Lit
.object POP
    .section code
inline__P5689:
inline__P5689_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5689_locals:
    ldr r0, _ldlit_130 ; modules_GamepadClient__C3856_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_GamepadClient_constructor__P3857
_proccall319:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_131 ; inline__P5697_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_onStateChanged__P3269
_proccall320:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5689:
    @stackempty locals
.final_0_20:
    add sp, #4*1 ; pop locals 1
inline__P5689_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function gamepad.ts(19,27): inline
    ;
    .object inline__P5697 "gamepad.ts(19,27): inline"
inline__P5697_pre:
    .section code
    .balign 4
inline__P5697_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5697_args@fn
inline__P5697_args:
    .section code
inline__P5697:
inline__P5697_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5697_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_GamepadClient_x__P3859
_proccall321:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_GamepadClient_y__P3860
_proccall322:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl plot__P4682
_proccall323:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5697:
    @stackempty locals
    movs r0, #0
.final_0_21:
inline__P5697_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function humidity.ts(1,47): inline
    ;
    .object inline__P5710 "humidity.ts(1,47): inline"
inline__P5710_pre:
    .section code
    .balign 4
inline__P5710_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5710_args@fn
inline__P5710_args:
    cmp r4, #1
    bge inline__P5710_nochk
    push {lr}
    bl _expand_args_1_5
    bl inline__P5710_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
inline__P5710:
inline__P5710_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5710_locals:
    ldr r0, _ldlit_132 ; modules_HumidityClient__C4197_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_HumidityClient_constructor__P4198
_proccall324:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_133 ; inline__P5718_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_HumidityClient_onHumidityChangedBy__P4203
_proccall325:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5710:
    @stackempty locals
.final_0_22:
    add sp, #4*1 ; pop locals 1
inline__P5710_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function humidity.ts(3,35): inline
    ;
    .object inline__P5718 "humidity.ts(3,35): inline"
inline__P5718_pre:
    .section code
    .balign 4
inline__P5718_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5718_args@fn
inline__P5718_args:
    .section code
inline__P5718:
inline__P5718_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5718_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_HumidityClient_humidity__P4199
_proccall326:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #49
    push {r0} ; proc-arg
    bl machine_showNumber__P4673
_proccall327:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5718:
    @stackempty locals
    movs r0, #0
.final_0_23:
    add sp, #4*1 ; pop locals 1
inline__P5718_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function led.ts(3,42): inline
    ;
    .object inline__P5733 "led.ts(3,42): inline"
inline__P5733_pre:
    .section code
    .balign 4
inline__P5733_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5733_args@fn
inline__P5733_args:
    cmp r4, #2
    bge inline__P5733_nochk
    push {lr}
    bl _expand_args_2_1
    bl inline__P5733_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
inline__P5733:
inline__P5733_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
inline__P5733_locals:
    ldr r0, _ldlit_134 ; modules_LedClient__C4237_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_135 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_LedClient_constructor__P4238
_proccall328:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_136 ; inline__P5753_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onClient__P5437
_proccall329:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_137 ; inline__P5761_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #76]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onClient__P5437
_proccall330:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_138 ; inline__P5770_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #48]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onClient__P5437
_proccall331:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_139 ; inline__P5780_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #80]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onClient__P5437
_proccall332:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_LedClient_numPixels__P4242
_proccall333:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    movs r0, #7
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_min__P2023
_proccall334:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.5812:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.5812      
.jmpz335:
    movs r0, #30
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_LedClient_setPixelColor__P4254
_proccall336:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.5812:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.5812      
.brk.5812:
    ldr r0, [sp, locals@0]
.ret.5733:
    @stackempty locals
.final_0_24:
    add sp, #4*3 ; pop locals 3
inline__P5733_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function led.ts(6,56): inline
    ;
    .object inline__P5753 "led.ts(6,56): inline"
inline__P5753_pre:
    .section code
    .balign 4
inline__P5753_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5753_args@fn
inline__P5753_args:
    .section code
inline__P5753:
inline__P5753_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5753_locals:
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_LedClient_rotate__P4258
_proccall337:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5753:
    @stackempty locals
    movs r0, #0
.final_0_25:
inline__P5753_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function led.ts(10,56): inline
    ;
    .object inline__P5761 "led.ts(10,56): inline"
inline__P5761_pre:
    .section code
    .balign 4
inline__P5761_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5761_args@fn
inline__P5761_args:
    .section code
inline__P5761:
inline__P5761_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5761_locals:
    movs r0, #1
    negs r0, r0
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_LedClient_rotate__P4258
_proccall338:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5761:
    @stackempty locals
    movs r0, #0
.final_0_26:
inline__P5761_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_130:
 .word modules_GamepadClient__C3856_VT
_ldlit_131:
 .word inline__P5697_Lit
_ldlit_132:
 .word modules_HumidityClient__C4197_VT
_ldlit_133:
 .word inline__P5718_Lit
_ldlit_134:
 .word modules_LedClient__C4237_VT
_ldlit_135:
 .word _str89
_ldlit_136:
 .word inline__P5753_Lit
_ldlit_137:
 .word inline__P5761_Lit
_ldlit_138:
 .word inline__P5770_Lit
_ldlit_139:
 .word inline__P5780_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function led.ts(14,61): inline
    ;
    .object inline__P5770 "led.ts(14,61): inline"
inline__P5770_pre:
    .section code
    .balign 4
inline__P5770_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5770_args@fn
inline__P5770_args:
    cmp r4, #1
    bge inline__P5770_nochk
    push {lr}
    bl _expand_args_1_5
    bl inline__P5770_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
inline__P5770:
inline__P5770_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5770_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_LedClient_setBrightness__P4240
_proccall339:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5770:
    @stackempty locals
    movs r0, #0
.final_0_27:
inline__P5770_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function led.ts(18,57): inline
    ;
    .object inline__P5780 "led.ts(18,57): inline"
inline__P5780_pre:
    .section code
    .balign 4
inline__P5780_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5780_args@fn
inline__P5780_args:
    .section code
inline__P5780:
inline__P5780_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
inline__P5780_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_LedClient_numPixels__P4242
_proccall340:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.5787:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.5787      
.jmpz341:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #84]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl modules_LedClient_setPixelColor__P4254
_proccall342:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #84]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_28      
.jmpz343:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.else_0_28:
.afterif_1_28:
.cont.5787:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.5787      
.brk.5787:
.ret.5780:
    @stackempty locals
    movs r0, #0
.final_2_28:
    add sp, #4*3 ; pop locals 3
inline__P5780_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function potentiometer.ts(1,52): inline
    ;
    .object inline__P5823 "potentiometer.ts(1,52): inline"
inline__P5823_pre:
    .section code
    .balign 4
inline__P5823_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5823_args@fn
inline__P5823_args:
    cmp r4, #3
    bge inline__P5823_nochk
    push {lr}
    bl _expand_args_3_7
    bl inline__P5823_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
inline__P5823:
inline__P5823_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5823_locals:
    ldr r0, _ldlit_141 ; modules_PotentiometerClient__C4403_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_142 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_PotentiometerClient_constructor__P4404
_proccall344:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #2
    ldr r1, _ldlit_143 ; inline__P5841_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_PotentiometerClient_onPositionChangedBy__P4407
_proccall345:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5823:
    @stackempty locals
.final_0_29:
    add sp, #4*1 ; pop locals 1
inline__P5823_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function potentiometer.ts(3,35): inline
    ;
    .object inline__P5841 "potentiometer.ts(3,35): inline"
inline__P5841_pre:
    .section code
    .balign 4
inline__P5841_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5841_args@fn
inline__P5841_args:
    .section code
inline__P5841:
inline__P5841_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5841_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_PotentiometerClient_position__P4405
_proccall346:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl machine_plot__P4695
_proccall347:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #48]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626
_proccall348:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.5841:
    @stackempty locals
    movs r0, #0
.final_0_30:
    add sp, #4*1 ; pop locals 1
inline__P5841_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function magneticfieldlevel.ts(1,59): inline
    ;
    .object inline__P5856 "magneticfieldlevel.ts(1,59): inline"
inline__P5856_pre:
    .section code
    .balign 4
inline__P5856_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5856_args@fn
inline__P5856_args:
    cmp r4, #3
    bge inline__P5856_nochk
    push {lr}
    bl _expand_args_3_7
    bl inline__P5856_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
inline__P5856:
inline__P5856_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5856_locals:
    ldr r0, _ldlit_144 ; modules_MagneticFieldLevelClient__C4379_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_MagneticFieldLevelClient_constructor__P4380
_proccall349:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #2
    ldr r1, _ldlit_145 ; inline__P5866_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_MagneticFieldLevelClient_onStrengthChangedBy__P4384
_proccall350:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5856:
    @stackempty locals
.final_0_31:
    add sp, #4*1 ; pop locals 1
inline__P5856_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function magneticfieldlevel.ts(3,35): inline
    ;
    .object inline__P5866 "magneticfieldlevel.ts(3,35): inline"
inline__P5866_pre:
    .section code
    .balign 4
inline__P5866_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5866_args@fn
inline__P5866_args:
    .section code
inline__P5866:
inline__P5866_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5866_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_MagneticFieldLevelClient_strength__P4381
_proccall351:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl machine_plot__P4695
_proccall352:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.5866:
    @stackempty locals
    movs r0, #0
.final_0_32:
    add sp, #4*1 ; pop locals 1
inline__P5866_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function lightlevel.ts(1,50): inline
    ;
    .object inline__P5877 "lightlevel.ts(1,50): inline"
inline__P5877_pre:
    .section code
    .balign 4
inline__P5877_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5877_args@fn
inline__P5877_args:
    cmp r4, #3
    bge inline__P5877_nochk
    push {lr}
    bl _expand_args_3_7
    bl inline__P5877_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
inline__P5877:
inline__P5877_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5877_locals:
    ldr r0, _ldlit_146 ; modules_LightLevelClient__C4350_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_142 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_LightLevelClient_constructor__P4351
_proccall353:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #2
    ldr r1, _ldlit_147 ; inline__P5895_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_LightLevelClient_onLightLevelChangedBy__P4355
_proccall354:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5877:
    @stackempty locals
.final_0_33:
    add sp, #4*1 ; pop locals 1
inline__P5877_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function lightlevel.ts(3,38): inline
    ;
    .object inline__P5895 "lightlevel.ts(3,38): inline"
inline__P5895_pre:
    .section code
    .balign 4
inline__P5895_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5895_args@fn
inline__P5895_args:
    .section code
inline__P5895:
inline__P5895_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5895_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_LightLevelClient_lightLevel__P4352
_proccall355:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl machine_plot__P4695
_proccall356:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.5895:
    @stackempty locals
    movs r0, #0
.final_0_34:
inline__P5895_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function relay.ts(1,44): inline
    ;
    .object inline__P5903 "relay.ts(1,44): inline"
inline__P5903_pre:
    .section code
    .balign 4
inline__P5903_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5903_args@fn
inline__P5903_args:
    cmp r4, #2
    bge inline__P5903_nochk
    push {lr}
    bl _expand_args_2_1
    bl inline__P5903_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
inline__P5903:
inline__P5903_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5903_locals:
    ldr r0, _ldlit_148 ; modules_RelayClient__C4425_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_142 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_RelayClient_constructor__P4426
_proccall357:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_149 ; inline__P5922_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #80]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onClient__P5437
_proccall358:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5903:
    @stackempty locals
.final_0_35:
    add sp, #4*1 ; pop locals 1
inline__P5903_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_141:
 .word modules_PotentiometerClient__C4403_VT
_ldlit_142:
 .word _str89
_ldlit_143:
 .word inline__P5841_Lit
_ldlit_144:
 .word modules_MagneticFieldLevelClient__C4379_VT
_ldlit_145:
 .word inline__P5866_Lit
_ldlit_146:
 .word modules_LightLevelClient__C4350_VT
_ldlit_147:
 .word inline__P5895_Lit
_ldlit_148:
 .word modules_RelayClient__C4425_VT
_ldlit_149:
 .word inline__P5922_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function relay.ts(3,57): inline
    ;
    .object inline__P5922 "relay.ts(3,57): inline"
inline__P5922_pre:
    .section code
    .balign 4
inline__P5922_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5922_args@fn
inline__P5922_args:
    .section code
inline__P5922:
inline__P5922_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5922_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_RelayClient_active__P4427
_proccall359:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_RelayClient_setActive__P4428
_proccall360:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_151 ; inline__P5932_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control_runInBackground__P2298
_proccall361:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5922:
    @stackempty locals
    movs r0, #0
.final_0_36:
    add sp, #4*1 ; pop locals 1
inline__P5922_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function relay.ts(6,33): inline
    ;
    .object inline__P5932 "relay.ts(6,33): inline"
inline__P5932_pre:
    .section code
    .balign 4
inline__P5932_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5932_args@fn
inline__P5932_args:
    .section code
inline__P5932:
inline__P5932_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5932_locals:
    bl music_stopAllSounds__P2559
_proccall362:
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl led::stopAnimation
    @stackempty locals
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_37      
.jmpz363:
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    bl basic_showIcon__P2281
_proccall364:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_1_37      
.else_0_37:
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    bl basic_showIcon__P2281
_proccall365:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_37:
.ret.5932:
    @stackempty locals
    movs r0, #0
.final_2_37:
inline__P5932_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function rotaryencoder.ts(1,53): inline
    ;
    .object inline__P5944 "rotaryencoder.ts(1,53): inline"
inline__P5944_pre:
    .section code
    .balign 4
inline__P5944_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5944_args@fn
inline__P5944_args:
    cmp r4, #3
    bge inline__P5944_nochk
    push {lr}
    bl _expand_args_3_7
    bl inline__P5944_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
inline__P5944:
inline__P5944_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
inline__P5944_locals:
    ldr r0, _ldlit_152 ; modules_RotaryEncoderClient__C4443_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_153 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_RotaryEncoderClient_constructor__P4444
_proccall366:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    movs r0, #2
    ldr r1, _ldlit_154 ; inline__P5965_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_RotaryEncoderClient_onPositionChanged__P4448
_proccall367:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5944:
    @stackempty locals
.final_0_38:
    add sp, #4*2 ; pop locals 2
inline__P5944_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function rotaryencoder.ts(5,30): inline
    ;
    .object inline__P5965 "rotaryencoder.ts(5,30): inline"
inline__P5965_pre:
    .section code
    .balign 4
inline__P5965_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5965_args@fn
inline__P5965_args:
    cmp r4, #1
    bge inline__P5965_nochk
    push {lr}
    bl _expand_args_1_5
    bl inline__P5965_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
inline__P5965:
inline__P5965_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P5965_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_gt
    beq .condexprz_0_39      
.jmpz368:
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    b .condexprfin_1_39      
.condexprz_0_39:
    ldr r7, [r6, #0]
    ldr r0, [r7, #76]
.condexprfin_1_39:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626
_proccall369:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    ldr r1, [sp, args@0]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    movs r1, #25
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    movs r0, #25
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl machine_plot__P4695
_proccall370:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.5965:
    @stackempty locals
    movs r0, #0
.final_2_39:
inline__P5965_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function servo.ts(1,44): inline
    ;
    .object inline__P5986 "servo.ts(1,44): inline"
inline__P5986_pre:
    .section code
    .balign 4
inline__P5986_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P5986_args@fn
inline__P5986_args:
    cmp r4, #2
    bge inline__P5986_nochk
    push {lr}
    bl _expand_args_2_1
    bl inline__P5986_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
inline__P5986:
inline__P5986_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P5986_locals:
    ldr r0, _ldlit_155 ; modules_ServoClient__C4477_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_153 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_ServoClient_constructor__P4478
_proccall371:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_156 ; inline__P6006_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onControlEvent__P5438
_proccall372:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_157 ; inline__P6022_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onControlEvent__P5438
_proccall373:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.5986:
    @stackempty locals
.final_0_40:
    add sp, #4*1 ; pop locals 1
inline__P5986_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function servo.ts(7,9): inline
    ;
    .object inline__P6006 "servo.ts(7,9): inline"
inline__P6006_pre:
    .section code
    .balign 4
inline__P6006_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6006_args@fn
inline__P6006_args:
    .section code
inline__P6006:
inline__P6006_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P6006_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_ServoClient_minAngle__P4487
_proccall375:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_41      
.jmpz374:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_41      
.lazySkip_1_41:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #179
    negs r0, r0
.lazy_0_41:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_ServoClient_setAngle__P4480
_proccall376:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.6006:
    @stackempty locals
    movs r0, #0
.final_2_41:
    add sp, #4*1 ; pop locals 1
inline__P6006_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_151:
 .word inline__P5932_Lit
_ldlit_152:
 .word modules_RotaryEncoderClient__C4443_VT
_ldlit_153:
 .word _str89
_ldlit_154:
 .word inline__P5965_Lit
_ldlit_155:
 .word modules_ServoClient__C4477_VT
_ldlit_156:
 .word inline__P6006_Lit
_ldlit_157:
 .word inline__P6022_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function servo.ts(16,9): inline
    ;
    .object inline__P6022 "servo.ts(16,9): inline"
inline__P6022_pre:
    .section code
    .balign 4
inline__P6022_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6022_args@fn
inline__P6022_args:
    .section code
inline__P6022:
inline__P6022_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P6022_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_ServoClient_maxAngle__P4490
_proccall378:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_42      
.jmpz377:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_42      
.lazySkip_1_42:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #181
.lazy_0_42:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_ServoClient_setAngle__P4480
_proccall379:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.6022:
    @stackempty locals
    movs r0, #0
.final_2_42:
    add sp, #4*1 ; pop locals 1
inline__P6022_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function switch.ts(1,45): inline
    ;
    .object inline__P6034 "switch.ts(1,45): inline"
inline__P6034_pre:
    .section code
    .balign 4
inline__P6034_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6034_args@fn
inline__P6034_args:
    cmp r4, #2
    bge inline__P6034_nochk
    push {lr}
    bl _expand_args_2_1
    bl inline__P6034_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
inline__P6034:
inline__P6034_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P6034_locals:
    ldr r0, _ldlit_159 ; modules_SwitchClient__C4523_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_160 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_SwitchClient_constructor__P4524
_proccall380:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_161 ; inline__P6051_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_SwitchClient_onOff__P4529
_proccall381:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_162 ; inline__P6056_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_SwitchClient_onOff__P4529
_proccall382:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.6034:
    @stackempty locals
.final_0_43:
    add sp, #4*1 ; pop locals 1
inline__P6034_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function switch.ts(3,18): inline
    ;
    .object inline__P6051 "switch.ts(3,18): inline"
inline__P6051_pre:
    .section code
    .balign 4
inline__P6051_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6051_args@fn
inline__P6051_args:
    .section code
inline__P6051:
inline__P6051_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6051_locals:
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    bl basic_showIcon__P2281
_proccall383:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.6051:
    @stackempty locals
    movs r0, #0
.final_0_44:
inline__P6051_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function switch.ts(6,18): inline
    ;
    .object inline__P6056 "switch.ts(6,18): inline"
inline__P6056_pre:
    .section code
    .balign 4
inline__P6056_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6056_args@fn
inline__P6056_args:
    .section code
inline__P6056:
inline__P6056_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6056_locals:
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    bl basic_showIcon__P2281
_proccall384:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.6056:
    @stackempty locals
    movs r0, #0
.final_0_45:
inline__P6056_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function temperature.ts(1,50): inline
    ;
    .object inline__P6062 "temperature.ts(1,50): inline"
inline__P6062_pre:
    .section code
    .balign 4
inline__P6062_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6062_args@fn
inline__P6062_args:
    cmp r4, #2
    bge inline__P6062_nochk
    push {lr}
    bl _expand_args_2_1
    bl inline__P6062_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
inline__P6062:
inline__P6062_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P6062_locals:
    ldr r0, _ldlit_163 ; modules_TemperatureClient__C4551_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_160 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_TemperatureClient_constructor__P4552
_proccall385:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_164 ; inline__P6079_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_TemperatureClient_onTemperatureChangedBy__P4558
_proccall386:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.6062:
    @stackempty locals
.final_0_46:
    add sp, #4*1 ; pop locals 1
inline__P6062_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function temperature.ts(3,38): inline
    ;
    .object inline__P6079 "temperature.ts(3,38): inline"
inline__P6079_pre:
    .section code
    .balign 4
inline__P6079_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6079_args@fn
inline__P6079_args:
    .section code
inline__P6079:
inline__P6079_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P6079_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_TemperatureClient_temperature__P4553
_proccall387:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #33
    push {r0} ; proc-arg
    bl machine_showNumber__P4673
_proccall388:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.6079:
    @stackempty locals
    movs r0, #0
.final_0_47:
    add sp, #4*1 ; pop locals 1
inline__P6079_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function distance.ts(1,47): inline
    ;
    .object inline__P6090 "distance.ts(1,47): inline"
inline__P6090_pre:
    .section code
    .balign 4
inline__P6090_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6090_args@fn
inline__P6090_args:
    cmp r4, #3
    bge inline__P6090_nochk
    push {lr}
    bl _expand_args_3_7
    bl inline__P6090_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
inline__P6090:
inline__P6090_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P6090_locals:
    ldr r0, _ldlit_165 ; modules_DistanceClient__C3797_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_DistanceClient_constructor__P3798
_proccall389:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #2
    ldr r1, _ldlit_166 ; inline__P6100_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, _ldlit_167 ; _dbl249      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl modules_DistanceClient_onDistanceChangedBy__P3804
_proccall390:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.6090:
    @stackempty locals
.final_0_48:
    add sp, #4*1 ; pop locals 1
inline__P6090_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function distance.ts(3,38): inline
    ;
    .object inline__P6100 "distance.ts(3,38): inline"
inline__P6100_pre:
    .section code
    .balign 4
inline__P6100_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6100_args@fn
inline__P6100_args:
    .section code
inline__P6100:
inline__P6100_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P6100_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_DistanceClient_distance__P3799
_proccall391:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    ldr r0, _ldlit_168 ; _dbl250      
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_clamp__P2019
_proccall392:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, _ldlit_168 ; _dbl250      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl machine_plot__P4695
_proccall393:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.6100:
    @stackempty locals
    movs r0, #0
.final_0_49:
    add sp, #4*1 ; pop locals 1
inline__P6100_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function vibrationmotor.ts(1,54): inline
    ;
    .object inline__P6116 "vibrationmotor.ts(1,54): inline"
inline__P6116_pre:
    .section code
    .balign 4
inline__P6116_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6116_args@fn
inline__P6116_args:
    cmp r4, #2
    bge inline__P6116_nochk
    push {lr}
    bl _expand_args_2_1
    bl inline__P6116_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_159:
 .word modules_SwitchClient__C4523_VT
_ldlit_160:
 .word _str89
_ldlit_161:
 .word inline__P6051_Lit
_ldlit_162:
 .word inline__P6056_Lit
_ldlit_163:
 .word modules_TemperatureClient__C4551_VT
_ldlit_164:
 .word inline__P6079_Lit
_ldlit_165:
 .word modules_DistanceClient__C3797_VT
_ldlit_166:
 .word inline__P6100_Lit
_ldlit_167:
 .word _dbl249
_ldlit_168:
 .word _dbl250
.object POP
    .section code
inline__P6116:
inline__P6116_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P6116_locals:
    ldr r0, _ldlit_170 ; modules_VibrationMotorClient__C4571_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_171 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_VibrationMotorClient_constructor__P4572
_proccall394:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_172 ; inline__P6135_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onClient__P5437
_proccall395:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_173 ; inline__P6145_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #76]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onClient__P5437
_proccall396:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_174 ; inline__P6155_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #52]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onClient__P5437
_proccall397:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.6116:
    @stackempty locals
.final_0_50:
    add sp, #4*1 ; pop locals 1
inline__P6116_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function vibrationmotor.ts(3,56): inline
    ;
    .object inline__P6135 "vibrationmotor.ts(3,56): inline"
inline__P6135_pre:
    .section code
    .balign 4
inline__P6135_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6135_args@fn
inline__P6135_args:
    .section code
inline__P6135:
inline__P6135_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6135_locals:
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_VibrationMotorClient_vibrate__P4573
_proccall398:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.ret.6135:
    @stackempty locals
    movs r0, #0
.final_0_51:
inline__P6135_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function vibrationmotor.ts(6,56): inline
    ;
    .object inline__P6145 "vibrationmotor.ts(6,56): inline"
inline__P6145_pre:
    .section code
    .balign 4
inline__P6145_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6145_args@fn
inline__P6145_args:
    .section code
inline__P6145:
inline__P6145_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6145_locals:
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    movs r0, #121
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #33
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_VibrationMotorClient_vibrate__P4573
_proccall399:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.ret.6145:
    @stackempty locals
    movs r0, #0
.final_0_52:
inline__P6145_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function vibrationmotor.ts(9,59): inline
    ;
    .object inline__P6155 "vibrationmotor.ts(9,59): inline"
inline__P6155_pre:
    .section code
    .balign 4
inline__P6155_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6155_args@fn
inline__P6155_args:
    .section code
inline__P6155:
inline__P6155_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
inline__P6155_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    bl _inst_machine_MicrobitMachine__C5435_validate_6
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl Math_abs__P2020
_proccall400:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    movs r0, #15
    lsls r0, r0, #8
    adds r0, #161
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl pins_map__P2588
_proccall401:
    add sp, #4*5 ; pop locals 5
    push {r0} ; the one arg
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    bl Math_clamp__P2019
_proccall402:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #81
    push {r0} ; proc-arg
    movs r0, #15
    lsls r0, r0, #8
    adds r0, #161
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl pins_map__P2588
_proccall403:
    add sp, #4*5 ; pop locals 5
    push {r0} ; the one arg
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #81
    push {r0} ; proc-arg
    bl Math_clamp__P2019
_proccall404:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_VibrationMotorClient_vibrate__P4573
_proccall405:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.ret.6155:
    @stackempty locals
    movs r0, #0
.final_0_53:
    add sp, #4*3 ; pop locals 3
inline__P6155_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function hidkeyboard.ts(1,51): inline
    ;
    .object inline__P6181 "hidkeyboard.ts(1,51): inline"
inline__P6181_pre:
    .section code
    .balign 4
inline__P6181_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6181_args@fn
inline__P6181_args:
    cmp r4, #2
    bge inline__P6181_nochk
    push {lr}
    bl _expand_args_2_1
    bl inline__P6181_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
inline__P6181:
inline__P6181_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
inline__P6181_locals:
    ldr r0, _ldlit_175 ; modules_HidKeyboardClient__C4151_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_171 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl modules_HidKeyboardClient_constructor__P4152
_proccall406:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_176 ; inline__P6201_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onControlEvent__P5438
_proccall407:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_177 ; inline__P6213_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onControlEvent__P5438
_proccall408:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_178 ; inline__P6225_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onControlEvent__P5438
_proccall409:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.6181:
    @stackempty locals
.final_0_54:
    add sp, #4*1 ; pop locals 1
inline__P6181_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_170:
 .word modules_VibrationMotorClient__C4571_VT
_ldlit_171:
 .word _str89
_ldlit_172:
 .word inline__P6135_Lit
_ldlit_173:
 .word inline__P6145_Lit
_ldlit_174:
 .word inline__P6155_Lit
_ldlit_175:
 .word modules_HidKeyboardClient__C4151_VT
_ldlit_176:
 .word inline__P6201_Lit
_ldlit_177:
 .word inline__P6213_Lit
_ldlit_178:
 .word inline__P6225_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function hidkeyboard.ts(7,9): inline
    ;
    .object inline__P6201 "hidkeyboard.ts(7,9): inline"
inline__P6201_pre:
    .section code
    .balign 4
inline__P6201_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6201_args@fn
inline__P6201_args:
    .section code
inline__P6201:
inline__P6201_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6201_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #161
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_HidKeyboardClient_key__P4153
_proccall410:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.ret.6201:
    @stackempty locals
    movs r0, #0
.final_0_55:
inline__P6201_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function hidkeyboard.ts(15,9): inline
    ;
    .object inline__P6213 "hidkeyboard.ts(15,9): inline"
inline__P6213_pre:
    .section code
    .balign 4
inline__P6213_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6213_args@fn
inline__P6213_args:
    .section code
inline__P6213:
inline__P6213_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6213_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #159
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_HidKeyboardClient_key__P4153
_proccall411:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.ret.6213:
    @stackempty locals
    movs r0, #0
.final_0_56:
inline__P6213_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function hidkeyboard.ts(23,9): inline
    ;
    .object inline__P6225 "hidkeyboard.ts(23,9): inline"
inline__P6225_pre:
    .section code
    .balign 4
inline__P6225_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word inline__P6225_args@fn
inline__P6225_args:
    .section code
inline__P6225:
inline__P6225_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
inline__P6225_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #89
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_HidKeyboardClient_key__P4153
_proccall412:
    add sp, #4*6 ; pop locals 6
    @stackempty locals
.ret.6225:
    @stackempty locals
    movs r0, #0
.final_0_57:
inline__P6225_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(311,5): music.setTempo
    ;
    .object music_setTempo__P2546 "core/music.ts(311,5): music.setTempo"
music_setTempo__P2546_pre:
    .section code
    .balign 4
    .section code
music_setTempo__P2546:
music_setTempo__P2546_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_setTempo__P2546_locals:
    bl music_init__P4810
_proccall413:
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall415:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_58      
.jmpz414:
    b .ret.2546      
.else_0_58:
.afterif_1_58:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_gt
    beq .else_2_58      
.jmpz416:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    bl Math_max__P2022
_proccall417:
    add sp, #4*2 ; pop locals 2
    ldr r7, [r6, #0]
    str r0, [r7, #88]
    @stackempty locals
.else_2_58:
.afterif_3_58:
.ret.2546:
    @stackempty locals
    movs r0, #0
.final_4_58:
music_setTempo__P2546_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(559,5): Math.max
    ;
    .object Math_max__P2022 "core/pxt-helpers.ts(559,5): Math.max"
Math_max__P2022_pre:
    .section code
    .balign 4
    .section code
Math_max__P2022:
Math_max__P2022_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_max__P2022_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_ge
    beq .else_0_59      
.jmpz418:
    ldr r0, [sp, args@0]
    b .ret.2022      
.else_0_59:
.afterif_1_59:
    ldr r0, [sp, args@1]
.ret.2022:
    @stackempty locals
.final_2_59:
Math_max__P2022_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(13,1): isNaN
    ;
    .object isNaN__P1985 "core/pxt-helpers.ts(13,1): isNaN"
isNaN__P1985_pre:
    .section code
    .balign 4
    .section code
isNaN__P1985:
isNaN__P1985_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
isNaN__P1985_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _numops_subs
    str r0, [sp, args@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*2 ; pop locals 2
.ret.1985:
    @stackempty locals
.final_0_60:
isNaN__P1985_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(251,5): music.init
    ;
    .object music_init__P4810 "core/music.ts(251,5): music.init"
music_init__P4810_pre:
    .section code
    .balign 4
    .section code
music_init__P4810:
music_init__P4810_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_init__P4810_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #88]
    movs r1, #1
    bl _cmp_le
    beq .else_0_61      
.jmpz419:
    movs r0, #241
    ldr r7, [r6, #0]
    str r0, [r7, #88]
    @stackempty locals
.else_0_61:
.afterif_1_61:
.ret.4810:
    @stackempty locals
    movs r0, #0
.final_2_61:
music_init__P4810_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-hid-keyboard/client.ts(293,9): modules.HidKeyboardClient.key
    ;
    .object modules_HidKeyboardClient_key__P4153 "jacdac-hid-keyboard/client.ts(293,9): modules.HidKeyboardClient.key"
modules_HidKeyboardClient_key__P4153_pre:
    .section code
    .balign 4
modules_HidKeyboardClient_key__P4153_args:
    cmp r4, #6
    bge modules_HidKeyboardClient_key__P4153_nochk
    push {lr}
    bl _expand_args_6_10
    bl modules_HidKeyboardClient_key__P4153_nochk
    @dummystack 6
    add sp, #4*6
    pop {pc}
    .section code
modules_HidKeyboardClient_key__P4153:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_HidKeyboardClient__C4151_validate_11
    mov lr, r7
modules_HidKeyboardClient_key__P4153_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
modules_HidKeyboardClient_key__P4153_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall420:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall422:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_62      
.jmpz421:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_62:
.afterif_1_62:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall424:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_62      
.jmpz423:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_62:
.afterif_3_62:
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall426:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_62      
.jmpz425:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_62:
.afterif_5_62:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #92]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdpacked__P2919
_proccall427:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Client_sendCommand__P3564_nochk
_proccall428:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4153:
    @stackempty locals
    movs r0, #0
.final_6_62:
    add sp, #4*2 ; pop locals 2
modules_HidKeyboardClient_key__P4153_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(77,9): jacdac.JDPacket.jdpacked
    ;
    .object jacdac_JDPacket_jdpacked__P2919 "jacdac/packet.ts(77,9): jacdac.JDPacket.jdpacked"
jacdac_JDPacket_jdpacked__P2919_pre:
    .section code
    .balign 4
jacdac_JDPacket_jdpacked__P2919_args:
    cmp r4, #3
    bge jacdac_JDPacket_jdpacked__P2919_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_JDPacket_jdpacked__P2919_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_JDPacket_jdpacked__P2919:
jacdac_JDPacket_jdpacked__P2919_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_jdpacked__P2919_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P2967
_proccall429:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_from__P2916
_proccall430:
    add sp, #4*2 ; pop locals 2
.ret.2919:
    @stackempty locals
.final_0_63:
jacdac_JDPacket_jdpacked__P2919_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(366,5): jacdac.jdpack
    ;
    .object jacdac_jdpack__P2967 "jacdac/pack.ts(366,5): jacdac.jdpack"
jacdac_jdpack__P2967_pre:
    .section code
    .balign 4
    .section code
jacdac_jdpack__P2967:
jacdac_jdpack__P2967_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_jdpack__P2967_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_64      
.jmpz431:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_64      
.lazySkip_2_64:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_64:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_64      
.jmpz432:
    movs r0, #0
    b .ret.2967      
.else_0_64:
.afterif_3_64:
    ldr r0, _ldlit_180 ; _catch_6334      
    bl _pxt_save_exception_state
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #6
    push {r0} ; proc-arg
    bl jacdac_jdpackCore__P4972
_proccall433:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl jacdac_jdpackCore__P4972
_proccall434:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    ldr r0, [sp, locals@1]
    b .ret.2967      
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    b .catchend_6_64      
_catch_6334:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getThrownValue
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl console_error__P2382
_proccall435:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    b .ret.2967      
.catchend_6_64:
    movs r0, #0
.ret.2967:
    @stackempty locals
.final_7_64:
    add sp, #4*3 ; pop locals 3
jacdac_jdpack__P2967_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(46,5): console.error
    ;
    .object console_error__P2382 "core/console.ts(46,5): console.error"
console_error__P2382_pre:
    .section code
    .balign 4
    .section code
console_error__P2382:
console_error__P2382_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_error__P2382_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    bl console_add__P2379
_proccall436:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2382:
    @stackempty locals
    movs r0, #0
.final_0_65:
console_error__P2382_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(26,5): console.add
    ;
    .object console_add__P2379 "core/console.ts(26,5): console.add"
console_add__P2379_pre:
    .section code
    .balign 4
    .section code
console_add__P2379:
console_add__P2379_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
console_add__P2379_locals:
    ldr r0, [sp, args@0]
    ldr r7, [r6, #0]
    ldr r1, [r7, #96]
    bl _cmp_lt
    beq .else_0_66      
.jmpz437:
    b .ret.2379      
.else_0_66:
.afterif_1_66:
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl console_inspect__P2385
_proccall438:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_181 ; _str58      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl control::__log
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_66      
.jmpz439:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.6377:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.6377      
.jmpz440:
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    push {r3} ; the one arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_15
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.6377:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.6377      
.brk.6377:
.else_2_66:
.afterif_3_66:
.ret.2379:
    @stackempty locals
    movs r0, #0
.final_4_66:
    add sp, #4*2 ; pop locals 2
console_add__P2379_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(76,5): console.inspect
    ;
    .object console_inspect__P2385 "core/console.ts(76,5): console.inspect"
console_inspect__P2385_pre:
    .section code
    .balign 4
    .section code
console_inspect__P2385:
console_inspect__P2385_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
console_inspect__P2385_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_182 ; _str60      
    bl _cmp_eq
    beq .else_0_67      
.jmpz442:
    ldr r0, [sp, args@0]
    b .ret.2385      
    b .afterif_1_67      
.else_0_67:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_183 ; _str61      
    bl _cmp_eq
    beq .else_2_67      
.jmpz443:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    b .ret.2385      
    b .afterif_3_67      
.else_2_67:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::isArray
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_67      
.jmpz444:
    ldr r0, [sp, args@0]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, args@1]
    bl _cmp_le
    beq .else_5_67      
.jmpz445:
    ldr r0, _ldlit_184 ; _str5      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayJoin__P1995
_proccall446:
    add sp, #4*2 ; pop locals 2
    b .ret.2385      
    b .afterif_6_67      
.else_5_67:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arraySlice__P2007
_proccall447:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, _ldlit_184 ; _str5      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayJoin__P1995
_proccall448:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_185 ; _str62      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .ret.2385      
.afterif_6_67:
    b .afterif_7_67      
.else_4_67:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_16
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, _ldlit_186 ; _str63      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_67      
.jmpz449:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_67      
.lazySkip_10_67:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, _ldlit_187 ; _str64      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_9_67:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_67      
.jmpz450:
    ldr r0, [sp, locals@1]
    b .ret.2385      
    b .afterif_11_67      
.object PUSH
.balign 4
_ldlit_180:
 .word _catch_6334
_ldlit_181:
 .word _str58
_ldlit_182:
 .word _str60
_ldlit_183:
 .word _str61
_ldlit_184:
 .word _str5
_ldlit_185:
 .word _str62
_ldlit_186:
 .word _str63
_ldlit_187:
 .word _str64
.object POP
.else_8_67:
.afterif_11_67:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::keysOf
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_67      
.jmpz451:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_arraySlice__P2007
_proccall452:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
.else_12_67:
.afterif_13_67:
    movs r0, #1
    ldr r1, _ldlit_189 ; console_inspect_inline__P6454_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_14_67      
.jmpz453:
    ldr r0, _ldlit_190 ; _str67      
    b .condexprfin_15_67      
.condexprz_14_67:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.condexprfin_15_67:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_arrayReduce__P2004
_proccall454:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*4 ; pop locals 4
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_191 ; _str65      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_192 ; _str68      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .ret.2385      
.afterif_7_67:
.afterif_3_67:
.afterif_1_67:
    movs r0, #0
.ret.2385:
    @stackempty locals
.final_16_67:
    add sp, #4*4 ; pop locals 4
console_inspect__P2385_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(102,17): console.inspect.inline
    ;
    .object console_inspect_inline__P6454 "core/console.ts(102,17): console.inspect.inline"
console_inspect_inline__P6454_pre:
    .section code
    .balign 4
console_inspect_inline__P6454_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word console_inspect_inline__P6454_args@fn
console_inspect_inline__P6454_args:
    cmp r4, #2
    bge console_inspect_inline__P6454_nochk
    push {lr}
    bl _expand_args_2_1
    bl console_inspect_inline__P6454_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
console_inspect_inline__P6454:
console_inspect_inline__P6454_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_inspect_inline__P6454_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_193 ; _str66      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_194 ; _str59      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_2
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
.ret.6454:
    @stackempty locals
.final_0_68:
console_inspect_inline__P6454_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(281,5): helpers.arrayReduce
    ;
    .object helpers_arrayReduce__P2004 "core/pxt-helpers.ts(281,5): helpers.arrayReduce"
helpers_arrayReduce__P2004_pre:
    .section code
    .balign 4
    .section code
helpers_arrayReduce__P2004:
helpers_arrayReduce__P2004_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayReduce__P2004_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.6485:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.6485      
.jmpz455:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    ldr r0, [sp, #4*3] ; estack
    bl _lambda_call3_18
    add sp, #4*4 ; pop locals 4
    str r0, [sp, args@2]
    @stackempty locals
.cont.6485:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.6485      
.brk.6485:
    ldr r0, [sp, args@2]
.ret.2004:
    @stackempty locals
.final_0_69:
    add sp, #4*2 ; pop locals 2
helpers_arrayReduce__P2004_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(304,5): helpers.arraySlice
    ;
    .object helpers_arraySlice__P2007 "core/pxt-helpers.ts(304,5): helpers.arraySlice"
helpers_arraySlice__P2007_pre:
    .section code
    .balign 4
    .section code
helpers_arraySlice__P2007:
helpers_arraySlice__P2007_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySlice__P2007_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_70      
.jmpz457:
    movs r0, #1
    str r0, [sp, args@1]
    @stackempty locals
    b .afterif_1_70      
.else_0_70:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_70      
.jmpz458:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P2022
_proccall459:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.else_2_70:
.afterif_3_70:
.afterif_1_70:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_4_70      
.jmpz460:
    ldr r0, [sp, locals@0]
    b .ret.2007      
.else_4_70:
.afterif_5_70:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_6_70      
.jmpz461:
    ldr r0, [sp, locals@1]
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_7_70      
.else_6_70:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_8_70      
.jmpz462:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.else_8_70:
.afterif_9_70:
.afterif_7_70:
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_10_70      
.jmpz463:
    ldr r0, [sp, locals@1]
    str r0, [sp, args@2]
    @stackempty locals
.else_10_70:
.afterif_11_70:
    ldr r0, [sp, args@1]
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.6534:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@2]
    bl _cmp_lt
    beq .brk.6534      
.jmpz464:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.6534:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.6534      
.brk.6534:
    ldr r0, [sp, locals@0]
.ret.2007:
    @stackempty locals
.final_12_70:
    add sp, #4*3 ; pop locals 3
helpers_arraySlice__P2007_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(158,5): helpers.arrayJoin
    ;
    .object helpers_arrayJoin__P1995 "core/pxt-helpers.ts(158,5): helpers.arrayJoin"
helpers_arrayJoin__P1995_pre:
    .section code
    .balign 4
    .section code
helpers_arrayJoin__P1995:
helpers_arrayJoin__P1995_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayJoin__P1995_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_71      
.jmpz465:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_71      
.lazySkip_2_71:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_1_71:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_71      
.jmpz466:
    ldr r0, _ldlit_195 ; _str5      
    str r0, [sp, args@1]
    @stackempty locals
.else_0_71:
.afterif_3_71:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.6562:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    bne .jmpz467
    b .brk.6562      
.object PUSH
.balign 4
_ldlit_189:
 .word console_inspect_inline__P6454_Lit
_ldlit_190:
 .word _str67
_ldlit_191:
 .word _str65
_ldlit_192:
 .word _str68
_ldlit_193:
 .word _str66
_ldlit_194:
 .word _str59
_ldlit_195:
 .word _str5
.object POP
.jmpz467:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_71      
.jmpz468:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_71      
.lazySkip_6_71:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
.lazy_5_71:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_71      
.jmpz469:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.else_4_71:
.afterif_7_71:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_11_71      
.jmpz470:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_71      
.lazySkip_11_71:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_10_71:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_8_71      
.jmpz471:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    b .condexprfin_9_71      
.condexprz_8_71:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.condexprfin_9_71:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
.cont.6562:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.6562      
.brk.6562:
    ldr r0, [sp, locals@0]
.ret.1995:
    @stackempty locals
.final_12_71:
    add sp, #4*3 ; pop locals 3
helpers_arrayJoin__P1995_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(233,5): jacdac.jdpackCore
    ;
    .object jacdac_jdpackCore__P4972 "jacdac/pack.ts(233,5): jacdac.jdpackCore"
jacdac_jdpackCore__P4972_pre:
    .section code
    .balign 4
    .section code
jacdac_jdpackCore__P4972:
jacdac_jdpackCore__P4972_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_jdpackCore__P4972_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_197 ; jacdac_TokenParser__C4968_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_TokenParser_constructor__P4970
_proccall472:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@1]
    @stackempty locals
.cont.6609:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl jacdac_TokenParser_parse__P4969
_proccall474:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz473
    b .brk.6609      
.jmpz473:
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #4]
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #241
    bl _cmp_eq
    beq .else_0_72      
.jmpz475:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@3]
    @stackempty locals
    b .cont.6609      
.else_0_72:
.afterif_1_72:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #229
    bl _cmp_eq
    beq .else_2_72      
.jmpz476:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_stringSlice__P2011
_proccall477:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.6642:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.6642      
.jmpz478:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_jdpackCore__P4972
_proccall479:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, args@3]
    @stackempty locals
.cont.6642:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.6642      
.brk.6642:
    movs r0, #0
    str r0, [sp, locals@6]
    b .brk.6609      
.else_2_72:
.afterif_3_72:
    movs r0, #0
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_72      
.jmpz480:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@8]
    @stackempty locals
    b .afterif_5_72      
.else_4_72:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@8]
    @stackempty locals
.afterif_5_72:
    movs r0, #0
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@10]
    movs r0, #1
    str r0, [sp, locals@11]
    @stackempty locals
.fortop.6660:
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz481
    b .brk.6660      
.jmpz481:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #20]
    movs r1, #6
    bl _cmp_neqq
    bne .jmpz482
    b .else_6_72      
.jmpz482:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_198 ; _str61      
    bl _cmp_neq
    beq .else_7_72      
.jmpz483:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_199 ; _str128      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
    add sp, #4*1 ; pop locals 1
.else_7_72:
.afterif_8_72:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz484
    b .else_9_72      
.jmpz484:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_72      
.jmpz485:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r1, _ldlit_200 ; _dbl126      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@13]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    movs r1, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_11_72      
.else_10_72:
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_14_72      
.jmpz486:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_13_72      
.lazySkip_14_72:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #23
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_16_72      
.jmpz487:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_15_72      
.object PUSH
.balign 4
_ldlit_197:
 .word jacdac_TokenParser__C4968_VT
_ldlit_198:
 .word _str61
_ldlit_199:
 .word _str128
_ldlit_200:
 .word _dbl126
.object POP
.lazySkip_16_72:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #11
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_15_72:
; jmp value (already in r0)
.lazy_13_72:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_72      
.jmpz488:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_17_72      
.else_12_72:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_clampWithNumberFormat__P4973
_proccall489:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.afterif_17_72:
.afterif_11_72:
.else_9_72:
.afterif_18_72:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@3]
    @stackempty locals
    b .afterif_19_72      
.else_6_72:
    movs r0, #0
    str r0, [sp, locals@14]
    @stackempty locals
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_202 ; _str60      
    bl _cmp_eq
    beq .else_20_72      
.jmpz490:
    ldr r0, [sp, locals@2]
    movs r1, #245
    bl _cmp_eq
    beq .else_21_72      
.jmpz491:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_203 ; _str129      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@14]
    @stackempty locals
    b .afterif_22_72      
.else_21_72:
    ldr r0, [sp, locals@2]
    movs r1, #231
    bl _cmp_eq
    beq .else_23_72      
.jmpz492:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@14]
    @stackempty locals
    b .afterif_24_72      
.else_23_72:
    ldr r0, _ldlit_204 ; _str130      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.afterif_24_72:
.afterif_22_72:
    b .afterif_25_72      
.else_20_72:
    ldr r0, [sp, locals@9]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_28_72      
.jmpz493:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_27_72      
.lazySkip_28_72:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r1, _ldlit_205 ; _str131      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_27_72:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_30_72      
.jmpz494:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_29_72      
.lazySkip_30_72:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_29_72:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_26_72      
.jmpz495:
    ldr r0, [sp, locals@2]
    movs r1, #197
    bl _cmp_eq
    beq .else_31_72      
.jmpz496:
    ldr r0, [sp, locals@9]
    str r0, [sp, locals@14]
    @stackempty locals
    b .afterif_32_72      
.else_31_72:
    ldr r0, _ldlit_206 ; _str132      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.afterif_32_72:
    b .afterif_33_72      
.else_26_72:
    ldr r0, _ldlit_207 ; _str133      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.afterif_33_72:
.afterif_25_72:
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #8]
    str r0, [sp, locals@15]
    @stackempty locals
    ldr r0, [sp, locals@15]
    movs r1, #1
    bl _cmp_ge
    beq .else_34_72      
.jmpz497:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@15]
    bl _cmp_gt
    beq .else_35_72      
.jmpz498:
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    bl jacdac_bufferSlice__P4967
_proccall499:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@14]
    @stackempty locals
.else_35_72:
.afterif_36_72:
    b .afterif_37_72      
.else_34_72:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@15]
    @stackempty locals
.afterif_37_72:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_38_72      
.jmpz500:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_38_72:
.afterif_39_72:
    ldr r0, [sp, args@3]
    ldr r1, [sp, locals@15]
    bl _numops_adds
    str r0, [sp, args@3]
    @stackempty locals
.afterif_19_72:
.cont.6660:
    ldr r0, [sp, locals@11]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@11]
    b .fortop.6660      
.brk.6660:
    movs r0, #0
    str r0, [sp, locals@10]
    b .cont.6609      
.brk.6609:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@0]
    bl _cmp_gt
    beq .else_40_72      
.jmpz501:
    ldr r0, _ldlit_208 ; _str134      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.else_40_72:
.afterif_41_72:
    ldr r0, [sp, args@3]
.ret.4972:
    @stackempty locals
.final_42_72:
    add sp, #4*16 ; pop locals 16
jacdac_jdpackCore__P4972_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(52,5): jacdac.bufferSlice
    ;
    .object jacdac_bufferSlice__P4967 "jacdac/pack.ts(52,5): jacdac.bufferSlice"
jacdac_bufferSlice__P4967_pre:
    .section code
    .balign 4
    .section code
jacdac_bufferSlice__P4967:
jacdac_bufferSlice__P4967_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_bufferSlice__P4967_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*3 ; pop locals 3
.ret.4967:
    @stackempty locals
.final_0_73:
jacdac_bufferSlice__P4967_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(315,5): jacdac.clampWithNumberFormat
    ;
    .object jacdac_clampWithNumberFormat__P4973 "jacdac/pack.ts(315,5): jacdac.clampWithNumberFormat"
jacdac_clampWithNumberFormat__P4973_pre:
    .section code
    .balign 4
    .section code
jacdac_clampWithNumberFormat__P4973:
jacdac_clampWithNumberFormat__P4973_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_clampWithNumberFormat__P4973_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #27
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_75      
.jmpz502:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_75      
.lazySkip_2_75:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #29
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_75:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_75      
.jmpz503:
    ldr r0, [sp, args@0]
    b .ret.4973      
.else_0_75:
.afterif_3_75:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall505:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_75      
.jmpz504:
    movs r0, #1
    b .ret.4973      
.else_4_75:
.afterif_5_75:
    ldr r0, [sp, args@1]
    movs r1, #23
    bl _cmp_eq
    beq .else_6_75      
.jmpz506:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_7_75      
.jmpz507:
    movs r0, #1
    b .ret.4973      
.else_7_75:
.afterif_8_75:
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_209 ; _dbl135      
    bl _cmp_gt
    beq .else_9_75      
.jmpz508:
    ldr r0, _ldlit_209 ; _dbl135      
    b .ret.4973      
.else_9_75:
.afterif_10_75:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsrs
    add sp, #4*1 ; pop locals 1
    b .ret.4973      
.else_6_75:
.afterif_11_75:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_12_75      
.jmpz509:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz510
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_75      
.object PUSH
.balign 4
_ldlit_202:
 .word _str60
_ldlit_203:
 .word _str129
_ldlit_204:
 .word _str130
_ldlit_205:
 .word _str131
_ldlit_206:
 .word _str132
_ldlit_207:
 .word _str133
_ldlit_208:
 .word _str134
_ldlit_209:
 .word _dbl135
.object POP
.jmpz510:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz511
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_14_75      
.jmpz511:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz512
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_15_75      
.jmpz512:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz513
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_16_75      
.jmpz513:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz514
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_17_75      
.jmpz514:
    pop {r0} ; tmpref @1
    b .brk.6834      
.switch_13_75:
.switch_14_75:
    movs r0, #1
    b .ret.4973      
.switch_15_75:
    ldr r0, [sp, args@0]
    movs r1, #255
    negs r1, r1
    bl _cmp_le
    beq .else_18_75      
.jmpz515:
    movs r0, #255
    negs r0, r0
    b .ret.4973      
.else_18_75:
.afterif_19_75:
    b .brk.6834      
.switch_16_75:
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_211 ; -65535      
    bl _cmp_le
    beq .else_20_75      
.jmpz516:
    ldr r0, _ldlit_211 ; -65535      
    b .ret.4973      
.else_20_75:
.afterif_21_75:
    b .brk.6834      
.switch_17_75:
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_212 ; _dbl136      
    bl _cmp_le
    beq .else_22_75      
.jmpz517:
    ldr r0, _ldlit_212 ; _dbl136      
    b .ret.4973      
.else_22_75:
.afterif_23_75:
.brk.6834:
    b .afterif_24_75      
.else_12_75:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz518
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_25_75      
.jmpz518:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz519
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_26_75      
.jmpz519:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz520
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_27_75      
.jmpz520:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz521
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_28_75      
.jmpz521:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz522
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_29_75      
.jmpz522:
    pop {r0} ; tmpref @1
    b .brk.6856      
.switch_25_75:
    ldr r0, [sp, args@0]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _cmp_ge
    beq .else_30_75      
.jmpz523:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    b .ret.4973      
.else_30_75:
.afterif_31_75:
    b .brk.6856      
.switch_26_75:
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_213 ; 131071      
    bl _cmp_ge
    beq .else_32_75      
.jmpz524:
    ldr r0, _ldlit_213 ; 131071      
    b .ret.4973      
.else_32_75:
.afterif_33_75:
    b .brk.6856      
.switch_27_75:
    ldr r0, [sp, args@0]
    movs r1, #255
    bl _cmp_ge
    beq .else_34_75      
.jmpz525:
    movs r0, #255
    b .ret.4973      
.else_34_75:
.afterif_35_75:
    b .brk.6856      
.switch_28_75:
    ldr r0, [sp, args@0]
    movs r1, #255
    lsls r1, r1, #8
    adds r1, #255
    bl _cmp_ge
    beq .else_36_75      
.jmpz526:
    movs r0, #255
    lsls r0, r0, #8
    adds r0, #255
    b .ret.4973      
.else_36_75:
.afterif_37_75:
    b .brk.6856      
.switch_29_75:
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_214 ; _dbl98      
    bl _cmp_ge
    beq .else_38_75      
.jmpz527:
    ldr r0, _ldlit_214 ; _dbl98      
    b .ret.4973      
.else_38_75:
.afterif_39_75:
.brk.6856:
.afterif_24_75:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _numops_orrs
.ret.4973:
    @stackempty locals
.final_40_75:
jacdac_clampWithNumberFormat__P4973_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(385,5): helpers.stringSlice
    ;
    .object helpers_stringSlice__P2011 "core/pxt-helpers.ts(385,5): helpers.stringSlice"
helpers_stringSlice__P2011_pre:
    .section code
    .balign 4
    .section code
helpers_stringSlice__P2011:
helpers_stringSlice__P2011_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_stringSlice__P2011_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_76      
.jmpz528:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P2022
_proccall529:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.else_0_76:
.afterif_1_76:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_2_76      
.jmpz530:
    ldr r0, [sp, locals@0]
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_3_76      
.else_2_76:
    ldr r0, [sp, args@2]
    movs r1, #6
    bl _cmp_eqq
    beq .else_4_76      
.jmpz531:
    movs r0, #1
    str r0, [sp, args@2]
    @stackempty locals
.else_4_76:
.afterif_5_76:
.afterif_3_76:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_6_76      
.jmpz532:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.else_6_76:
.afterif_7_76:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_25
    mov r7, sp
    str r7, [r6, #4]
    bl String_::substr
    add sp, #4*3 ; pop locals 3
.ret.2011:
    @stackempty locals
.final_8_76:
    add sp, #4*1 ; pop locals 1
helpers_stringSlice__P2011_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(68,9): jacdac.TokenParser.parse
    ;
    .object jacdac_TokenParser_parse__P4969 "jacdac/pack.ts(68,9): jacdac.TokenParser.parse"
jacdac_TokenParser_parse__P4969_pre:
    .section code
    .balign 4
jacdac_TokenParser_parse__P4969_args:
    cmp r4, #1
    bge jacdac_TokenParser_parse__P4969_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_TokenParser_parse__P4969_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_TokenParser_parse__P4969:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    mov lr, r7
jacdac_TokenParser_parse__P4969_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_TokenParser_parse__P4969_locals:
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #32]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    str r0, [sp, locals@0]
    @stackempty locals
.cont.6914:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz533
    b .brk.6914      
.jmpz533:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    str r0, [sp, locals@1]
    @stackempty locals
.cont.6922:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_77      
.jmpz534:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_77      
.lazySkip_1_77:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #65
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_0_77:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.6922      
.jmpz535:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .cont.6922      
.brk.6922:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_stringSlice__P2011
_proccall536:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz537
    b .else_2_77      
.object PUSH
.balign 4
_ldlit_211:
 .word -65535
_ldlit_212:
 .word _dbl136
_ldlit_213:
 .word 131071
_ldlit_214:
 .word _dbl98
.object POP
.jmpz537:
    b .cont.6914      
.else_2_77:
.afterif_3_77:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_216 ; _str122      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_3
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #211
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_77      
.jmpz538:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_77      
.lazySkip_6_77:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #235
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_5_77:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_77      
.jmpz539:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_77      
.lazySkip_8_77:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
.lazy_7_77:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_77      
.jmpz540:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall541:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl parseInt__P1989
_proccall542:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_stringSlice__P2011
_proccall543:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl parseInt__P1989
_proccall544:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_3
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@6]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_77:
.afterif_9_77:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_3
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@7]
    movs r1, #183
    bl _cmp_eq
    beq .else_10_77      
.jmpz545:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall546:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl parseInt__P1989
_proccall547:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_11_77      
.else_10_77:
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #8]
    @stackempty locals
.afterif_11_77:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #187
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_14_77      
.jmpz548:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_13_77      
.lazySkip_14_77:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #5
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #183
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_13_77:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_77      
.jmpz549:
    movs r0, #3
    negs r0, r0
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall550:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #32]
    @stackempty locals
.else_12_77:
.afterif_15_77:
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_numberFormatOfType__P4964
_proccall551:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    movs r1, #6
    bl _cmp_eq
    beq .else_16_77      
.jmpz552:
    ldr r0, [sp, locals@2]
    ldr r1, _ldlit_217 ; _str123      
    bl _cmp_eq
    beq .else_17_77      
.jmpz553:
    ldr r0, [sp, args@0]
    movs r1, #23
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #24]
    @stackempty locals
    b .afterif_18_77      
.else_17_77:
    ldr r0, [sp, locals@2]
    ldr r1, _ldlit_218 ; _str124      
    bl _cmp_eq
    beq .else_19_77      
.jmpz554:
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #24]
    @stackempty locals
.else_19_77:
.afterif_20_77:
.afterif_18_77:
.else_16_77:
.afterif_21_77:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@2]
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    movs r1, #6
    bl _cmp_eq
    bne .jmpz555
    b .else_22_77      
.jmpz555:
    ldr r0, [sp, locals@4]
    movs r1, #229
    bl _cmp_eq
    beq .else_23_77      
.jmpz556:
    ldr r0, [sp, locals@7]
    movs r1, #117
    bl _cmp_neq
    beq .else_24_77      
.jmpz557:
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.else_24_77:
.afterif_25_77:
    b .afterif_26_77      
.else_23_77:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #231
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_29_77      
.jmpz558:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_28_77      
.object PUSH
.balign 4
_ldlit_216:
 .word _str122
_ldlit_217:
 .word _str123
_ldlit_218:
 .word _str124
.object POP
.lazySkip_29_77:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #197
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_28_77:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_31_77      
.jmpz559:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_30_77      
.lazySkip_31_77:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #241
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_30_77:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_27_77      
.jmpz560:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_34_77      
.jmpz561:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_33_77      
.lazySkip_34_77:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_33_77:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_32_77      
.jmpz562:
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.else_32_77:
.afterif_35_77:
    b .afterif_36_77      
.else_27_77:
    ldr r0, [sp, locals@4]
    movs r1, #245
    bl _cmp_eq
    beq .else_37_77      
.jmpz563:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _cmp_neq
    beq .else_38_77      
.jmpz564:
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.else_38_77:
.afterif_39_77:
    b .afterif_40_77      
.else_37_77:
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.afterif_40_77:
.afterif_36_77:
.afterif_26_77:
    ldr r0, [sp, locals@4]
    movs r1, #1
    bl _cmp_eq
    beq .else_41_77      
.jmpz565:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_220 ; _str125      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
    add sp, #4*1 ; pop locals 1
.else_41_77:
.afterif_42_77:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@4]
    str r1, [r0, #4]
    @stackempty locals
    b .afterif_43_77      
.else_22_77:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Buffer_sizeOfNumberFormat__P2654
_proccall566:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    movs r1, #6
    bl _cmp_neq
    beq .else_44_77      
.jmpz567:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #8]
    movs r1, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_44_77:
.afterif_45_77:
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #4]
    @stackempty locals
.afterif_43_77:
    movs r0, #66
    b .ret.4969      
    b .cont.6914      
.brk.6914:
    movs r0, #10
.ret.4969:
    @stackempty locals
.final_46_77:
    add sp, #4*8 ; pop locals 8
jacdac_TokenParser_parse__P4969_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(509,5): Buffer.sizeOfNumberFormat
    ;
    .object Buffer_sizeOfNumberFormat__P2654 "core/buffer.ts(509,5): Buffer.sizeOfNumberFormat"
Buffer_sizeOfNumberFormat__P2654_pre:
    .section code
    .balign 4
    .section code
Buffer_sizeOfNumberFormat__P2654:
Buffer_sizeOfNumberFormat__P2654_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Buffer_sizeOfNumberFormat__P2654_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz568
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_78      
.jmpz568:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz569
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_78      
.jmpz569:
    movs r0, #13
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz570
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_78      
.jmpz570:
    movs r0, #15
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz571
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_78      
.jmpz571:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz572
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_78      
.jmpz572:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz573
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_78      
.jmpz573:
    movs r0, #17
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz574
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_78      
.jmpz574:
    movs r0, #19
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz575
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_78      
.jmpz575:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz576
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_8_78      
.jmpz576:
    movs r0, #21
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz577
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_9_78      
.jmpz577:
    movs r0, #25
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz578
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_10_78      
.jmpz578:
    movs r0, #23
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz579
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_11_78      
.jmpz579:
    movs r0, #31
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz580
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_12_78      
.jmpz580:
    movs r0, #27
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz581
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_78      
.jmpz581:
    movs r0, #33
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz582
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_14_78      
.jmpz582:
    movs r0, #29
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz583
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_15_78      
.jmpz583:
    pop {r0} ; tmpref @1
    b .brk.7132      
.switch_0_78:
.switch_1_78:
.switch_2_78:
.switch_3_78:
    movs r0, #3
    b .ret.2654      
.switch_4_78:
.switch_5_78:
.switch_6_78:
.switch_7_78:
    movs r0, #5
    b .ret.2654      
.switch_8_78:
.switch_9_78:
.switch_10_78:
.switch_11_78:
.switch_12_78:
.switch_13_78:
    movs r0, #9
    b .ret.2654      
.switch_14_78:
.switch_15_78:
    movs r0, #17
    b .ret.2654      
.brk.7132:
    movs r0, #1
.ret.2654:
    @stackempty locals
.final_16_78:
Buffer_sizeOfNumberFormat__P2654_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(19,5): jacdac.numberFormatOfType
    ;
    .object jacdac_numberFormatOfType__P4964 "jacdac/pack.ts(19,5): jacdac.numberFormatOfType"
jacdac_numberFormatOfType__P4964_pre:
    .section code
    .balign 4
    .section code
jacdac_numberFormatOfType__P4964:
jacdac_numberFormatOfType__P4964_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_numberFormatOfType__P4964_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    ldr r0, _ldlit_221 ; _str114      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz584
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_79      
.jmpz584:
    ldr r0, _ldlit_222 ; _str115      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz585
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_79      
.jmpz585:
    ldr r0, _ldlit_223 ; _str116      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz586
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_79      
.jmpz586:
    ldr r0, _ldlit_224 ; _str117      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz587
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_79      
.jmpz587:
    ldr r0, _ldlit_225 ; _str118      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz588
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_79      
.jmpz588:
    ldr r0, _ldlit_226 ; _str119      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz589
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_79      
.jmpz589:
    ldr r0, _ldlit_227 ; _str120      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz590
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_79      
.jmpz590:
    ldr r0, _ldlit_228 ; _str121      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz591
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_79      
.jmpz591:
    pop {r0} ; tmpref @1
    b .switch_8_79      
.switch_0_79:
    movs r0, #5
    b .ret.4964      
.switch_1_79:
    movs r0, #9
    b .ret.4964      
.switch_2_79:
    movs r0, #23
    b .ret.4964      
.switch_3_79:
    movs r0, #3
    b .ret.4964      
.switch_4_79:
    movs r0, #7
    b .ret.4964      
.switch_5_79:
    movs r0, #11
    b .ret.4964      
.switch_6_79:
    movs r0, #27
    b .ret.4964      
.switch_7_79:
    movs r0, #29
    b .ret.4964      
.switch_8_79:
    movs r0, #6
    b .ret.4964      
.brk.7151:
    movs r0, #0
.ret.4964:
    @stackempty locals
.final_9_79:
jacdac_numberFormatOfType__P4964_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(45,1): parseInt
    ;
    .object parseInt__P1989 "core/pxt-helpers.ts(45,1): parseInt"
parseInt__P1989_pre:
    .section code
    .balign 4
    .section code
parseInt__P1989:
parseInt__P1989_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
parseInt__P1989_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_80      
.jmpz592:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_80      
.object PUSH
.balign 4
_ldlit_220:
 .word _str125
_ldlit_221:
 .word _str114
_ldlit_222:
 .word _str115
_ldlit_223:
 .word _str116
_ldlit_224:
 .word _str117
_ldlit_225:
 .word _str118
_ldlit_226:
 .word _str119
_ldlit_227:
 .word _str120
_ldlit_228:
 .word _str121
.object POP
.lazySkip_2_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_80      
.jmpz593:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_80      
.lazySkip_4_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_80      
.jmpz594:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_80      
.lazySkip_6_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #73
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_5_80:
; jmp value (already in r0)
.lazy_3_80:
; jmp value (already in r0)
.lazy_1_80:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_80      
.jmpz595:
    movs r0, #14
    b .ret.1989      
.else_0_80:
.afterif_7_80:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.cont.7178:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_80      
.jmpz596:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_80      
.lazySkip_9_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl helpers_isWhitespace__P2016
_proccall597:
    add sp, #4*1 ; pop locals 1
.lazy_8_80:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.7178      
.jmpz598:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .cont.7178      
.brk.7178:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_10_80      
.jmpz599:
    movs r0, #14
    b .ret.1989      
.else_10_80:
.afterif_11_80:
    movs r0, #3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r1, r0
    ldr r0, _ldlit_230 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz600
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_12_80      
.jmpz600:
    ldr r0, _ldlit_231 ; _str1      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz601
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_80      
.jmpz601:
    pop {r0} ; tmpref @1
    b .brk.7207      
.switch_12_80:
    movs r0, #1
    negs r0, r0
    str r0, [sp, locals@1]
    @stackempty locals
.switch_13_80:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.brk.7207:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_16_80      
.jmpz602:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_15_80      
.lazySkip_16_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #33
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_15_80:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_18_80      
.jmpz603:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_17_80      
.lazySkip_18_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_232 ; _str2      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_17_80:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_20_80      
.jmpz604:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_19_80      
.lazySkip_20_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_233 ; _str3      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_22_80      
.jmpz605:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_21_80      
.lazySkip_22_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_234 ; _str4      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_21_80:
; jmp value (already in r0)
.lazy_19_80:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_80      
.jmpz606:
    movs r0, #33
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_23_80      
.else_14_80:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_24_80      
.jmpz607:
    movs r0, #21
    str r0, [sp, args@1]
    @stackempty locals
.else_24_80:
.afterif_25_80:
.afterif_23_80:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #10
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.7255:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz608
    b .brk.7255      
.jmpz608:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    movs r1, #65
    bl _numops_orrs
    str r0, [sp, locals@5]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #97
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_28_80      
.jmpz609:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_27_80      
.lazySkip_28_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #117
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_27_80:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_26_80      
.jmpz610:
    ldr r0, [sp, locals@5]
    movs r1, #97
    bl _numops_subs
    str r0, [sp, locals@6]
    @stackempty locals
    b .afterif_29_80      
.else_26_80:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #195
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_32_80      
.jmpz611:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_31_80      
.lazySkip_32_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #247
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_31_80:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_30_80      
.jmpz612:
    movs r0, #21
    ldr r1, [sp, locals@5]
    bl _numops_adds
    movs r1, #195
    bl _numops_subs
    str r0, [sp, locals@6]
    @stackempty locals
.else_30_80:
.afterif_33_80:
.afterif_29_80:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_36_80      
.jmpz613:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_35_80      
.lazySkip_36_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_35_80:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz614
    b .else_34_80      
.object PUSH
.balign 4
_ldlit_230:
 .word _str0
_ldlit_231:
 .word _str1
_ldlit_232:
 .word _str2
_ldlit_233:
 .word _str3
_ldlit_234:
 .word _str4
.object POP
.jmpz614:
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_37_80      
.jmpz615:
    movs r0, #14
    b .ret.1989      
.else_37_80:
.afterif_38_80:
    b .brk.7255      
.else_34_80:
.afterif_39_80:
    movs r0, #66
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@6]
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.cont.7255:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    b .fortop.7255      
.brk.7255:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
.ret.1989:
    @stackempty locals
.final_40_80:
    add sp, #4*7 ; pop locals 7
parseInt__P1989_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(504,5): helpers.isWhitespace
    ;
    .object helpers_isWhitespace__P2016 "core/pxt-helpers.ts(504,5): helpers.isWhitespace"
helpers_isWhitespace__P2016_pre:
    .section code
    .balign 4
    .section code
helpers_isWhitespace__P2016:
helpers_isWhitespace__P2016_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_isWhitespace__P2016_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #19
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz616
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_81      
.jmpz616:
    movs r0, #23
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz617
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_81      
.jmpz617:
    movs r0, #25
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz618
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_81      
.jmpz618:
    movs r0, #65
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz619
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_81      
.jmpz619:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #65
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz620
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_81      
.jmpz620:
    ldr r0, _ldlit_236 ; 130559      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz621
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_81      
.jmpz621:
    movs r0, #21
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz622
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_81      
.jmpz622:
    movs r0, #27
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz623
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_81      
.jmpz623:
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #81
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz624
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_8_81      
.jmpz624:
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #83
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz625
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_9_81      
.jmpz625:
    pop {r0} ; tmpref @1
    b .switch_10_81      
.switch_0_81:
.switch_1_81:
.switch_2_81:
.switch_3_81:
.switch_4_81:
.switch_5_81:
.switch_6_81:
.switch_7_81:
.switch_8_81:
.switch_9_81:
    movs r0, #66
    b .ret.2016      
.switch_10_81:
    movs r0, #10
    b .ret.2016      
.brk.7320:
    movs r0, #0
.ret.2016:
    @stackempty locals
.final_11_81:
helpers_isWhitespace__P2016_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(66,9): jacdac.TokenParser.constructor
    ;
    .object jacdac_TokenParser_constructor__P4970 "jacdac/pack.ts(66,9): jacdac.TokenParser.constructor"
jacdac_TokenParser_constructor__P4970_pre:
    .section code
    .balign 4
    .section code
jacdac_TokenParser_constructor__P4970:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    mov lr, r7
jacdac_TokenParser_constructor__P4970_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_TokenParser_constructor__P4970_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    movs r0, #0
.ret.4970:
    @stackempty locals
.final_0_82:
jacdac_TokenParser_constructor__P4970_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(57,9): jacdac.JDPacket.from
    ;
    .object jacdac_JDPacket_from__P2916 "jacdac/packet.ts(57,9): jacdac.JDPacket.from"
jacdac_JDPacket_from__P2916_pre:
    .section code
    .balign 4
jacdac_JDPacket_from__P2916_args:
    cmp r4, #2
    bge jacdac_JDPacket_from__P2916_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket_from__P2916_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_from__P2916:
jacdac_JDPacket_from__P2916_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_from__P2916_locals:
    ldr r0, _ldlit_237 ; jacdac_JDPacket__C2910_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_constructor__P4936
_proccall626:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #16
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C2910_validate_27
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_data__P2943
_proccall627:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2935
_proccall628:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2916:
    @stackempty locals
.final_0_83:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_from__P2916_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(160,9): jacdac.JDPacket.serviceCommand
    ;
    .object jacdac_JDPacket_serviceCommand__P2935 "jacdac/packet.ts(160,9): jacdac.JDPacket.serviceCommand"
jacdac_JDPacket_serviceCommand__P2935_pre:
    .section code
    .balign 4
jacdac_JDPacket_serviceCommand__P2935_args:
    cmp r4, #2
    bge jacdac_JDPacket_serviceCommand__P2935_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket_serviceCommand__P2935_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_serviceCommand__P2935:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_serviceCommand__P2935_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_serviceCommand__P2935_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_28
    movs r1, #4
    movs r2, #14
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2935:
    @stackempty locals
    movs r0, #0
.final_0_84:
jacdac_JDPacket_serviceCommand__P2935_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(157,9): jacdac.JDPacket.serviceCommand
    ;
    .object jacdac_JDPacket_serviceCommand__P2934 "jacdac/packet.ts(157,9): jacdac.JDPacket.serviceCommand"
jacdac_JDPacket_serviceCommand__P2934_pre:
    .section code
    .balign 4
jacdac_JDPacket_serviceCommand__P2934_args:
    cmp r4, #1
    bge jacdac_JDPacket_serviceCommand__P2934_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_serviceCommand__P2934_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_serviceCommand__P2934:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_serviceCommand__P2934_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_serviceCommand__P2934_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #4
    movs r2, #14
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
.ret.2934:
    @stackempty locals
.final_0_85:
jacdac_JDPacket_serviceCommand__P2934_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(201,9): jacdac.JDPacket.data
    ;
    .object jacdac_JDPacket_data__P2943 "jacdac/packet.ts(201,9): jacdac.JDPacket.data"
jacdac_JDPacket_data__P2943_pre:
    .section code
    .balign 4
jacdac_JDPacket_data__P2943_args:
    cmp r4, #2
    bge jacdac_JDPacket_data__P2943_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket_data__P2943_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_data__P2943:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_data__P2943_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_data__P2943_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_86      
.jmpz629:
    movs r0, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    str r0, [sp, args@1]
    @stackempty locals
.else_0_86:
.afterif_1_86:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #217
    bl _cmp_gt
    beq .else_2_86      
.jmpz630:
    ldr r0, _ldlit_238 ; _str105      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.else_2_86:
.afterif_3_86:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_29
    movs r1, #25
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
.ret.2943:
    @stackempty locals
    movs r0, #0
.final_4_86:
jacdac_JDPacket_data__P2943_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(197,9): jacdac.JDPacket.data
    ;
    .object jacdac_JDPacket_data__P2942 "jacdac/packet.ts(197,9): jacdac.JDPacket.data"
jacdac_JDPacket_data__P2942_pre:
    .section code
    .balign 4
jacdac_JDPacket_data__P2942_args:
    cmp r4, #1
    bge jacdac_JDPacket_data__P2942_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_data__P2942_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_data__P2942:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_data__P2942_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_data__P2942_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.2942:
    @stackempty locals
.final_0_87:
jacdac_JDPacket_data__P2942_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(46,9): jacdac.JDPacket.constructor
    ;
    .object jacdac_JDPacket_constructor__P4936 "jacdac/packet.ts(46,9): jacdac.JDPacket.constructor"
jacdac_JDPacket_constructor__P4936_pre:
    .section code
    .balign 4
    .section code
jacdac_JDPacket_constructor__P4936:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_constructor__P4936_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_constructor__P4936_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4936:
    @stackempty locals
.final_0_88:
jacdac_JDPacket_constructor__P4936_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1209,9): jacdac.Client.sendCommand
    ;
    .object jacdac_Client_sendCommand__P3564 "jacdac/routing.ts(1209,9): jacdac.Client.sendCommand"
jacdac_Client_sendCommand__P3564_pre:
    .section code
    .balign 4
jacdac_Client_sendCommand__P3564_args:
    cmp r4, #2
    bge jacdac_Client_sendCommand__P3564_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Client_sendCommand__P3564_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Client_sendCommand__P3564:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_sendCommand__P3564_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_sendCommand__P3564_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall631:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    movs r1, #6
    bl _cmp_eq
    beq .else_0_89      
.jmpz632:
    b .ret.3564      
.else_0_89:
.afterif_1_89:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_serviceIndex__P2932
_proccall633:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendCmd__P2958
_proccall634:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3564:
    @stackempty locals
    movs r0, #0
.final_2_89:
jacdac_Client_sendCommand__P3564_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1081,9): jacdac.Client.device
    ;
    .object jacdac_Client_device__P3554 "jacdac/routing.ts(1081,9): jacdac.Client.device"
jacdac_Client_device__P3554_pre:
    .section code
    .balign 4
jacdac_Client_device__P3554_args:
    cmp r4, #1
    bge jacdac_Client_device__P3554_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Client_device__P3554_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_device__P3554:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_device__P3554_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_device__P3554_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.3554:
    @stackempty locals
.final_0_90:
jacdac_Client_device__P3554_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_236:
 .word 130559
_ldlit_237:
 .word jacdac_JDPacket__C2910_VT
_ldlit_238:
 .word _str105
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(306,9): jacdac.JDPacket._sendCmd
    ;
    .object jacdac_JDPacket__sendCmd__P2958 "jacdac/packet.ts(306,9): jacdac.JDPacket._sendCmd"
jacdac_JDPacket__sendCmd__P2958_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendCmd__P2958_args:
    cmp r4, #2
    bge jacdac_JDPacket__sendCmd__P2958_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket__sendCmd__P2958_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket__sendCmd__P2958:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket__sendCmd__P2958_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket__sendCmd__P2958_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_91      
.jmpz635:
    b .ret.2958      
.else_0_91:
.afterif_1_91:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendCmdId__P2959_nochk
_proccall636:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2958:
    @stackempty locals
    movs r0, #0
.final_2_91:
jacdac_JDPacket__sendCmd__P2958_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(311,9): jacdac.JDPacket._sendCmdId
    ;
    .object jacdac_JDPacket__sendCmdId__P2959 "jacdac/packet.ts(311,9): jacdac.JDPacket._sendCmdId"
jacdac_JDPacket__sendCmdId__P2959_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendCmdId__P2959_args:
    cmp r4, #2
    bge jacdac_JDPacket__sendCmdId__P2959_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket__sendCmdId__P2959_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket__sendCmdId__P2959:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket__sendCmdId__P2959_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket__sendCmdId__P2959_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_92      
.jmpz637:
    b .ret.2959      
.else_0_92:
.afterif_1_92:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P2925_nochk
_proccall638:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    movs r1, #3
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_29
    movs r1, #7
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket__sendCore__P2956_nochk
_proccall639:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2959:
    @stackempty locals
    movs r0, #0
.final_2_92:
jacdac_JDPacket__sendCmdId__P2959_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(293,9): jacdac.JDPacket._sendCore
    ;
    .object jacdac_JDPacket__sendCore__P2956 "jacdac/packet.ts(293,9): jacdac.JDPacket._sendCore"
jacdac_JDPacket__sendCore__P2956_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendCore__P2956_args:
    cmp r4, #1
    bge jacdac_JDPacket__sendCore__P2956_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket__sendCore__P2956_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket__sendCore__P2956:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket__sendCore__P2956_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket__sendCore__P2956_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #25
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_0_93      
.jmpz640:
    ldr r0, _ldlit_240 ; _str112      
    push {r0} ; proc-arg
    bl jacdac_panic__P3479
_proccall641:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_93:
.afterif_1_93:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_32
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physSendPacket
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_processPacket__P3475
_proccall642:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2956:
    @stackempty locals
    movs r0, #0
.final_2_93:
jacdac_JDPacket__sendCore__P2956_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(256,9): jacdac.Bus.processPacket
    ;
    .object jacdac_Bus_processPacket__P3475 "jacdac/routing.ts(256,9): jacdac.Bus.processPacket"
jacdac_Bus_processPacket__P3475_pre:
    .section code
    .balign 4
jacdac_Bus_processPacket__P3475_args:
    cmp r4, #2
    bge jacdac_Bus_processPacket__P3475_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Bus_processPacket__P3475_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_processPacket__P3475:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_processPacket__P3475_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Bus_processPacket__P3475_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P2924
_proccall643:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_multicommandClass__P2927
_proccall644:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_requiresAck__P2929
_proccall646:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_94      
.jmpz645:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_requiresAck__P2930
_proccall647:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P2924
_proccall649:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465_nochk
_proccall650:
    add sp, #4*1 ; pop locals 1
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .else_1_94      
.jmpz648:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_crc__P2933
_proccall651:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_onlyHeader__P2917
_proccall652:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #127
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2932
_proccall653:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465_nochk
_proccall654:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendReport__P2957
_proccall655:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_94:
.afterif_2_94:
.else_0_94:
.afterif_3_94:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #104]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall656:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #6
    bl _cmp_neq
    bne .jmpz657
    b .else_4_94      
.jmpz657:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isCommand__P2952
_proccall659:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_94      
.jmpz658:
    b .ret.3475      
.else_5_94:
.afterif_6_94:
    movs r0, #0
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    str r0, [sp, locals@5]
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.7474:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7474      
.jmpz660:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_Server__C3494_validate_34
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_94      
.jmpz661:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_94      
.lazySkip_9_94:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_Server__C3494_validate_34
    ldr r0, [r0, #32]
.lazy_8_94:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_94      
.jmpz662:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465_nochk
_proccall663:
    add sp, #4*1 ; pop locals 1
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_deviceIdentifier__P2925
_proccall664:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_Server__C3494_validate_34
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_serviceIndex__P2932
_proccall665:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_jacdac_Server__C3494_35
_proccall666:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_7_94:
.afterif_10_94:
.cont.7474:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    b .fortop.7474      
.brk.7474:
    movs r0, #0
    str r0, [sp, locals@5]
    b .afterif_11_94      
.else_4_94:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465_nochk
_proccall668:
    add sp, #4*1 ; pop locals 1
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_14_94      
.jmpz667:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_13_94      
.lazySkip_14_94:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isCommand__P2952
_proccall669:
    add sp, #4*1 ; pop locals 1
.lazy_13_94:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_94      
.jmpz670:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2931
_proccall671:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@7]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_17_94      
.jmpz672:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_16_94      
.lazySkip_17_94:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@7]
    bl _inst_jacdac_Server__C3494_validate_34
    ldr r0, [r0, #32]
.lazy_16_94:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_15_94      
.jmpz673:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_jacdac_Server__C3494_35
_proccall674:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_15_94:
.afterif_18_94:
    b .afterif_19_94      
.object PUSH
.balign 4
_ldlit_240:
 .word _str112
.object POP
.else_12_94:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isCommand__P2952
_proccall676:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_20_94      
.jmpz675:
    b .ret.3475      
.else_20_94:
.afterif_21_94:
    movs r0, #1
    ldr r1, _ldlit_242 ; dev_inline__P7520_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFind__P2003
_proccall677:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2931
_proccall679:
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _cmp_eq
    bne .jmpz678
    b .else_22_94      
.jmpz678:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall681:
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _cmp_eq
    bne .jmpz680
    b .else_23_94      
.jmpz680:
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #31
    bl _numops_ands
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_26_94      
.jmpz682:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_25_94      
.lazySkip_26_94:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_restartCounter__P3579
_proccall683:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_25_94:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_24_94      
.jmpz684:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3583
_proccall685:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_243 ; _str181      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_244 ; _str182      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_restartCounter__P3579
_proccall686:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_245 ; _str183      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_246 ; _str184      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall687:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device__destroy__P3597
_proccall688:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #6
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall689:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_24_94:
.afterif_27_94:
    movs r0, #10
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_28_94      
.jmpz690:
    ldr r0, _ldlit_247 ; jacdac_Device__C3572_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P2924
_proccall691:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_Device_constructor__P3576
_proccall692:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #112]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall693:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_29_94      
.else_28_94:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_serviceMatches__P5113
_proccall694:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_Device__C3572_validate_31
    str r1, [r0, #36]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_29_94:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465_nochk
_proccall696:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_32_94      
.jmpz695:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_31_94      
.lazySkip_32_94:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465_nochk
_proccall697:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_Device_isBrain__P3577
_proccall698:
    add sp, #4*1 ; pop locals 1
.lazy_31_94:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_34_94      
.jmpz699:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_33_94      
.lazySkip_34_94:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_isBrain__P3577
_proccall700:
    add sp, #4*1 ; pop locals 1
.lazy_33_94:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_36_94      
.jmpz701:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_35_94      
.lazySkip_36_94:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    bl jacdac_isSimulator__P3602
_proccall702:
.lazy_35_94:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_30_94      
.jmpz703:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3583
_proccall704:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_243 ; _str181      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_248 ; _str185      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall705:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl jacdac_resetToProxy__P5134
_proccall706:
    @stackempty locals
.else_30_94:
.afterif_37_94:
    ldr r0, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_38_94      
.jmpz707:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_reattach__P3474_nochk
_proccall708:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_38_94:
.afterif_39_94:
    b .afterif_40_94      
.object PUSH
.balign 4
_ldlit_242:
 .word dev_inline__P7520_Lit
_ldlit_243:
 .word _str181
_ldlit_244:
 .word _str182
_ldlit_245:
 .word _str183
_ldlit_246:
 .word _str184
_ldlit_247:
 .word jacdac_Device__C3572_VT
_ldlit_248:
 .word _str185
.object POP
.else_23_94:
.afterif_40_94:
    ldr r0, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_41_94      
.jmpz709:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_processPacket__P3593
_proccall710:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_41_94:
.afterif_42_94:
    b .ret.3475      
    b .afterif_43_94      
.else_22_94:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2931
_proccall712:
    add sp, #4*1 ; pop locals 1
    movs r1, #127
    bl _cmp_eq
    beq .else_44_94      
.jmpz711:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac__gotAck__P2962
_proccall713:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_44_94:
.afterif_45_94:
.afterif_43_94:
    ldr r0, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_46_94      
.jmpz714:
    b .ret.3475      
.else_46_94:
.afterif_47_94:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_processPacket__P3593
_proccall715:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_19_94:
.afterif_11_94:
.ret.3475:
    @stackempty locals
    movs r0, #0
.final_48_94:
    add sp, #4*11 ; pop locals 11
jacdac_Bus_processPacket__P3475_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(294,45): dev.inline
    ;
    .object dev_inline__P7520 "jacdac/routing.ts(294,45): dev.inline"
dev_inline__P7520_pre:
    .section code
    .balign 4
dev_inline__P7520_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word dev_inline__P7520_args@fn
dev_inline__P7520_args:
    cmp r4, #1
    bge dev_inline__P7520_nochk
    push {lr}
    bl _expand_args_1_5
    bl dev_inline__P7520_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
dev_inline__P7520:
dev_inline__P7520_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
dev_inline__P7520_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.7520:
    @stackempty locals
.final_0_95:
dev_inline__P7520_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(389,5): jacdac._gotAck
    ;
    .object jacdac__gotAck__P2962 "jacdac/packet.ts(389,5): jacdac._gotAck"
jacdac__gotAck__P2962_pre:
    .section code
    .balign 4
    .section code
jacdac__gotAck__P2962:
jacdac__gotAck__P2962_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__gotAck__P2962_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_96      
.jmpz716:
    b .ret.2962      
.else_0_96:
.afterif_1_96:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P2924
_proccall717:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall718:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    str r0, [sp, locals@4]
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.7649:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7649      
.jmpz719:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_96      
.jmpz720:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_96      
.lazySkip_4_96:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_3_96:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_96      
.jmpz721:
    ldr r0, [sp, locals@3]
    movs r1, #1
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #255
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.else_2_96:
.afterif_5_96:
.cont.7649:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    b .fortop.7649      
.brk.7649:
    movs r0, #0
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_96      
.jmpz722:
    ldr r0, _ldlit_250 ; jacdac__gotAck_inline__P7677_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P2002
_proccall723:
    add sp, #4*2 ; pop locals 2
    ldr r7, [r6, #0]
    str r0, [r7, #116]
    @stackempty locals
.else_6_96:
.afterif_7_96:
.ret.2962:
    @stackempty locals
    movs r0, #0
.final_8_96:
    add sp, #4*6 ; pop locals 6
jacdac__gotAck__P2962_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(401,57): jacdac._gotAck.inline
    ;
    .object jacdac__gotAck_inline__P7677 "jacdac/packet.ts(401,57): jacdac._gotAck.inline"
jacdac__gotAck_inline__P7677_pre:
    .section code
    .balign 4
jacdac__gotAck_inline__P7677_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__gotAck_inline__P7677_args@fn
jacdac__gotAck_inline__P7677_args:
    cmp r4, #1
    bge jacdac__gotAck_inline__P7677_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac__gotAck_inline__P7677_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__gotAck_inline__P7677:
jacdac__gotAck_inline__P7677_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__gotAck_inline__P7677_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
.ret.7677:
    @stackempty locals
.final_0_97:
jacdac__gotAck_inline__P7677_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(262,5): helpers.arrayFilter
    ;
    .object helpers_arrayFilter__P2002 "core/pxt-helpers.ts(262,5): helpers.arrayFilter"
helpers_arrayFilter__P2002_pre:
    .section code
    .balign 4
    .section code
helpers_arrayFilter__P2002:
helpers_arrayFilter__P2002_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayFilter__P2002_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7690:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.7690      
.jmpz724:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_15
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_98      
.jmpz725:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_98:
.afterif_1_98:
.cont.7690:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.7690      
.brk.7690:
    ldr r0, [sp, locals@0]
.ret.2002:
    @stackempty locals
.final_2_98:
    add sp, #4*4 ; pop locals 4
helpers_arrayFilter__P2002_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1520,9): jacdac.Device.processPacket
    ;
    .object jacdac_Device_processPacket__P3593 "jacdac/routing.ts(1520,9): jacdac.Device.processPacket"
jacdac_Device_processPacket__P3593_pre:
    .section code
    .balign 4
jacdac_Device_processPacket__P3593_args:
    cmp r4, #2
    bge jacdac_Device_processPacket__P3593_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Device_processPacket__P3593_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Device_processPacket__P3593:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_processPacket__P3593_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_processPacket__P3593_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #120]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall727:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall729:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_99      
.jmpz728:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_99      
.lazySkip_2_99:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
.lazy_1_99:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_99      
.jmpz730:
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_getNumber__P2950
_proccall731:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #25
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _cmp_eq
    beq .else_3_99      
.jmpz732:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #31
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2931
_proccall733:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_Device_lookupQuery__P5102_nochk
_proccall734:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_99      
.jmpz735:
    ldr r0, [sp, locals@1]
    movs r1, #66
    bl _inst_jacdac_RegQuery__C5099_validate_38
    str r1, [r0, #16]
    @stackempty locals
.else_4_99:
.afterif_5_99:
.else_3_99:
.afterif_6_99:
.else_0_99:
.afterif_7_99:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2931
_proccall736:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isRegGet__P2940
_proccall738:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_99      
.jmpz737:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_99      
.lazySkip_10_99:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
.lazy_9_99:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_99      
.jmpz739:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_regCode__P2941
_proccall740:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_Device_lookupQuery__P5102_nochk
_proccall741:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_99      
.jmpz742:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_RegQuery__C5099_validate_38
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_RegQuery__C5099_validate_38
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_11_99:
.afterif_12_99:
.else_8_99:
.afterif_13_99:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassAt__P3588_nochk
_proccall743:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_16_99      
.jmpz744:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_15_99      
.lazySkip_16_99:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r1, _ldlit_251 ; _dbl135      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    b .lazy_15_99      
.object PUSH
.balign 4
_ldlit_250:
 .word jacdac__gotAck_inline__P7677_Lit
_ldlit_251:
 .word _dbl135
.object POP
.lazy_15_99:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_99      
.jmpz745:
    b .ret.3593      
.else_14_99:
.afterif_17_99:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isEvent__P2936
_proccall747:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz746
    b .else_18_99      
.jmpz746:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #0
    bl _cmp_eqq
    beq .else_19_99      
.jmpz748:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_eventCounter__P2938
_proccall749:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
.else_19_99:
.afterif_20_99:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_eventCounter__P2938
_proccall750:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@5]
    bl _numops_subs
    movs r1, #255
    bl _numops_ands
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_eventCounter__P2938
_proccall751:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    movs r1, #255
    bl _numops_ands
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_23_99      
.jmpz752:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_22_99      
.lazySkip_23_99:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #121
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_25_99      
.jmpz753:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_24_99      
.lazySkip_25_99:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #11
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_24_99:
; jmp value (already in r0)
.lazy_22_99:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_21_99      
.jmpz754:
    b .ret.3593      
.else_21_99:
.afterif_26_99:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall755:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626
_proccall756:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_eventCounter__P2938
_proccall757:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_18_99:
.afterif_27_99:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_28_99      
.jmpz758:
    b .ret.3593      
.else_28_99:
.afterif_29_99:
    movs r0, #2
    ldr r1, _ldlit_253 ; client_inline__P7839_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFind__P2003
_proccall759:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_30_99      
.jmpz760:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Client_handlePacketOuter__P3560
_proccall761:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_30_99:
.afterif_31_99:
.ret.3593:
    @stackempty locals
    movs r0, #0
.final_32_99:
    add sp, #4*9 ; pop locals 9
jacdac_Device_processPacket__P3593_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1572,46): client.inline
    ;
    .object client_inline__P7839 "jacdac/routing.ts(1572,46): client.inline"
client_inline__P7839_pre:
    .section code
    .balign 4
client_inline__P7839_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word client_inline__P7839_args@fn
client_inline__P7839_args:
    cmp r4, #1
    bge client_inline__P7839_nochk
    push {lr}
    bl _expand_args_1_5
    bl client_inline__P7839_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
client_inline__P7839:
client_inline__P7839_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
client_inline__P7839_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_100      
.jmpz762:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_100      
.condexprz_0_100:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.condexprfin_1_100:
; jmp value (already in r0)
.ret.7839:
    @stackempty locals
.final_2_100:
client_inline__P7839_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1153,9): jacdac.Client.handlePacketOuter
    ;
    .object jacdac_Client_handlePacketOuter__P3560 "jacdac/routing.ts(1153,9): jacdac.Client.handlePacketOuter"
jacdac_Client_handlePacketOuter__P3560_pre:
    .section code
    .balign 4
jacdac_Client_handlePacketOuter__P3560_args:
    cmp r4, #2
    bge jacdac_Client_handlePacketOuter__P3560_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Client_handlePacketOuter__P3560_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Client_handlePacketOuter__P3560:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_handlePacketOuter__P3560_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Client_handlePacketOuter__P3560_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_101      
.jmpz763:
    b .ret.3560      
.else_0_101:
.afterif_1_101:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall765:
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _cmp_eq
    beq .else_2_101      
.jmpz764:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_101:
.afterif_3_101:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isEvent__P2936
_proccall767:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_101      
.jmpz766:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_eventCode__P2937
_proccall768:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _cmp_eq
    beq .else_5_101      
.jmpz769:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #36]
    @stackempty locals
    b .afterif_6_101      
.else_5_101:
    ldr r0, [sp, locals@0]
    movs r1, #5
    bl _cmp_eq
    beq .else_7_101      
.jmpz770:
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    @stackempty locals
    b .afterif_8_101      
.else_7_101:
    ldr r0, [sp, locals@0]
    movs r1, #7
    bl _cmp_eq
    beq .else_9_101      
.jmpz771:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    mov r3, r0
    ldr r0, _ldlit_254 ; jacdac_Client_handlePacketOuter_inline__P7891_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P2001
_proccall772:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_9_101:
.afterif_10_101:
.afterif_8_101:
.afterif_6_101:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall773:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_raiseEvent__P4980_nochk
_proccall774:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_11_101      
.else_4_101:
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.7903:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7903      
.jmpz775:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_handlePacket__P3535
_proccall776:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.7903:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.7903      
.brk.7903:
    movs r0, #0
    str r0, [sp, locals@2]
.afterif_11_101:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_jacdac_Client__C3544_this_39
_proccall777:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3560:
    @stackempty locals
    movs r0, #0
.final_12_101:
    add sp, #4*4 ; pop locals 4
jacdac_Client_handlePacketOuter__P3560_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1165,44): jacdac.Client.handlePacketOuter.inline
    ;
    .object jacdac_Client_handlePacketOuter_inline__P7891 "jacdac/routing.ts(1165,44): jacdac.Client.handlePacketOuter.inline"
jacdac_Client_handlePacketOuter_inline__P7891_pre:
    .section code
    .balign 4
jacdac_Client_handlePacketOuter_inline__P7891_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_Client_handlePacketOuter_inline__P7891_args@fn
jacdac_Client_handlePacketOuter_inline__P7891_args:
    cmp r4, #1
    bge jacdac_Client_handlePacketOuter_inline__P7891_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Client_handlePacketOuter_inline__P7891_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_handlePacketOuter_inline__P7891:
jacdac_Client_handlePacketOuter_inline__P7891_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_handlePacketOuter_inline__P7891_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_reset__P3524
_proccall778:
    add sp, #4*1 ; pop locals 1
.ret.7891:
    @stackempty locals
    movs r0, #0
.final_0_102:
jacdac_Client_handlePacketOuter_inline__P7891_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1174,9): jacdac.Client.handlePacket
    ;
    .object jacdac_Client_handlePacket__P3561 "jacdac/routing.ts(1174,9): jacdac.Client.handlePacket"
jacdac_Client_handlePacket__P3561_pre:
    .section code
    .balign 4
jacdac_Client_handlePacket__P3561_args:
    cmp r4, #2
    bge jacdac_Client_handlePacket__P3561_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Client_handlePacket__P3561_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Client_handlePacket__P3561:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_handlePacket__P3561_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_handlePacket__P3561_locals:
.ret.3561:
    @stackempty locals
    movs r0, #0
.final_0_103:
jacdac_Client_handlePacket__P3561_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(981,9): jacdac.RegisterClient.handlePacket
    ;
    .object jacdac_RegisterClient_handlePacket__P3535 "jacdac/routing.ts(981,9): jacdac.RegisterClient.handlePacket"
jacdac_RegisterClient_handlePacket__P3535_pre:
    .section code
    .balign 4
jacdac_RegisterClient_handlePacket__P3535_args:
    cmp r4, #2
    bge jacdac_RegisterClient_handlePacket__P3535_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_RegisterClient_handlePacket__P3535_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_RegisterClient_handlePacket__P3535:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    mov lr, r7
jacdac_RegisterClient_handlePacket__P3535_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_RegisterClient_handlePacket__P3535_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isRegGet__P2940
_proccall780:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_104      
.jmpz779:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_104      
.lazySkip_2_104:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_regCode__P2941
_proccall781:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_104:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz782
    b .else_0_104      
.object PUSH
.balign 4
_ldlit_253:
 .word client_inline__P7839_Lit
_ldlit_254:
 .word jacdac_Client_handlePacketOuter_inline__P7891_Lit
.object POP
.jmpz782:
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_104      
.jmpz783:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_104      
.lazySkip_4_104:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_3_104:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_104      
.jmpz784:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_104      
.lazySkip_6_104:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl helpers_bufferEquals__P2626
_proccall785:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_5_104:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall786:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_104      
.jmpz787:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #132
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall788:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall789:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_7_104:
.afterif_8_104:
.else_0_104:
.afterif_9_104:
.ret.3535:
    @stackempty locals
    movs r0, #0
.final_10_104:
    add sp, #4*2 ; pop locals 2
jacdac_RegisterClient_handlePacket__P3535_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(140,5): helpers.bufferEquals
    ;
    .object helpers_bufferEquals__P2626 "core/buffer.ts(140,5): helpers.bufferEquals"
helpers_bufferEquals__P2626_pre:
    .section code
    .balign 4
    .section code
helpers_bufferEquals__P2626:
helpers_bufferEquals__P2626_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_bufferEquals__P2626_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_105      
.jmpz790:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_105      
.lazySkip_2_105:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_105:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_105      
.jmpz791:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    b .ret.2626      
.else_0_105:
.afterif_3_105:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_4_105      
.jmpz792:
    movs r0, #10
    b .ret.2626      
.else_4_105:
.afterif_5_105:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.7983:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7983      
.jmpz793:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_6_105      
.jmpz794:
    movs r0, #10
    b .ret.2626      
.else_6_105:
.afterif_7_105:
.cont.7983:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.7983      
.brk.7983:
    movs r0, #66
.ret.2626:
    @stackempty locals
.final_8_105:
    add sp, #4*1 ; pop locals 1
helpers_bufferEquals__P2626_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1235,9): jacdac.Client.raiseEvent
    ;
    .object jacdac_Client_raiseEvent__P4980 "jacdac/routing.ts(1235,9): jacdac.Client.raiseEvent"
jacdac_Client_raiseEvent__P4980_pre:
    .section code
    .balign 4
jacdac_Client_raiseEvent__P4980_args:
    cmp r4, #2
    bge jacdac_Client_raiseEvent__P4980_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Client_raiseEvent__P4980_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Client_raiseEvent__P4980:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_raiseEvent__P4980_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_raiseEvent__P4980_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, _ldlit_256 ; 122881      
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_41
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4980:
    @stackempty locals
    movs r0, #0
.final_0_106:
jacdac_Client_raiseEvent__P4980_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(901,9): jacdac.RegisterClient.reset
    ;
    .object jacdac_RegisterClient_reset__P3524 "jacdac/routing.ts(901,9): jacdac.RegisterClient.reset"
jacdac_RegisterClient_reset__P3524_pre:
    .section code
    .balign 4
jacdac_RegisterClient_reset__P3524_args:
    cmp r4, #1
    bge jacdac_RegisterClient_reset__P3524_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_RegisterClient_reset__P3524_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_reset__P3524:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    mov lr, r7
jacdac_RegisterClient_reset__P3524_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_reset__P3524_locals:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3524:
    @stackempty locals
    movs r0, #0
.final_0_107:
jacdac_RegisterClient_reset__P3524_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(255,5): helpers.arrayForEach
    ;
    .object helpers_arrayForEach__P2001 "core/pxt-helpers.ts(255,5): helpers.arrayForEach"
helpers_arrayForEach__P2001_pre:
    .section code
    .balign 4
    .section code
helpers_arrayForEach__P2001:
helpers_arrayForEach__P2001_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayForEach__P2001_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.8019:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.8019      
.jmpz795:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_15
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.8019:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.8019      
.brk.8019:
.ret.2001:
    @stackempty locals
    movs r0, #0
.final_0_108:
    add sp, #4*2 ; pop locals 2
helpers_arrayForEach__P2001_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(172,9): jacdac.JDPacket.eventCode
    ;
    .object jacdac_JDPacket_eventCode__P2937 "jacdac/packet.ts(172,9): jacdac.JDPacket.eventCode"
jacdac_JDPacket_eventCode__P2937_pre:
    .section code
    .balign 4
jacdac_JDPacket_eventCode__P2937_args:
    cmp r4, #1
    bge jacdac_JDPacket_eventCode__P2937_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_eventCode__P2937_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_eventCode__P2937:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_eventCode__P2937_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_eventCode__P2937_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isEvent__P2936_nochk
_proccall798:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_109      
.jmpz797:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934_nochk
_proccall799:
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
    b .condexprfin_1_109      
.condexprz_0_109:
    movs r0, #0
.condexprfin_1_109:
; jmp value (already in r0)
.ret.2937:
    @stackempty locals
.final_2_109:
jacdac_JDPacket_eventCode__P2937_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(178,9): jacdac.JDPacket.eventCounter
    ;
    .object jacdac_JDPacket_eventCounter__P2938 "jacdac/packet.ts(178,9): jacdac.JDPacket.eventCounter"
jacdac_JDPacket_eventCounter__P2938_pre:
    .section code
    .balign 4
jacdac_JDPacket_eventCounter__P2938_args:
    cmp r4, #1
    bge jacdac_JDPacket_eventCounter__P2938_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_eventCounter__P2938_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_eventCounter__P2938:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_eventCounter__P2938_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_eventCounter__P2938_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isEvent__P2936_nochk
_proccall801:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_110      
.jmpz800:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934_nochk
_proccall802:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #255
    bl _numops_ands
    b .condexprfin_1_110      
.condexprz_0_110:
    movs r0, #0
.condexprfin_1_110:
; jmp value (already in r0)
.ret.2938:
    @stackempty locals
.final_2_110:
jacdac_JDPacket_eventCounter__P2938_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(164,9): jacdac.JDPacket.isEvent
    ;
    .object jacdac_JDPacket_isEvent__P2936 "jacdac/packet.ts(164,9): jacdac.JDPacket.isEvent"
jacdac_JDPacket_isEvent__P2936_pre:
    .section code
    .balign 4
jacdac_JDPacket_isEvent__P2936_args:
    cmp r4, #1
    bge jacdac_JDPacket_isEvent__P2936_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_isEvent__P2936_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_isEvent__P2936:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_isEvent__P2936_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_isEvent__P2936_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isReport__P2953_nochk
_proccall804:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_111      
.jmpz803:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_111      
.lazySkip_1_111:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2931_nochk
_proccall805:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #97
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_0_111:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_111      
.jmpz806:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_111      
.lazySkip_3_111:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934_nochk
_proccall807:
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_257 ; 65537      
    bl _numops_ands
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_2_111:
; jmp value (already in r0)
.ret.2936:
    @stackempty locals
.final_4_111:
jacdac_JDPacket_isEvent__P2936_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(268,9): jacdac.JDPacket.isReport
    ;
    .object jacdac_JDPacket_isReport__P2953 "jacdac/packet.ts(268,9): jacdac.JDPacket.isReport"
jacdac_JDPacket_isReport__P2953_pre:
    .section code
    .balign 4
jacdac_JDPacket_isReport__P2953_args:
    cmp r4, #1
    bge jacdac_JDPacket_isReport__P2953_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_isReport__P2953_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_isReport__P2953:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_isReport__P2953_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_isReport__P2953_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2953:
    @stackempty locals
.final_0_112:
jacdac_JDPacket_isReport__P2953_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(122,9): jacdac.JDPacket.packetFlags
    ;
    .object jacdac_JDPacket_packetFlags__P2926 "jacdac/packet.ts(122,9): jacdac.JDPacket.packetFlags"
jacdac_JDPacket_packetFlags__P2926_pre:
    .section code
    .balign 4
jacdac_JDPacket_packetFlags__P2926_args:
    cmp r4, #1
    bge jacdac_JDPacket_packetFlags__P2926_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_packetFlags__P2926_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_packetFlags__P2926:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_packetFlags__P2926_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_packetFlags__P2926_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
.ret.2926:
    @stackempty locals
.final_0_113:
jacdac_JDPacket_packetFlags__P2926_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1463,9): jacdac.Device.serviceClassAt
    ;
    .object jacdac_Device_serviceClassAt__P3588 "jacdac/routing.ts(1463,9): jacdac.Device.serviceClassAt"
jacdac_Device_serviceClassAt__P3588_pre:
    .section code
    .balign 4
jacdac_Device_serviceClassAt__P3588_args:
    cmp r4, #2
    bge jacdac_Device_serviceClassAt__P3588_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Device_serviceClassAt__P3588_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Device_serviceClassAt__P3588:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_serviceClassAt__P3588_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_serviceClassAt__P3588_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_eq
    beq .condexprz_0_114      
.jmpz808:
    movs r0, #1
    b .condexprfin_1_114      
.condexprz_0_114:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    movs r1, #11
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
.condexprfin_1_114:
; jmp value (already in r0)
.ret.3588:
    @stackempty locals
.final_2_114:
jacdac_Device_serviceClassAt__P3588_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(193,9): jacdac.JDPacket.regCode
    ;
    .object jacdac_JDPacket_regCode__P2941 "jacdac/packet.ts(193,9): jacdac.JDPacket.regCode"
jacdac_JDPacket_regCode__P2941_pre:
    .section code
    .balign 4
jacdac_JDPacket_regCode__P2941_args:
    cmp r4, #1
    bge jacdac_JDPacket_regCode__P2941_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_regCode__P2941_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_256:
 .word 122881
_ldlit_257:
 .word 65537
.object POP
    .section code
jacdac_JDPacket_regCode__P2941:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_regCode__P2941_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_regCode__P2941_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934_nochk
_proccall809:
    add sp, #4*1 ; pop locals 1
    movs r1, #31
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
.ret.2941:
    @stackempty locals
.final_0_115:
jacdac_JDPacket_regCode__P2941_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(189,9): jacdac.JDPacket.isRegGet
    ;
    .object jacdac_JDPacket_isRegGet__P2940 "jacdac/packet.ts(189,9): jacdac.JDPacket.isRegGet"
jacdac_JDPacket_isRegGet__P2940_pre:
    .section code
    .balign 4
jacdac_JDPacket_isRegGet__P2940_args:
    cmp r4, #1
    bge jacdac_JDPacket_isRegGet__P2940_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_isRegGet__P2940_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_isRegGet__P2940:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_isRegGet__P2940_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_isRegGet__P2940_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934_nochk
_proccall810:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #25
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.ret.2940:
    @stackempty locals
.final_0_116:
jacdac_JDPacket_isRegGet__P2940_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1424,9): jacdac.Device.lookupQuery
    ;
    .object jacdac_Device_lookupQuery__P5102 "jacdac/routing.ts(1424,9): jacdac.Device.lookupQuery"
jacdac_Device_lookupQuery__P5102_pre:
    .section code
    .balign 4
jacdac_Device_lookupQuery__P5102_args:
    cmp r4, #3
    bge jacdac_Device_lookupQuery__P5102_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_Device_lookupQuery__P5102_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_Device_lookupQuery__P5102:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_lookupQuery__P5102_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_lookupQuery__P5102_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_117      
.jmpz811:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_117:
.afterif_1_117:
    movs r0, #2
    ldr r1, _ldlit_259 ; jacdac_Device_lookupQuery_inline__P8097_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFind__P2003
_proccall812:
    add sp, #4*2 ; pop locals 2
.ret.5102:
    @stackempty locals
.final_2_117:
jacdac_Device_lookupQuery__P5102_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1426,38): jacdac.Device.lookupQuery.inline
    ;
    .object jacdac_Device_lookupQuery_inline__P8097 "jacdac/routing.ts(1426,38): jacdac.Device.lookupQuery.inline"
jacdac_Device_lookupQuery_inline__P8097_pre:
    .section code
    .balign 4
jacdac_Device_lookupQuery_inline__P8097_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_Device_lookupQuery_inline__P8097_args@fn
jacdac_Device_lookupQuery_inline__P8097_args:
    cmp r4, #1
    bge jacdac_Device_lookupQuery_inline__P8097_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Device_lookupQuery_inline__P8097_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_lookupQuery_inline__P8097:
jacdac_Device_lookupQuery_inline__P8097_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_lookupQuery_inline__P8097_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_RegQuery__C5099_validate_38
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_118      
.jmpz813:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_118      
.lazySkip_1_118:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_jacdac_RegQuery__C5099_validate_38
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_0_118:
; jmp value (already in r0)
.ret.8097:
    @stackempty locals
.final_2_118:
jacdac_Device_lookupQuery_inline__P8097_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(256,9): jacdac.JDPacket.getNumber
    ;
    .object jacdac_JDPacket_getNumber__P2950 "jacdac/packet.ts(256,9): jacdac.JDPacket.getNumber"
jacdac_JDPacket_getNumber__P2950_pre:
    .section code
    .balign 4
jacdac_JDPacket_getNumber__P2950_args:
    cmp r4, #3
    bge jacdac_JDPacket_getNumber__P2950_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_JDPacket_getNumber__P2950_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_JDPacket_getNumber__P2950:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_getNumber__P2950_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_getNumber__P2950_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*3 ; pop locals 3
.ret.2950:
    @stackempty locals
.final_0_119:
jacdac_JDPacket_getNumber__P2950_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(199,9): jacdac.Bus.reattach
    ;
    .object jacdac_Bus_reattach__P3474 "jacdac/routing.ts(199,9): jacdac.Bus.reattach"
jacdac_Bus_reattach__P3474_pre:
    .section code
    .balign 4
jacdac_Bus_reattach__P3474_args:
    cmp r4, #2
    bge jacdac_Bus_reattach__P3474_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Bus_reattach__P3474_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_reattach__P3474:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_reattach__P3474_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Bus_reattach__P3474_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_Device__C3572_validate_31
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_Device_toString__P3584
_proccall814:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_260 ; _str175      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_261 ; _str176      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_262 ; _str145      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall815:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #12]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.8157:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz816
    b .brk.8157      
.jmpz816:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_120      
.jmpz817:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Client__detach__P3563
_proccall818:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.8157      
.else_0_120:
.afterif_1_120:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Device_serviceClassAt__P3588
_proccall819:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_120      
.jmpz820:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_120      
.lazySkip_4_120:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Client_roleQuery__P3553
_proccall821:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl jacdac_Device_matchesRoleAt__P3585
_proccall822:
    add sp, #4*4 ; pop locals 4
.lazy_3_120:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz823
    b .else_2_120      
.object PUSH
.balign 4
_ldlit_259:
 .word jacdac_Device_lookupQuery_inline__P8097_Lit
_ldlit_260:
 .word _str175
_ldlit_261:
 .word _str176
_ldlit_262:
 .word _str145
.object POP
.jmpz823:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Client_roleName__P3552
_proccall824:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_264 ; _str177      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall825:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    movs r2, #1
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_5_120      
.else_2_120:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Client__detach__P3563
_proccall826:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_5_120:
.cont.8157:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.8157      
.brk.8157:
    movs r0, #0
    str r0, [sp, locals@3]
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _inst_jacdac_Device__C3572_validate_31
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall827:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_eq
    beq .else_6_120      
.jmpz828:
    ldr r0, _ldlit_265 ; _str178      
    push {r0} ; proc-arg
    bl jacdac_log__P5087
_proccall829:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .ret.3474      
.else_6_120:
.afterif_7_120:
    movs r0, #9
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.8208:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz830
    b .brk.8208      
.jmpz830:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_120      
.jmpz831:
    b .cont.8208      
.else_8_120:
.afterif_9_120:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_42
    movs r1, #11
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    str r0, [sp, locals@9]
    movs r0, #1
    str r0, [sp, locals@10]
    @stackempty locals
.fortop.8226:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.8226      
.jmpz832:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    ldr r0, [sp, locals@8]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #56]
    ldr r1, [sp, locals@7]
    bl _cmp_eq
    beq .else_10_120      
.jmpz833:
    ldr r0, [sp, locals@8]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_266 ; _str179      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_267 ; _str143      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3583
_proccall834:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_268 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall835:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl jacdac_Client__attach__P3562
_proccall837:
    add sp, #4*4 ; pop locals 4
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_120      
.jmpz836:
    ldr r0, _ldlit_269 ; _str180      
    push {r0} ; proc-arg
    bl jacdac_log__P5087
_proccall838:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.8226      
.else_11_120:
.afterif_12_120:
.else_10_120:
.afterif_13_120:
.cont.8226:
    ldr r0, [sp, locals@10]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@10]
    b .fortop.8226      
.brk.8226:
    movs r0, #0
    str r0, [sp, locals@9]
.cont.8208:
    ldr r0, [sp, locals@6]
    movs r1, #9
    bl _numops_adds
    str r0, [sp, locals@6]
    @stackempty locals
    b .fortop.8208      
.brk.8208:
.ret.3474:
    @stackempty locals
    movs r0, #0
.final_14_120:
    add sp, #4*11 ; pop locals 11
jacdac_Bus_reattach__P3474_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1176,9): jacdac.Client._attach
    ;
    .object jacdac_Client__attach__P3562 "jacdac/routing.ts(1176,9): jacdac.Client._attach"
jacdac_Client__attach__P3562_pre:
    .section code
    .balign 4
jacdac_Client__attach__P3562_args:
    cmp r4, #4
    bge jacdac_Client__attach__P3562_nochk
    push {lr}
    bl _expand_args_4_43
    bl jacdac_Client__attach__P3562_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
jacdac_Client__attach__P3562:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client__attach__P3562_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client__attach__P3562_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_121      
.jmpz839:
    ldr r0, _ldlit_270 ; _str199      
    push {r0} ; proc-arg
    bl jacdac_panic__P3479
_proccall840:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_121:
.afterif_1_121:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_121      
.jmpz841:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_roleQuery__P3553_nochk
_proccall843:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_Device_matchesRoleAt__P3585
_proccall844:
    add sp, #4*4 ; pop locals 4
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_121      
.jmpz842:
    movs r0, #10
    b .ret.3562      
    b .afterif_4_121      
.object PUSH
.balign 4
_ldlit_264:
 .word _str177
_ldlit_265:
 .word _str178
_ldlit_266:
 .word _str179
_ldlit_267:
 .word _str143
_ldlit_268:
 .word _str89
_ldlit_269:
 .word _str180
_ldlit_270:
 .word _str199
.object POP
.else_3_121:
.afterif_4_121:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_device__P3555_nochk
_proccall845:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_attachClient__P3471
_proccall846:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_121:
.afterif_5_121:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_272 ; _str200      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_273 ; _str143      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_Device_toString__P3584
_proccall847:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_274 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall848:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_handleConnected__P4979_nochk
_proccall849:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
.ret.3562:
    @stackempty locals
.final_6_121:
jacdac_Client__attach__P3562_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1193,9): jacdac.Client.handleConnected
    ;
    .object jacdac_Client_handleConnected__P4979 "jacdac/routing.ts(1193,9): jacdac.Client.handleConnected"
jacdac_Client_handleConnected__P4979_pre:
    .section code
    .balign 4
jacdac_Client_handleConnected__P4979_args:
    cmp r4, #1
    bge jacdac_Client_handleConnected__P4979_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Client_handleConnected__P4979_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_handleConnected__P4979:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_handleConnected__P4979_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_handleConnected__P4979_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; the one arg
    bl jacdac_ClientPacketQueue_resend__P5092
_proccall850:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #140
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall851:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4979:
    @stackempty locals
    movs r0, #0
.final_0_122:
jacdac_Client_handleConnected__P4979_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(853,9): jacdac.ClientPacketQueue.resend
    ;
    .object jacdac_ClientPacketQueue_resend__P5092 "jacdac/routing.ts(853,9): jacdac.ClientPacketQueue.resend"
jacdac_ClientPacketQueue_resend__P5092_pre:
    .section code
    .balign 4
jacdac_ClientPacketQueue_resend__P5092_args:
    cmp r4, #1
    bge jacdac_ClientPacketQueue_resend__P5092_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_ClientPacketQueue_resend__P5092_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_ClientPacketQueue_resend__P5092:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ClientPacketQueue__C5088_validate_44
    mov lr, r7
jacdac_ClientPacketQueue_resend__P5092_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_ClientPacketQueue_resend__P5092_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_123      
.jmpz852:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_123      
.lazySkip_2_123:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_123:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_123      
.jmpz853:
    b .ret.5092      
.else_0_123:
.afterif_3_123:
    movs r0, #10
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.8332:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.8332      
.jmpz854:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _cmp_neq
    beq .else_4_123      
.jmpz855:
    movs r0, #66
    str r0, [sp, locals@1]
    @stackempty locals
.else_4_123:
.afterif_5_123:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_fromFrameless__P2918
_proccall856:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Client_sendCommand__P3564
_proccall857:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.8332:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.8332      
.brk.8332:
    movs r0, #0
    str r0, [sp, locals@3]
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_123      
.jmpz858:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_275 ; jacdac_ClientPacketQueue_resend_inline__P8351_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P2002
_proccall859:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_6_123:
.afterif_7_123:
.ret.5092:
    @stackempty locals
    movs r0, #0
.final_8_123:
    add sp, #4*5 ; pop locals 5
jacdac_ClientPacketQueue_resend__P5092_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(864,21): jacdac.ClientPacketQueue.resend.inline
    ;
    .object jacdac_ClientPacketQueue_resend_inline__P8351 "jacdac/routing.ts(864,21): jacdac.ClientPacketQueue.resend.inline"
jacdac_ClientPacketQueue_resend_inline__P8351_pre:
    .section code
    .balign 4
jacdac_ClientPacketQueue_resend_inline__P8351_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_ClientPacketQueue_resend_inline__P8351_args@fn
jacdac_ClientPacketQueue_resend_inline__P8351_args:
    cmp r4, #1
    bge jacdac_ClientPacketQueue_resend_inline__P8351_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_ClientPacketQueue_resend_inline__P8351_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_ClientPacketQueue_resend_inline__P8351:
jacdac_ClientPacketQueue_resend_inline__P8351_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ClientPacketQueue_resend_inline__P8351_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.ret.8351:
    @stackempty locals
.final_0_124:
jacdac_ClientPacketQueue_resend_inline__P8351_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(69,9): jacdac.JDPacket.fromFrameless
    ;
    .object jacdac_JDPacket_fromFrameless__P2918 "jacdac/packet.ts(69,9): jacdac.JDPacket.fromFrameless"
jacdac_JDPacket_fromFrameless__P2918_pre:
    .section code
    .balign 4
jacdac_JDPacket_fromFrameless__P2918_args:
    cmp r4, #1
    bge jacdac_JDPacket_fromFrameless__P2918_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_fromFrameless__P2918_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_fromFrameless__P2918:
jacdac_JDPacket_fromFrameless__P2918_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_fromFrameless__P2918_locals:
    ldr r0, _ldlit_276 ; jacdac_JDPacket__C2910_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_constructor__P4936
_proccall860:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #16
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C2910_validate_27
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    movs r1, #12
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #4
    movs r2, #1
    negs r2, r2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C2910_validate_27
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2918:
    @stackempty locals
.final_0_125:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_fromFrameless__P2918_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_272:
 .word _str200
_ldlit_273:
 .word _str143
_ldlit_274:
 .word _str89
_ldlit_275:
 .word jacdac_ClientPacketQueue_resend_inline__P8351_Lit
_ldlit_276:
 .word jacdac_JDPacket__C2910_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(183,9): jacdac.Bus.attachClient
    ;
    .object jacdac_Bus_attachClient__P3471 "jacdac/routing.ts(183,9): jacdac.Bus.attachClient"
jacdac_Bus_attachClient__P3471_pre:
    .section code
    .balign 4
jacdac_Bus_attachClient__P3471_args:
    cmp r4, #2
    bge jacdac_Bus_attachClient__P3471_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Bus_attachClient__P3471_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_attachClient__P3471:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_attachClient__P3471_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_attachClient__P3471_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.ret.3471:
    @stackempty locals
    movs r0, #0
.final_0_126:
jacdac_Bus_attachClient__P3471_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1085,9): jacdac.Client.device
    ;
    .object jacdac_Client_device__P3555 "jacdac/routing.ts(1085,9): jacdac.Client.device"
jacdac_Client_device__P3555_pre:
    .section code
    .balign 4
jacdac_Client_device__P3555_args:
    cmp r4, #2
    bge jacdac_Client_device__P3555_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Client_device__P3555_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Client_device__P3555:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_device__P3555_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_device__P3555_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    ldr r1, [sp, args@1]
    bl _cmp_neqq
    beq .else_0_127      
.jmpz861:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    mov r3, r0
    ldr r0, _ldlit_278 ; jacdac_Client_device_inline__P8399_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P2001
_proccall862:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_127:
.afterif_1_127:
.ret.3555:
    @stackempty locals
    movs r0, #0
.final_2_127:
jacdac_Client_device__P3555_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1088,40): jacdac.Client.device.inline
    ;
    .object jacdac_Client_device_inline__P8399 "jacdac/routing.ts(1088,40): jacdac.Client.device.inline"
jacdac_Client_device_inline__P8399_pre:
    .section code
    .balign 4
jacdac_Client_device_inline__P8399_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_Client_device_inline__P8399_args@fn
jacdac_Client_device_inline__P8399_args:
    cmp r4, #1
    bge jacdac_Client_device_inline__P8399_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Client_device_inline__P8399_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_device_inline__P8399:
jacdac_Client_device_inline__P8399_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_device_inline__P8399_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_reset__P3524
_proccall863:
    add sp, #4*1 ; pop locals 1
.ret.8399:
    @stackempty locals
    movs r0, #0
.final_0_128:
jacdac_Client_device_inline__P8399_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1063,9): jacdac.Client.role
    ;
    .object jacdac_Client_role__P3551 "jacdac/routing.ts(1063,9): jacdac.Client.role"
jacdac_Client_role__P3551_pre:
    .section code
    .balign 4
jacdac_Client_role__P3551_args:
    cmp r4, #1
    bge jacdac_Client_role__P3551_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Client_role__P3551_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_role__P3551:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_role__P3551_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_role__P3551_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
.ret.3551:
    @stackempty locals
.final_0_129:
jacdac_Client_role__P3551_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1067,9): jacdac.Client.roleName
    ;
    .object jacdac_Client_roleName__P3552 "jacdac/routing.ts(1067,9): jacdac.Client.roleName"
jacdac_Client_roleName__P3552_pre:
    .section code
    .balign 4
jacdac_Client_roleName__P3552_args:
    cmp r4, #1
    bge jacdac_Client_roleName__P3552_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Client_roleName__P3552_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_roleName__P3552:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_roleName__P3552_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Client_roleName__P3552_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_279 ; _str6      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    negs r1, r1
    bl _cmp_gt
    beq .else_0_130      
.jmpz864:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_stringSubstr__P2010
_proccall865:
    add sp, #4*3 ; pop locals 3
    b .ret.3552      
    b .afterif_1_130      
.else_0_130:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    b .ret.3552      
.afterif_1_130:
    movs r0, #0
.ret.3552:
    @stackempty locals
.final_2_130:
    add sp, #4*1 ; pop locals 1
jacdac_Client_roleName__P3552_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(380,5): helpers.stringSubstr
    ;
    .object helpers_stringSubstr__P2010 "core/pxt-helpers.ts(380,5): helpers.stringSubstr"
helpers_stringSubstr__P2010_pre:
    .section code
    .balign 4
    .section code
helpers_stringSubstr__P2010:
helpers_stringSubstr__P2010_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_stringSubstr__P2010_locals:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .condexprz_0_131      
.jmpz866:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    b .condexprfin_1_131      
.condexprz_0_131:
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_131      
.jmpz867:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_131      
.lazySkip_3_131:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_2_131:
; jmp value (already in r0)
.condexprfin_1_131:
; jmp value (already in r0)
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_25
    mov r7, sp
    str r7, [r6, #4]
    bl String_::substr
    add sp, #4*3 ; pop locals 3
.ret.2010:
    @stackempty locals
.final_4_131:
helpers_stringSubstr__P2010_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1073,9): jacdac.Client.roleQuery
    ;
    .object jacdac_Client_roleQuery__P3553 "jacdac/routing.ts(1073,9): jacdac.Client.roleQuery"
jacdac_Client_roleQuery__P3553_pre:
    .section code
    .balign 4
jacdac_Client_roleQuery__P3553_args:
    cmp r4, #1
    bge jacdac_Client_roleQuery__P3553_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Client_roleQuery__P3553_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_roleQuery__P3553:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_roleQuery__P3553_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Client_roleQuery__P3553_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_279 ; _str6      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_132      
.jmpz868:
    ldr r0, _ldlit_280 ; jacdac_ClientRoleQuery__C3536_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_ClientRoleQuery_constructor__P3537
_proccall869:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    b .ret.3553      
.else_0_132:
.afterif_1_132:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_stringSubstr__P2010
_proccall870:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, _ldlit_280 ; jacdac_ClientRoleQuery__C3536_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_stringSubstr__P2010
_proccall871:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_ClientRoleQuery_constructor__P3537
_proccall872:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
.ret.3553:
    @stackempty locals
.final_2_132:
    add sp, #4*3 ; pop locals 3
jacdac_Client_roleQuery__P3553_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(998,9): jacdac.ClientRoleQuery.constructor
    ;
    .object jacdac_ClientRoleQuery_constructor__P3537 "jacdac/routing.ts(998,9): jacdac.ClientRoleQuery.constructor"
jacdac_ClientRoleQuery_constructor__P3537_pre:
    .section code
    .balign 4
    .section code
jacdac_ClientRoleQuery_constructor__P3537:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    mov lr, r7
jacdac_ClientRoleQuery_constructor__P3537_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_ClientRoleQuery_constructor__P3537_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz873
    b .else_0_133      
.jmpz873:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_281 ; _str193      
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl helpers_stringSplit__P2014
_proccall874:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.8479:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz875
    b .brk.8479      
.jmpz875:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_282 ; _str194      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    movs r1, #1
    bl _cmp_lt
    beq .else_1_133      
.jmpz876:
    b .cont.8479      
.else_1_133:
.afterif_2_133:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall877:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_stringSlice__P2011
_proccall878:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0}; tmpstore @1
    mov r1, r0
    ldr r0, _ldlit_283 ; _str195      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz879
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_133      
.object PUSH
.balign 4
_ldlit_278:
 .word jacdac_Client_device_inline__P8399_Lit
_ldlit_279:
 .word _str6
_ldlit_280:
 .word jacdac_ClientRoleQuery__C3536_VT
_ldlit_281:
 .word _str193
_ldlit_282:
 .word _str194
_ldlit_283:
 .word _str195
.object POP
.jmpz879:
    ldr r0, _ldlit_285 ; _str196      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz880
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_133      
.jmpz880:
    ldr r0, _ldlit_286 ; _str197      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz881
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_133      
.jmpz881:
    pop {r0} ; tmpref @1
    b .brk.8500      
.switch_3_133:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@5]
    str r1, [r0, #8]
    @stackempty locals
    b .brk.8500      
.switch_4_133:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl parseInt__P1989
_proccall882:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.8500      
.switch_5_133:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl parseInt__P1989
_proccall883:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.brk.8500:
.cont.8479:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.8479      
.brk.8479:
    movs r0, #0
    str r0, [sp, locals@1]
.else_0_133:
.afterif_6_133:
    movs r0, #0
.ret.3537:
    @stackempty locals
.final_7_133:
    add sp, #4*6 ; pop locals 6
jacdac_ClientRoleQuery_constructor__P3537_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(435,5): helpers.stringSplit
    ;
    .object helpers_stringSplit__P2014 "core/pxt-helpers.ts(435,5): helpers.stringSplit"
helpers_stringSplit__P2014_pre:
    .section code
    .balign 4
    .section code
helpers_stringSplit__P2014:
helpers_stringSplit__P2014_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_stringSplit__P2014_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_134      
.jmpz884:
    ldr r0, _ldlit_287 ; 1073741825      
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_1_134      
.else_0_134:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_134      
.jmpz885:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_3_134      
.else_2_134:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, locals@1]
    @stackempty locals
.afterif_3_134:
.afterif_1_134:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_eq
    beq .else_4_134      
.jmpz886:
    ldr r0, [sp, locals@0]
    b .ret.2014      
.else_4_134:
.afterif_5_134:
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_6_134      
.jmpz887:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.2014      
.else_6_134:
.afterif_7_134:
    ldr r0, [sp, locals@2]
    movs r1, #1
    bl _cmp_eq
    beq .else_8_134      
.jmpz888:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_splitMatch__P4727
_proccall889:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #1
    negs r1, r1
    bl _cmp_gt
    beq .else_9_134      
.jmpz890:
    ldr r0, [sp, locals@0]
    b .ret.2014      
.else_9_134:
.afterif_10_134:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.2014      
.else_8_134:
.afterif_11_134:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.cont.8564:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@2]
    bl _cmp_neq
    beq .brk.8564      
.jmpz891:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_splitMatch__P4727
_proccall892:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    movs r1, #1
    bl _cmp_lt
    beq .else_12_134      
.jmpz893:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .afterif_13_134      
.else_12_134:
    ldr r0, [sp, locals@8]
    ldr r1, [sp, locals@3]
    bl _cmp_eq
    beq .else_14_134      
.jmpz894:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .afterif_15_134      
.else_14_134:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall895:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@1]
    bl _cmp_eq
    beq .else_16_134      
.jmpz896:
    ldr r0, [sp, locals@0]
    b .ret.2014      
.else_16_134:
.afterif_17_134:
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.afterif_15_134:
.afterif_13_134:
    b .cont.8564      
.brk.8564:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall897:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2014:
    @stackempty locals
.final_18_134:
    add sp, #4*9 ; pop locals 9
helpers_stringSplit__P2014_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(481,5): helpers.splitMatch
    ;
    .object helpers_splitMatch__P4727 "core/pxt-helpers.ts(481,5): helpers.splitMatch"
helpers_splitMatch__P4727_pre:
    .section code
    .balign 4
    .section code
helpers_splitMatch__P4727:
helpers_splitMatch__P4727_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_splitMatch__P4727_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_0_135      
.jmpz898:
    movs r0, #1
    negs r0, r0
    b .ret.4727      
.else_0_135:
.afterif_1_135:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.8622:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.8622      
.jmpz899:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_2_135      
.jmpz900:
    movs r0, #1
    negs r0, r0
    b .ret.4727      
.else_2_135:
.afterif_3_135:
.cont.8622:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.8622      
.object PUSH
.balign 4
_ldlit_285:
 .word _str196
_ldlit_286:
 .word _str197
_ldlit_287:
 .word 1073741825
.object POP
.brk.8622:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
.ret.4727:
    @stackempty locals
.final_4_135:
    add sp, #4*3 ; pop locals 3
helpers_splitMatch__P4727_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1364,9): jacdac.Device.matchesRoleAt
    ;
    .object jacdac_Device_matchesRoleAt__P3585 "jacdac/routing.ts(1364,9): jacdac.Device.matchesRoleAt"
jacdac_Device_matchesRoleAt__P3585_pre:
    .section code
    .balign 4
jacdac_Device_matchesRoleAt__P3585_args:
    cmp r4, #4
    bge jacdac_Device_matchesRoleAt__P3585_nochk
    push {lr}
    bl _expand_args_4_43
    bl jacdac_Device_matchesRoleAt__P3585_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
jacdac_Device_matchesRoleAt__P3585:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_matchesRoleAt__P3585_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_matchesRoleAt__P3585_locals:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_136      
.jmpz901:
    movs r0, #66
    b .ret.3585      
.else_0_136:
.afterif_1_136:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .else_2_136      
.jmpz902:
    movs r0, #66
    b .ret.3585      
.else_2_136:
.afterif_3_136:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_289 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .else_4_136      
.jmpz903:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_290 ; _str203      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_291 ; _str204      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall904:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    b .ret.3585      
.else_4_136:
.afterif_5_136:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_289 ; _str89      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_ge
    beq .else_6_136      
.jmpz905:
    movs r0, #10
    b .ret.3585      
.else_6_136:
.afterif_7_136:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_136      
.jmpz906:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_136      
.lazySkip_10_136:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3583_nochk
_proccall907:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_9_136:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_12_136      
.jmpz908:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_11_136      
.lazySkip_12_136:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r1, _ldlit_292 ; _str149      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_14_136      
.jmpz909:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_13_136      
.lazySkip_14_136:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465
_proccall910:
    add sp, #4*1 ; pop locals 1
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_13_136:
; jmp value (already in r0)
.lazy_11_136:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz911
    b .else_8_136      
.jmpz911:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_17_136      
.jmpz912:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_16_136      
.lazySkip_17_136:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_16_136:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_15_136      
.jmpz913:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_290 ; _str203      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_293 ; _str205      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall914:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    b .ret.3585      
.else_15_136:
.afterif_18_136:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_21_136      
.jmpz915:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_20_136      
.lazySkip_21_136:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceOffsetAt__P5103_nochk
_proccall916:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_20_136:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_19_136      
.jmpz917:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_290 ; _str203      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_294 ; _str206      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall918:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    b .ret.3585      
.else_19_136:
.afterif_22_136:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_25_136      
.jmpz919:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_24_136      
.lazySkip_25_136:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_24_136:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz920
    b .else_23_136      
.object PUSH
.balign 4
_ldlit_289:
 .word _str89
_ldlit_290:
 .word _str203
_ldlit_291:
 .word _str204
_ldlit_292:
 .word _str149
_ldlit_293:
 .word _str205
_ldlit_294:
 .word _str206
.object POP
.jmpz920:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_296 ; _str203      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_297 ; _str207      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall921:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    b .ret.3585      
.else_23_136:
.afterif_26_136:
.else_8_136:
.afterif_27_136:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r3, r0
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac__rolemgr_getRole__P3328
_proccall922:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.3585:
    @stackempty locals
.final_28_136:
    add sp, #4*2 ; pop locals 2
jacdac_Device_matchesRoleAt__P3585_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(9,5): jacdac._rolemgr.getRole
    ;
    .object jacdac__rolemgr_getRole__P3328 "jacdac/rolemgr.ts(9,5): jacdac._rolemgr.getRole"
jacdac__rolemgr_getRole__P3328_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_getRole__P3328:
jacdac__rolemgr_getRole__P3328_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_getRole__P3328_locals:
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_298 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl settings_readString__P2828
_proccall923:
    add sp, #4*1 ; pop locals 1
.ret.3328:
    @stackempty locals
.final_0_137:
jacdac__rolemgr_getRole__P3328_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(111,5): settings.readString
    ;
    .object settings_readString__P2828 "settings/settings.ts(111,5): settings.readString"
settings_readString__P2828_pre:
    .section code
    .balign 4
    .section code
settings_readString__P2828:
settings_readString__P2828_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_readString__P2828_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_138      
.jmpz924:
    movs r0, #0
    b .ret.2828      
    b .afterif_1_138      
.else_0_138:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toString
    add sp, #4*1 ; pop locals 1
    b .ret.2828      
.afterif_1_138:
    movs r0, #0
.ret.2828:
    @stackempty locals
.final_2_138:
    add sp, #4*1 ; pop locals 1
settings_readString__P2828_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1448,9): jacdac.Device.serviceOffsetAt
    ;
    .object jacdac_Device_serviceOffsetAt__P5103 "jacdac/routing.ts(1448,9): jacdac.Device.serviceOffsetAt"
jacdac_Device_serviceOffsetAt__P5103_pre:
    .section code
    .balign 4
jacdac_Device_serviceOffsetAt__P5103_args:
    cmp r4, #3
    bge jacdac_Device_serviceOffsetAt__P5103_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_Device_serviceOffsetAt__P5103_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_Device_serviceOffsetAt__P5103:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_serviceOffsetAt__P5103_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_serviceOffsetAt__P5103_locals:
    movs r0, #1
    negs r0, r0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassLength__P3586_nochk
_proccall925:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.8796:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.8796      
.jmpz926:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassAt__P3588_nochk
_proccall928:
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@1]
    bl _cmp_eq
    beq .else_0_140      
.jmpz927:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@2]
    bl _cmp_eq
    beq .else_1_140      
.jmpz929:
    ldr r0, [sp, locals@0]
    b .ret.5103      
.else_1_140:
.afterif_2_140:
.else_0_140:
.afterif_3_140:
.cont.8796:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.8796      
.brk.8796:
    movs r0, #1
    negs r0, r0
.ret.5103:
    @stackempty locals
.final_4_140:
    add sp, #4*3 ; pop locals 3
jacdac_Device_serviceOffsetAt__P5103_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1429,9): jacdac.Device.serviceClassLength
    ;
    .object jacdac_Device_serviceClassLength__P3586 "jacdac/routing.ts(1429,9): jacdac.Device.serviceClassLength"
jacdac_Device_serviceClassLength__P3586_pre:
    .section code
    .balign 4
jacdac_Device_serviceClassLength__P3586_args:
    cmp r4, #1
    bge jacdac_Device_serviceClassLength__P3586_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Device_serviceClassLength__P3586_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_serviceClassLength__P3586:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_serviceClassLength__P3586_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_serviceClassLength__P3586_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
.ret.3586:
    @stackempty locals
.final_0_141:
jacdac_Device_serviceClassLength__P3586_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1198,9): jacdac.Client._detach
    ;
    .object jacdac_Client__detach__P3563 "jacdac/routing.ts(1198,9): jacdac.Client._detach"
jacdac_Client__detach__P3563_pre:
    .section code
    .balign 4
jacdac_Client__detach__P3563_args:
    cmp r4, #1
    bge jacdac_Client__detach__P3563_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Client__detach__P3563_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client__detach__P3563:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client__detach__P3563_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client__detach__P3563_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_roleName__P3552_nochk
_proccall930:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_299 ; _str201      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall931:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_142      
.jmpz932:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_142      
.jmpz933:
    ldr r0, _ldlit_300 ; _str202      
    push {r0} ; proc-arg
    bl jacdac_panic__P3479
_proccall934:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_1_142:
.afterif_2_142:
    movs r0, #6
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_device__P3555_nochk
_proccall935:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_detachClient__P3470
_proccall936:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_142:
.afterif_3_142:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall937:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3563:
    @stackempty locals
    movs r0, #0
.final_4_142:
jacdac_Client__detach__P3563_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(176,9): jacdac.Bus.detachClient
    ;
    .object jacdac_Bus_detachClient__P3470 "jacdac/routing.ts(176,9): jacdac.Bus.detachClient"
jacdac_Bus_detachClient__P3470_pre:
    .section code
    .balign 4
jacdac_Bus_detachClient__P3470_args:
    cmp r4, #2
    bge jacdac_Bus_detachClient__P3470_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Bus_detachClient__P3470_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_detachClient__P3470:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_detachClient__P3470_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_detachClient__P3470_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_0_143      
.jmpz938:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_clearAttachCache__P3467_nochk
_proccall939:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_143      
.object PUSH
.balign 4
_ldlit_296:
 .word _str203
_ldlit_297:
 .word _str207
_ldlit_298:
 .word _str89
_ldlit_299:
 .word _str201
_ldlit_300:
 .word _str202
.object POP
.else_0_143:
.afterif_1_143:
.ret.3470:
    @stackempty locals
    movs r0, #0
.final_2_143:
jacdac_Bus_detachClient__P3470_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(127,9): jacdac.Bus.clearAttachCache
    ;
    .object jacdac_Bus_clearAttachCache__P3467 "jacdac/routing.ts(127,9): jacdac.Bus.clearAttachCache"
jacdac_Bus_clearAttachCache__P3467_pre:
    .section code
    .balign 4
jacdac_Bus_clearAttachCache__P3467_args:
    cmp r4, #1
    bge jacdac_Bus_clearAttachCache__P3467_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Bus_clearAttachCache__P3467_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_clearAttachCache__P3467:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_clearAttachCache__P3467_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Bus_clearAttachCache__P3467_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.8858:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.8858      
.jmpz940:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #7
    bl _numops_ands
    movs r1, #1
    bl _cmp_eq
    beq .else_0_144      
.jmpz941:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl helpers_bufferConcat__P2625
_proccall942:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_Device__C3572_validate_31
    str r1, [r0, #36]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_144:
.afterif_1_144:
.cont.8858:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.8858      
.brk.8858:
    movs r0, #0
    str r0, [sp, locals@1]
.ret.3467:
    @stackempty locals
    movs r0, #0
.final_2_144:
    add sp, #4*3 ; pop locals 3
jacdac_Bus_clearAttachCache__P3467_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(133,5): helpers.bufferConcat
    ;
    .object helpers_bufferConcat__P2625 "core/buffer.ts(133,5): helpers.bufferConcat"
helpers_bufferConcat__P2625_pre:
    .section code
    .balign 4
    .section code
helpers_bufferConcat__P2625:
helpers_bufferConcat__P2625_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_bufferConcat__P2625_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_45
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2625:
    @stackempty locals
.final_0_145:
    add sp, #4*1 ; pop locals 1
helpers_bufferConcat__P2625_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1360,9): jacdac.Device.toString
    ;
    .object jacdac_Device_toString__P3584 "jacdac/routing.ts(1360,9): jacdac.Device.toString"
jacdac_Device_toString__P3584_pre:
    .section code
    .balign 4
jacdac_Device_toString__P3584_args:
    cmp r4, #1
    bge jacdac_Device_toString__P3584_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Device_toString__P3584_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_toString__P3584:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_toString__P3584_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_toString__P3584_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3583_nochk
_proccall943:
    add sp, #4*1 ; pop locals 1
.ret.3584:
    @stackempty locals
.final_0_146:
jacdac_Device_toString__P3584_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1902,5): jacdac.resetToProxy
    ;
    .object jacdac_resetToProxy__P5134 "jacdac/routing.ts(1902,5): jacdac.resetToProxy"
jacdac_resetToProxy__P5134_pre:
    .section code
    .balign 4
    .section code
jacdac_resetToProxy__P5134:
jacdac_resetToProxy__P5134_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_resetToProxy__P5134_locals:
    ldr r0, _ldlit_302 ; _str220      
    mov r7, sp
    str r7, [r6, #4]
    bl control::dmesg
    @stackempty locals
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_writeNumber__P2825
_proccall944:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::reset
    @stackempty locals
.ret.5134:
    @stackempty locals
    movs r0, #0
.final_0_147:
jacdac_resetToProxy__P5134_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(90,5): settings.writeNumber
    ;
    .object settings_writeNumber__P2825 "settings/settings.ts(90,5): settings.writeNumber"
settings_writeNumber__P2825_pre:
    .section code
    .balign 4
    .section code
settings_writeNumber__P2825:
settings_writeNumber__P2825_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeNumber__P2825_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl msgpack_packNumberArray__P2623
_proccall945:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl settings_writeBuffer__P2822
_proccall946:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2825:
    @stackempty locals
    movs r0, #0
.final_0_148:
settings_writeNumber__P2825_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(118,5): msgpack.packNumberArray
    ;
    .object msgpack_packNumberArray__P2623 "core/buffer.ts(118,5): msgpack.packNumberArray"
msgpack_packNumberArray__P2623_pre:
    .section code
    .balign 4
    .section code
msgpack_packNumberArray__P2623:
msgpack_packNumberArray__P2623_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_packNumberArray__P2623_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.8912:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.8912      
.jmpz947:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #6
    push {r0} ; proc-arg
    bl msgpack_packNumberCore__P4823
_proccall948:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.cont.8912:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.8912      
.brk.8912:
    movs r0, #0
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.8928:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.8928      
.jmpz949:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl msgpack_packNumberCore__P4823
_proccall950:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.cont.8928:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.8928      
.brk.8928:
    movs r0, #0
    str r0, [sp, locals@6]
    ldr r0, [sp, locals@4]
.ret.2623:
    @stackempty locals
.final_0_149:
    add sp, #4*8 ; pop locals 8
msgpack_packNumberArray__P2623_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(57,5): msgpack.packNumberCore
    ;
    .object msgpack_packNumberCore__P4823 "core/buffer.ts(57,5): msgpack.packNumberCore"
msgpack_packNumberCore__P4823_pre:
    .section code
    .balign 4
    .section code
msgpack_packNumberCore__P4823:
msgpack_packNumberCore__P4823_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_packNumberCore__P4823_locals:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #151
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_150      
.jmpz951:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_150      
.lazySkip_2_150:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_150:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_150      
.jmpz952:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #61
    negs r0, r0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_150      
.jmpz953:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_150      
.lazySkip_5_150:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_4_150:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_150      
.jmpz954:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_150      
.jmpz955:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_47
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_6_150:
.afterif_7_150:
    movs r0, #3
    b .ret.4823      
    b .afterif_8_150      
.else_3_150:
    movs r0, #1
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_9_150      
.jmpz956:
    ldr r0, [sp, args@2]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _cmp_le
    beq .else_10_150      
.jmpz957:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #153
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_11_150      
.else_10_150:
    ldr r0, [sp, args@2]
    ldr r1, _ldlit_303 ; 131071      
    bl _cmp_le
    beq .else_12_150      
.jmpz958:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #155
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_13_150      
.else_12_150:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #157
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_13_150:
.afterif_11_150:
    b .afterif_14_150      
.else_9_150:
    movs r0, #253
    negs r0, r0
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_15_150      
.jmpz959:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #161
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_16_150      
.else_15_150:
    ldr r0, _ldlit_304 ; -65533      
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_17_150      
.jmpz960:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #163
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_18_150      
.else_17_150:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_18_150:
.afterif_16_150:
.afterif_14_150:
.afterif_8_150:
    b .afterif_19_150      
.object PUSH
.balign 4
_ldlit_302:
 .word _str220
_ldlit_303:
 .word 131071
_ldlit_304:
 .word -65533
.object POP
.else_0_150:
.afterif_19_150:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl msgpack_tagFormat__P4822
_proccall961:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_20_150      
.jmpz962:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_47
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_20_150:
.afterif_21_150:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl pins_sizeOf__P2614
_proccall963:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
.ret.4823:
    @stackempty locals
.final_22_150:
    add sp, #4*2 ; pop locals 2
msgpack_packNumberCore__P4823_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(3,5): pins.sizeOf
    ;
    .object pins_sizeOf__P2614 "core/buffer.ts(3,5): pins.sizeOf"
pins_sizeOf__P2614_pre:
    .section code
    .balign 4
    .section code
pins_sizeOf__P2614:
pins_sizeOf__P2614_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pins_sizeOf__P2614_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Buffer_sizeOfNumberFormat__P2654
_proccall964:
    add sp, #4*1 ; pop locals 1
.ret.2614:
    @stackempty locals
.final_0_151:
pins_sizeOf__P2614_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(43,5): msgpack.tagFormat
    ;
    .object msgpack_tagFormat__P4822 "core/buffer.ts(43,5): msgpack.tagFormat"
msgpack_tagFormat__P4822_pre:
    .section code
    .balign 4
    .section code
msgpack_tagFormat__P4822:
msgpack_tagFormat__P4822_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
msgpack_tagFormat__P4822_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #151
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz965
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_152      
.jmpz965:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #153
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz966
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_152      
.jmpz966:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #155
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz967
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_152      
.jmpz967:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #157
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz968
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_152      
.jmpz968:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #161
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz969
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_152      
.jmpz969:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #163
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz970
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_152      
.jmpz970:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz971
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_152      
.jmpz971:
    pop {r0} ; tmpref @1
    b .switch_7_152      
.switch_0_152:
    movs r0, #33
    b .ret.4822      
.switch_1_152:
    movs r0, #15
    b .ret.4822      
.switch_2_152:
    movs r0, #19
    b .ret.4822      
.switch_3_152:
    movs r0, #25
    b .ret.4822      
.switch_4_152:
    movs r0, #13
    b .ret.4822      
.switch_5_152:
    movs r0, #17
    b .ret.4822      
.switch_6_152:
    movs r0, #21
    b .ret.4822      
.switch_7_152:
    movs r0, #6
    b .ret.4822      
.brk.9003:
    movs r0, #0
.ret.4822:
    @stackempty locals
.final_8_152:
msgpack_tagFormat__P4822_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(64,5): settings.writeBuffer
    ;
    .object settings_writeBuffer__P2822 "settings/settings.ts(64,5): settings.writeBuffer"
settings_writeBuffer__P2822_pre:
    .section code
    .balign 4
    .section code
settings_writeBuffer__P2822:
settings_writeBuffer__P2822_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeBuffer__P2822_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_48
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_set
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_153      
.jmpz972:
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_userClean
    @stackempty locals
    movs r0, #115
    lsls r0, r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::panic
    @stackempty locals
.else_0_153:
.afterif_1_153:
.ret.2822:
    @stackempty locals
    movs r0, #0
.final_2_153:
settings_writeBuffer__P2822_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1824,5): jacdac.isSimulator
    ;
    .object jacdac_isSimulator__P3602 "jacdac/routing.ts(1824,5): jacdac.isSimulator"
jacdac_isSimulator__P3602_pre:
    .section code
    .balign 4
    .section code
jacdac_isSimulator__P3602:
jacdac_isSimulator__P3602_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_isSimulator__P3602_locals:
    bl control_deviceDalVersion__P2859
_proccall973:
    push {r0} ; proc-arg
    ldr r1, _ldlit_306 ; _str99      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3602:
    @stackempty locals
.final_0_154:
    add sp, #4*1 ; pop locals 1
jacdac_isSimulator__P3602_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(17,5): control.deviceDalVersion
    ;
    .object control_deviceDalVersion__P2859 "jacdac/mbcompat.ts(17,5): control.deviceDalVersion"
control_deviceDalVersion__P2859_pre:
    .section code
    .balign 4
    .section code
control_deviceDalVersion__P2859:
control_deviceDalVersion__P2859_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_deviceDalVersion__P2859_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::_ramSize
    bl _numops_fromInt
    ldr r1, _ldlit_307 ; 2097153      
    bl _cmp_gt
    beq .condexprz_0_155      
.jmpz974:
    ldr r0, _ldlit_306 ; _str99      
    b .condexprfin_1_155      
.condexprz_0_155:
    ldr r0, _ldlit_308 ; _str100      
.condexprfin_1_155:
; jmp value (already in r0)
.ret.2859:
    @stackempty locals
.final_2_155:
control_deviceDalVersion__P2859_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1328,9): jacdac.Device.isBrain
    ;
    .object jacdac_Device_isBrain__P3577 "jacdac/routing.ts(1328,9): jacdac.Device.isBrain"
jacdac_Device_isBrain__P3577_pre:
    .section code
    .balign 4
jacdac_Device_isBrain__P3577_args:
    cmp r4, #1
    bge jacdac_Device_isBrain__P3577_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Device_isBrain__P3577_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_isBrain__P3577:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_isBrain__P3577_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_isBrain__P3577_locals:
    ldr r0, _ldlit_309 ; 544775627      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_hasService__P3594_nochk
_proccall975:
    add sp, #4*2 ; pop locals 2
.ret.3577:
    @stackempty locals
.final_0_156:
jacdac_Device_isBrain__P3577_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1583,9): jacdac.Device.hasService
    ;
    .object jacdac_Device_hasService__P3594 "jacdac/routing.ts(1583,9): jacdac.Device.hasService"
jacdac_Device_hasService__P3594_pre:
    .section code
    .balign 4
jacdac_Device_hasService__P3594_args:
    cmp r4, #2
    bge jacdac_Device_hasService__P3594_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Device_hasService__P3594_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Device_hasService__P3594:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_hasService__P3594_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_hasService__P3594_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassLength__P3586_nochk
_proccall976:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.9045:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.9045      
.jmpz977:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassAt__P3588_nochk
_proccall979:
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_0_157      
.jmpz978:
    movs r0, #66
    b .ret.3594      
.else_0_157:
.afterif_1_157:
.cont.9045:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.9045      
.brk.9045:
    movs r0, #10
.ret.3594:
    @stackempty locals
.final_2_157:
    add sp, #4*2 ; pop locals 2
jacdac_Device_hasService__P3594_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1754,5): jacdac.serviceMatches
    ;
    .object jacdac_serviceMatches__P5113 "jacdac/routing.ts(1754,5): jacdac.serviceMatches"
jacdac_serviceMatches__P5113_pre:
    .section code
    .balign 4
    .section code
jacdac_serviceMatches__P5113:
jacdac_serviceMatches__P5113_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_serviceMatches__P5113_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #36]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_158      
.jmpz980:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_158      
.lazySkip_2_158:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
.lazy_1_158:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_158      
.jmpz981:
    movs r0, #10
    b .ret.5113      
.else_0_158:
.afterif_3_158:
    movs r0, #9
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.9068:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.9068      
.jmpz982:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_4_158      
.jmpz983:
    movs r0, #10
    b .ret.5113      
.else_4_158:
.afterif_5_158:
.cont.9068:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.9068      
.brk.9068:
    movs r0, #66
.ret.5113:
    @stackempty locals
.final_6_158:
    add sp, #4*2 ; pop locals 2
jacdac_serviceMatches__P5113_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1323,9): jacdac.Device.constructor
    ;
    .object jacdac_Device_constructor__P3576 "jacdac/routing.ts(1323,9): jacdac.Device.constructor"
jacdac_Device_constructor__P3576_pre:
    .section code
    .balign 4
    .section code
jacdac_Device_constructor__P3576:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_constructor__P3576_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_constructor__P3576_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #32]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_constructor__P3623
_proccall984:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3576:
    @stackempty locals
.final_0_159:
jacdac_Device_constructor__P3576_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(20,9): jacdac.EventSource.constructor
    ;
    .object jacdac_EventSource_constructor__P3623 "jacdac/eventsource.ts(20,9): jacdac.EventSource.constructor"
jacdac_EventSource_constructor__P3623_pre:
    .section code
    .balign 4
    .section code
jacdac_EventSource_constructor__P3623:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3622_validate_49
    mov lr, r7
jacdac_EventSource_constructor__P3623_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_EventSource_constructor__P3623_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    movs r0, #0
.ret.3623:
    @stackempty locals
.final_0_160:
jacdac_EventSource_constructor__P3623_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1605,9): jacdac.Device._destroy
    ;
    .object jacdac_Device__destroy__P3597 "jacdac/routing.ts(1605,9): jacdac.Device._destroy"
jacdac_Device__destroy__P3597_pre:
    .section code
    .balign 4
jacdac_Device__destroy__P3597_args:
    cmp r4, #1
    bge jacdac_Device__destroy__P3597_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Device__destroy__P3597_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device__destroy__P3597:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device__destroy__P3597_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device__destroy__P3597_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3583_nochk
_proccall985:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_310 ; _str208      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P5087
_proccall986:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9100:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz987
    b .brk.9100      
.object PUSH
.balign 4
_ldlit_306:
 .word _str99
_ldlit_307:
 .word 2097153
_ldlit_308:
 .word _str100
_ldlit_309:
 .word 544775627
_ldlit_310:
 .word _str208
.object POP
.jmpz987:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_Client__detach__P3563
_proccall988:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.9100:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.9100      
.brk.9100:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #12]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall989:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626
_proccall990:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3597:
    @stackempty locals
    movs r0, #0
.final_0_161:
    add sp, #4*3 ; pop locals 3
jacdac_Device__destroy__P3597_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1354,9): jacdac.Device.shortId
    ;
    .object jacdac_Device_shortId__P3583 "jacdac/routing.ts(1354,9): jacdac.Device.shortId"
jacdac_Device_shortId__P3583_pre:
    .section code
    .balign 4
jacdac_Device_shortId__P3583_args:
    cmp r4, #1
    bge jacdac_Device_shortId__P3583_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Device_shortId__P3583_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_shortId__P3583:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_shortId__P3583_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_shortId__P3583_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_162      
.jmpz991:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; the one arg
    bl jacdac_shortDeviceId__P3571
_proccall992:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_162:
.afterif_1_162:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
.ret.3583:
    @stackempty locals
.final_2_162:
jacdac_Device_shortId__P3583_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1296,5): jacdac.shortDeviceId
    ;
    .object jacdac_shortDeviceId__P3571 "jacdac/routing.ts(1296,5): jacdac.shortDeviceId"
jacdac_shortDeviceId__P3571_pre:
    .section code
    .balign 4
    .section code
jacdac_shortDeviceId__P3571:
jacdac_shortDeviceId__P3571_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_shortDeviceId__P3571_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Buffer_fromHex__P2645
_proccall993:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #30
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::hash
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #53
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #131
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_13
    movs r1, #26
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #53
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #131
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_13
    movs r1, #169
    lsls r1, r1, #2
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #97
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_13
    movs r1, #26
    lsls r1, r1, #8
    adds r1, #104
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #97
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
.ret.3571:
    @stackempty locals
.final_0_163:
    add sp, #4*1 ; pop locals 1
jacdac_shortDeviceId__P3571_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(286,5): Buffer.fromHex
    ;
    .object Buffer_fromHex__P2645 "core/buffer.ts(286,5): Buffer.fromHex"
Buffer_fromHex__P2645_pre:
    .section code
    .balign 4
    .section code
Buffer_fromHex__P2645:
Buffer_fromHex__P2645_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Buffer_fromHex__P2645_locals:
    ldr r0, _ldlit_312 ; _str90      
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringToLowerCase__P2013
_proccall994:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9199:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.9199      
.jmpz995:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_164      
.jmpz996:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_164      
.lazySkip_2_164:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_1_164:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_164      
.jmpz997:
    ldr r0, _ldlit_313 ; _str91      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.else_0_164:
.afterif_3_164:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@4]
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_47
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.9199:
    ldr r0, [sp, locals@2]
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.9199      
.brk.9199:
    ldr r0, [sp, locals@1]
.ret.2645:
    @stackempty locals
.final_4_164:
    add sp, #4*5 ; pop locals 5
Buffer_fromHex__P2645_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(421,5): helpers.stringToLowerCase
    ;
    .object helpers_stringToLowerCase__P2013 "core/pxt-helpers.ts(421,5): helpers.stringToLowerCase"
helpers_stringToLowerCase__P2013_pre:
    .section code
    .balign 4
    .section code
helpers_stringToLowerCase__P2013:
helpers_stringToLowerCase__P2013_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_stringToLowerCase__P2013_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9246:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.9246      
.jmpz998:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #131
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_165      
.jmpz999:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_165      
.lazySkip_2_165:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #181
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_1_165:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_165      
.jmpz1000:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall1001:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #65
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
.else_0_165:
.afterif_3_165:
.cont.9246:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.9246      
.brk.9246:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall1002:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2013:
    @stackempty locals
.final_4_165:
    add sp, #4*4 ; pop locals 4
helpers_stringToLowerCase__P2013_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(389,5): jacdac.log
    ;
    .object jacdac_log__P5087 "jacdac/routing.ts(389,5): jacdac.log"
jacdac_log__P5087_pre:
    .section code
    .balign 4
    .section code
jacdac_log__P5087:
jacdac_log__P5087_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_log__P5087_locals:
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_314 ; _str186      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2379
_proccall1003:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5087:
    @stackempty locals
    movs r0, #0
.final_0_166:
jacdac_log__P5087_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1336,9): jacdac.Device.restartCounter
    ;
    .object jacdac_Device_restartCounter__P3579 "jacdac/routing.ts(1336,9): jacdac.Device.restartCounter"
jacdac_Device_restartCounter__P3579_pre:
    .section code
    .balign 4
jacdac_Device_restartCounter__P3579_args:
    cmp r4, #1
    bge jacdac_Device_restartCounter__P3579_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Device_restartCounter__P3579_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_restartCounter__P3579:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_restartCounter__P3579_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_restartCounter__P3579_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_announceflags__P3578_nochk
_proccall1004:
    add sp, #4*1 ; pop locals 1
    movs r1, #31
    bl _numops_ands
.ret.3579:
    @stackempty locals
.final_0_167:
jacdac_Device_restartCounter__P3579_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1332,9): jacdac.Device.announceflags
    ;
    .object jacdac_Device_announceflags__P3578 "jacdac/routing.ts(1332,9): jacdac.Device.announceflags"
jacdac_Device_announceflags__P3578_pre:
    .section code
    .balign 4
jacdac_Device_announceflags__P3578_args:
    cmp r4, #1
    bge jacdac_Device_announceflags__P3578_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Device_announceflags__P3578_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_312:
 .word _str90
_ldlit_313:
 .word _str91
_ldlit_314:
 .word _str186
.object POP
    .section code
jacdac_Device_announceflags__P3578:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_announceflags__P3578_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_announceflags__P3578_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #4
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
.ret.3578:
    @stackempty locals
.final_0_168:
jacdac_Device_announceflags__P3578_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(272,5): helpers.arrayFind
    ;
    .object helpers_arrayFind__P2003 "core/pxt-helpers.ts(272,5): helpers.arrayFind"
helpers_arrayFind__P2003_pre:
    .section code
    .balign 4
    .section code
helpers_arrayFind__P2003:
helpers_arrayFind__P2003_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayFind__P2003_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.9320:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.9320      
.jmpz1005:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_15
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_169      
.jmpz1006:
    ldr r0, [sp, locals@2]
    b .ret.2003      
.else_0_169:
.afterif_1_169:
.cont.9320:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.9320      
.brk.9320:
    movs r0, #0
.ret.2003:
    @stackempty locals
.final_2_169:
    add sp, #4*3 ; pop locals 3
helpers_arrayFind__P2003_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(519,9): jacdac.Server.handlePacketOuter
    ;
    .object jacdac_Server_handlePacketOuter__P3509 "jacdac/routing.ts(519,9): jacdac.Server.handlePacketOuter"
jacdac_Server_handlePacketOuter__P3509_pre:
    .section code
    .balign 4
jacdac_Server_handlePacketOuter__P3509_args:
    cmp r4, #2
    bge jacdac_Server_handlePacketOuter__P3509_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_handlePacketOuter__P3509_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handlePacketOuter__P3509:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_handlePacketOuter__P3509_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handlePacketOuter__P3509_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall1008:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #34
    lsls r0, r0, #8
    adds r0, #7
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1009
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_170      
.jmpz1009:
    movs r0, #34
    lsls r0, r0, #8
    adds r0, #19
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1010
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_170      
.jmpz1010:
    movs r0, #34
    lsls r0, r0, #8
    adds r0, #15
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1011
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_170      
.jmpz1011:
    movs r0, #32
    lsls r0, r0, #8
    adds r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1012
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_170      
.jmpz1012:
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1013
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_170      
.jmpz1013:
    movs r0, #32
    lsls r0, r0, #8
    adds r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1014
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_170      
.jmpz1014:
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1015
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_170      
.jmpz1015:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1016
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_170      
.jmpz1016:
    pop {r0} ; tmpref @1
    b .brk.9339      
.switch_0_170:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleStatusCode__P4986_nochk
_proccall1017:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3509      
.switch_1_170:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleInstanceName__P4987_nochk
_proccall1018:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3509      
.switch_2_170:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleVariant__P4988_nochk
_proccall1019:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3509      
.switch_3_170:
.switch_4_170:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_170      
.jmpz1020:
    b .brk.9339      
.else_8_170:
.afterif_9_170:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleValue__P4989_nochk
_proccall1021:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3509      
.switch_5_170:
.switch_6_170:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_170      
.jmpz1022:
    b .brk.9339      
.else_10_170:
.afterif_11_170:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleIntensity__P4990_nochk
_proccall1023:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3509      
.switch_7_170:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleCalibrateCommand__P4991_nochk
_proccall1024:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3509      
.brk.9339:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_170      
.jmpz1025:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isRegGet__P2940
_proccall1026:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_13_170      
.jmpz1027:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_regCode__P2941
_proccall1028:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_316 ; constant_inline__P9399_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFilter__P2002
_proccall1029:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_170      
.jmpz1030:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #245
    bl _ifacecall1_get_50
_proccall1031:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #99
    bl _ifacecall1_get_50
_proccall1032:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    bl jacdac_Server_handleRegValue__P4994_nochk
_proccall1033:
    add sp, #4*10 ; pop locals 10
    @stackempty locals
    b .ret.3509      
.else_14_170:
.afterif_15_170:
.else_13_170:
.afterif_16_170:
.else_12_170:
.afterif_17_170:
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #40
    bl _classCall_jacdac_Client__C3544_this_39
_proccall1034:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3509:
    @stackempty locals
    movs r0, #0
.final_18_170:
    add sp, #4*4 ; pop locals 4
jacdac_Server_handlePacketOuter__P3509_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(553,25): constant.inline
    ;
    .object constant_inline__P9399 "jacdac/routing.ts(553,25): constant.inline"
constant_inline__P9399_pre:
    .section code
    .balign 4
constant_inline__P9399_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word constant_inline__P9399_args@fn
constant_inline__P9399_args:
    cmp r4, #1
    bge constant_inline__P9399_nochk
    push {lr}
    bl _expand_args_1_5
    bl constant_inline__P9399_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
constant_inline__P9399:
constant_inline__P9399_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
constant_inline__P9399_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #108
    bl _ifacecall1_get_50
_proccall1035:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.9399:
    @stackempty locals
.final_0_171:
constant_inline__P9399_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(572,9): jacdac.Server.handlePacket
    ;
    .object jacdac_Server_handlePacket__P3510 "jacdac/routing.ts(572,9): jacdac.Server.handlePacket"
jacdac_Server_handlePacket__P3510_pre:
    .section code
    .balign 4
jacdac_Server_handlePacket__P3510_args:
    cmp r4, #2
    bge jacdac_Server_handlePacket__P3510_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_handlePacket__P3510_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handlePacket__P3510:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_handlePacket__P3510_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handlePacket__P3510_locals:
.ret.3510:
    @stackempty locals
    movs r0, #0
.final_0_172:
jacdac_Server_handlePacket__P3510_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(693,9): jacdac.Server.handleRegValue
    ;
    .object jacdac_Server_handleRegValue__P4994 "jacdac/routing.ts(693,9): jacdac.Server.handleRegValue"
jacdac_Server_handleRegValue__P4994_pre:
    .section code
    .balign 4
jacdac_Server_handleRegValue__P4994_args:
    cmp r4, #5
    bge jacdac_Server_handleRegValue__P4994_nochk
    push {lr}
    bl _expand_args_5_51
    bl jacdac_Server_handleRegValue__P4994_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
jacdac_Server_handleRegValue__P4994:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_handleRegValue__P4994_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handleRegValue__P4994_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall1036:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #25
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_173      
.jmpz1037:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_173      
.lazySkip_2_173:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_173:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_173      
.jmpz1038:
    ldr r0, [sp, args@4]
    b .ret.4994      
.else_0_173:
.afterif_3_173:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall1039:
    add sp, #4*1 ; pop locals 1
    movs r1, #31
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@2]
    bl _cmp_neq
    beq .else_4_173      
.jmpz1040:
    ldr r0, [sp, args@4]
    b .ret.4994      
.else_4_173:
.afterif_5_173:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P2922
_proccall1041:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _cmp_eq
    beq .else_6_173      
.jmpz1042:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_173      
.jmpz1043:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_173      
.lazySkip_9_173:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_8_173:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_173      
.jmpz1044:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall1045:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_jdpacked__P2919
_proccall1046:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4985_nochk
_proccall1047:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_7_173:
.afterif_10_173:
    b .afterif_11_173      
.else_6_173:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _cmp_eq
    beq .else_12_173      
.jmpz1048:
    ldr r0, [sp, args@4]
    b .ret.4994      
.else_12_173:
.afterif_13_173:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdunpack__P2947
_proccall1049:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@4]
    bl _cmp_neqq
    beq .else_14_173      
.jmpz1050:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@4]
    @stackempty locals
.else_14_173:
.afterif_15_173:
.afterif_11_173:
    ldr r0, [sp, args@4]
.ret.4994:
    @stackempty locals
.final_16_173:
    add sp, #4*3 ; pop locals 3
jacdac_Server_handleRegValue__P4994_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(221,9): jacdac.JDPacket.jdunpack
    ;
    .object jacdac_JDPacket_jdunpack__P2947 "jacdac/packet.ts(221,9): jacdac.JDPacket.jdunpack"
jacdac_JDPacket_jdunpack__P2947_pre:
    .section code
    .balign 4
jacdac_JDPacket_jdunpack__P2947_args:
    cmp r4, #2
    bge jacdac_JDPacket_jdunpack__P2947_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket_jdunpack__P2947_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_316:
 .word constant_inline__P9399_Lit
.object POP
    .section code
jacdac_JDPacket_jdunpack__P2947:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_jdunpack__P2947_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_jdunpack__P2947_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_174      
.jmpz1051:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_174      
.lazySkip_1_174:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
.lazy_0_174:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_174      
.jmpz1052:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_174      
.lazySkip_3_174:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_jdunpack__P2966
_proccall1053:
    add sp, #4*2 ; pop locals 2
.lazy_2_174:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_5_174      
.jmpz1054:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_174      
.lazySkip_5_174:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
.lazy_4_174:
; jmp value (already in r0)
.ret.2947:
    @stackempty locals
.final_6_174:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_jdunpack__P2947_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(218,5): jacdac.jdunpack
    ;
    .object jacdac_jdunpack__P2966 "jacdac/pack.ts(218,5): jacdac.jdunpack"
jacdac_jdunpack__P2966_pre:
    .section code
    .balign 4
    .section code
jacdac_jdunpack__P2966:
jacdac_jdunpack__P2966_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_jdunpack__P2966_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_175      
.jmpz1055:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_175      
.lazySkip_2_175:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_175:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_175      
.jmpz1056:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .ret.2966      
.else_0_175:
.afterif_3_175:
    ldr r0, _ldlit_318 ; _catch_9497      
    bl _pxt_save_exception_state
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_jdunpackCore__P4971
_proccall1057:
    add sp, #4*3 ; pop locals 3
    b .ret.2966      
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    b .catchend_6_175      
_catch_9497:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getThrownValue
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl console_error__P2382
_proccall1058:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .ret.2966      
.catchend_6_175:
    movs r0, #0
.ret.2966:
    @stackempty locals
.final_7_175:
    add sp, #4*1 ; pop locals 1
jacdac_jdunpack__P2966_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(142,5): jacdac.jdunpackCore
    ;
    .object jacdac_jdunpackCore__P4971 "jacdac/pack.ts(142,5): jacdac.jdunpackCore"
jacdac_jdunpackCore__P4971_pre:
    .section code
    .balign 4
    .section code
jacdac_jdunpackCore__P4971:
jacdac_jdunpackCore__P4971_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_jdunpackCore__P4971_locals:
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_176      
.jmpz1059:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .condexprfin_1_176      
.condexprz_0_176:
    movs r0, #6
.condexprfin_1_176:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, _ldlit_319 ; jacdac_TokenParser__C4968_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_TokenParser_constructor__P4970
_proccall1060:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_176      
.jmpz1061:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_176      
.lazySkip_4_176:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_3_176:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_176      
.jmpz1062:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .ret.4971      
.else_2_176:
.afterif_5_176:
.cont.9527:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl jacdac_TokenParser_parse__P4969
_proccall1064:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1063
    b .brk.9527      
.jmpz1063:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #32]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_176      
.jmpz1065:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_176      
.lazySkip_8_176:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_7_176:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_176      
.jmpz1066:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_bufferSlice__P4967
_proccall1067:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall1068:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #3
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_jdunpackCore__P4971
_proccall1069:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    b .ret.4971      
.else_6_176:
.afterif_9_176:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #16]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #8]
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #4]
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@6]
    movs r1, #245
    bl _cmp_eq
    beq .else_10_176      
.jmpz1070:
    ldr r0, [sp, locals@2]
    str r0, [sp, locals@7]
    @stackempty locals
.cont.9563:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_12_176      
.jmpz1071:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_11_176      
.lazySkip_12_176:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_11_176:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.9563      
.jmpz1072:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .cont.9563      
.brk.9563:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    b .afterif_13_176      
.else_10_176:
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_lt
    beq .else_14_176      
.jmpz1073:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@2]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
.else_14_176:
.afterif_15_176:
.afterif_13_176:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #20]
    movs r1, #6
    bl _cmp_neqq
    bne .jmpz1074
    b .else_16_176      
.jmpz1074:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_17_176      
.jmpz1075:
    movs r0, #23
    b .condexprfin_18_176      
.condexprz_17_176:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #20]
    b .condexprfin_18_176      
.object PUSH
.balign 4
_ldlit_318:
 .word _catch_9497
_ldlit_319:
 .word jacdac_TokenParser__C4968_VT
.object POP
.condexprfin_18_176:
; jmp value (already in r0)
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_19_176      
.jmpz1076:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    movs r1, #9
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r1, _ldlit_321 ; _dbl126      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
.else_19_176:
.afterif_20_176:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #12]
    movs r1, #3
    bl _cmp_neq
    beq .else_21_176      
.jmpz1077:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
.else_21_176:
.afterif_22_176:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    b .afterif_23_176      
.else_16_176:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@5]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_bufferSlice__P4967
_proccall1078:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #245
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_26_176      
.jmpz1079:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_25_176      
.lazySkip_26_176:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #231
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_25_176:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_24_176      
.jmpz1080:
    movs r0, #1
    str r0, [sp, locals@11]
    @stackempty locals
.cont.9647:
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_28_176      
.jmpz1081:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_27_176      
.lazySkip_28_176:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_27_176:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.9647      
.jmpz1082:
    ldr r0, [sp, locals@11]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@11]
    @stackempty locals
    b .cont.9647      
.brk.9647:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl jacdac_bufferSlice__P4967
_proccall1083:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toString
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_29_176      
.else_24_176:
    ldr r0, [sp, locals@6]
    movs r1, #197
    bl _cmp_eq
    beq .else_30_176      
.jmpz1084:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_31_176      
.else_30_176:
    ldr r0, [sp, locals@6]
    movs r1, #241
    bl _cmp_eq
    beq .else_32_176      
.jmpz1085:
    b .afterif_33_176      
.else_32_176:
    ldr r0, [sp, locals@6]
    movs r1, #229
    bl _cmp_eq
    beq .else_34_176      
.jmpz1086:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall1087:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #5
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_jdunpackCore__P4971
_proccall1088:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.9527      
    b .afterif_35_176      
.else_34_176:
    ldr r0, _ldlit_322 ; _str127      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.afterif_35_176:
.afterif_33_176:
.afterif_31_176:
.afterif_29_176:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@6]
    movs r1, #245
    bl _cmp_eq
    beq .else_36_176      
.jmpz1089:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.else_36_176:
.afterif_37_176:
.afterif_23_176:
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_40_176      
.jmpz1090:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_39_176      
.lazySkip_40_176:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4968_validate_19
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_39_176:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_38_176      
.jmpz1091:
    ldr r0, [sp, locals@4]
    movs r1, #1
    bl _inst_jacdac_TokenParser__C4968_validate_19
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #5
    bl _cmp_eq
    beq .else_41_176      
.jmpz1092:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_42_176      
.object PUSH
.balign 4
_ldlit_321:
 .word _dbl126
_ldlit_322:
 .word _str127
.object POP
.else_41_176:
.afterif_42_176:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_ge
    add sp, #4*2 ; pop locals 2
    beq .else_43_176      
.jmpz1093:
    b .brk.9527      
.else_43_176:
.afterif_44_176:
.else_38_176:
.afterif_45_176:
    b .cont.9527      
.brk.9527:
    ldr r0, [sp, args@2]
    movs r1, #5
    bl _cmp_eq
    beq .else_46_176      
.jmpz1094:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_47_176      
.jmpz1095:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_47_176:
.afterif_48_176:
    ldr r0, [sp, locals@0]
    b .ret.4971      
    b .afterif_49_176      
.else_46_176:
    ldr r0, [sp, locals@1]
    b .ret.4971      
.afterif_49_176:
    movs r0, #0
.ret.4971:
    @stackempty locals
.final_50_176:
    add sp, #4*12 ; pop locals 12
jacdac_jdunpackCore__P4971_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(578,9): jacdac.Server.sendReport
    ;
    .object jacdac_Server_sendReport__P4985 "jacdac/routing.ts(578,9): jacdac.Server.sendReport"
jacdac_Server_sendReport__P4985_pre:
    .section code
    .balign 4
jacdac_Server_sendReport__P4985_args:
    cmp r4, #2
    bge jacdac_Server_sendReport__P4985_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_sendReport__P4985_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_sendReport__P4985:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_sendReport__P4985_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_sendReport__P4985_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #6
    bl _cmp_eq
    beq .else_0_178      
.jmpz1096:
    b .ret.4985      
.else_0_178:
.afterif_1_178:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_serviceIndex__P2932
_proccall1097:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465
_proccall1098:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendReport__P2957
_proccall1099:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4985:
    @stackempty locals
    movs r0, #0
.final_2_178:
jacdac_Server_sendReport__P4985_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(93,9): jacdac.JDPacket.markHandled
    ;
    .object jacdac_JDPacket_markHandled__P2922 "jacdac/packet.ts(93,9): jacdac.JDPacket.markHandled"
jacdac_JDPacket_markHandled__P2922_pre:
    .section code
    .balign 4
jacdac_JDPacket_markHandled__P2922_args:
    cmp r4, #1
    bge jacdac_JDPacket_markHandled__P2922_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_markHandled__P2922_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_markHandled__P2922:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_markHandled__P2922_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_markHandled__P2922_locals:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #16]
    @stackempty locals
.ret.2922:
    @stackempty locals
    movs r0, #0
.final_0_179:
jacdac_JDPacket_markHandled__P2922_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(648,9): jacdac.Server.handleCalibrateCommand
    ;
    .object jacdac_Server_handleCalibrateCommand__P4991 "jacdac/routing.ts(648,9): jacdac.Server.handleCalibrateCommand"
jacdac_Server_handleCalibrateCommand__P4991_pre:
    .section code
    .balign 4
jacdac_Server_handleCalibrateCommand__P4991_args:
    cmp r4, #2
    bge jacdac_Server_handleCalibrateCommand__P4991_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_handleCalibrateCommand__P4991_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleCalibrateCommand__P4991:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_handleCalibrateCommand__P4991_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handleCalibrateCommand__P4991_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    movs r1, #5
    bl _cmp_eqq
    beq .else_0_180      
.jmpz1100:
    b .ret.4991      
.else_0_180:
.afterif_1_180:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_180      
.jmpz1101:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_setStatusCode__P3507_nochk
_proccall1102:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_324 ; jacdac_Server_handleCalibrateCommand_inline__P9754_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control_runInBackground__P2298
_proccall1103:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_3_180      
.else_2_180:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P2923
_proccall1104:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_3_180:
.ret.4991:
    @stackempty locals
    movs r0, #0
.final_4_180:
jacdac_Server_handleCalibrateCommand__P4991_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(653,41): jacdac.Server.handleCalibrateCommand.inline
    ;
    .object jacdac_Server_handleCalibrateCommand_inline__P9754 "jacdac/routing.ts(653,41): jacdac.Server.handleCalibrateCommand.inline"
jacdac_Server_handleCalibrateCommand_inline__P9754_pre:
    .section code
    .balign 4
jacdac_Server_handleCalibrateCommand_inline__P9754_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_Server_handleCalibrateCommand_inline__P9754_args@fn
jacdac_Server_handleCalibrateCommand_inline__P9754_args:
    .section code
jacdac_Server_handleCalibrateCommand_inline__P9754:
jacdac_Server_handleCalibrateCommand_inline__P9754_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handleCalibrateCommand_inline__P9754_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_Server_doCalibrate__P4992_nochk
_proccall1105:
    add sp, #4*1 ; pop locals 1
.ret.9754:
    @stackempty locals
    movs r0, #0
.final_0_181:
jacdac_Server_handleCalibrateCommand_inline__P9754_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(97,9): jacdac.JDPacket.possiblyNotImplemented
    ;
    .object jacdac_JDPacket_possiblyNotImplemented__P2923 "jacdac/packet.ts(97,9): jacdac.JDPacket.possiblyNotImplemented"
jacdac_JDPacket_possiblyNotImplemented__P2923_pre:
    .section code
    .balign 4
jacdac_JDPacket_possiblyNotImplemented__P2923_args:
    cmp r4, #1
    bge jacdac_JDPacket_possiblyNotImplemented__P2923_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_possiblyNotImplemented__P2923_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_possiblyNotImplemented__P2923:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_possiblyNotImplemented__P2923_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_possiblyNotImplemented__P2923_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_handled__P2921_nochk
_proccall1107:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_182      
.jmpz1106:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_182      
.lazySkip_2_182:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #9
    bl _numops_ands
.lazy_1_182:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_182      
.jmpz1108:
    b .ret.2923      
.else_0_182:
.afterif_3_182:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P2922_nochk
_proccall1109:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934_nochk
_proccall1110:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_crc__P2933_nochk
_proccall1111:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdpacked__P2919
_proccall1112:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2931_nochk
_proccall1113:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_serviceIndex__P2932
_proccall1114:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465
_proccall1115:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendReport__P2957
_proccall1116:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2923:
    @stackempty locals
    movs r0, #0
.final_4_182:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_possiblyNotImplemented__P2923_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(89,9): jacdac.JDPacket.handled
    ;
    .object jacdac_JDPacket_handled__P2921 "jacdac/packet.ts(89,9): jacdac.JDPacket.handled"
jacdac_JDPacket_handled__P2921_pre:
    .section code
    .balign 4
jacdac_JDPacket_handled__P2921_args:
    cmp r4, #1
    bge jacdac_JDPacket_handled__P2921_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_handled__P2921_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_handled__P2921:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_handled__P2921_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_handled__P2921_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2921:
    @stackempty locals
.final_0_183:
jacdac_JDPacket_handled__P2921_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(657,9): jacdac.Server.doCalibrate
    ;
    .object jacdac_Server_doCalibrate__P4992 "jacdac/routing.ts(657,9): jacdac.Server.doCalibrate"
jacdac_Server_doCalibrate__P4992_pre:
    .section code
    .balign 4
jacdac_Server_doCalibrate__P4992_args:
    cmp r4, #1
    bge jacdac_Server_doCalibrate__P4992_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Server_doCalibrate__P4992_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_doCalibrate__P4992:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_doCalibrate__P4992_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_doCalibrate__P4992_locals:
    ldr r0, _ldlit_325 ; _catch_9787      
    bl _pxt_save_exception_state
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #102
    bl _ifacecall1__52
_proccall1117:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_setStatusCode__P3507_nochk
_proccall1118:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    b .catchend_2_184      
_catch_9787:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getThrownValue
    str r0, [sp, locals@0]
    movs r0, #201
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_setStatusCode__P3507_nochk
_proccall1119:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.catchend_2_184:
.ret.4992:
    @stackempty locals
    movs r0, #0
.final_3_184:
    add sp, #4*1 ; pop locals 1
jacdac_Server_doCalibrate__P4992_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(503,9): jacdac.Server.setStatusCode
    ;
    .object jacdac_Server_setStatusCode__P3507 "jacdac/routing.ts(503,9): jacdac.Server.setStatusCode"
jacdac_Server_setStatusCode__P3507_pre:
    .section code
    .balign 4
jacdac_Server_setStatusCode__P3507_args:
    cmp r4, #2
    bge jacdac_Server_setStatusCode__P3507_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_setStatusCode__P3507_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_setStatusCode__P3507:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_setStatusCode__P3507_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_setStatusCode__P3507_locals:
    ldr r0, [sp, args@1]
    ldr r1, _ldlit_326 ; 131071      
    bl _numops_ands
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_185      
.jmpz1120:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #44]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_sendChangeEvent__P3513_nochk
_proccall1121:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_185:
.afterif_1_185:
.ret.3507:
    @stackempty locals
    movs r0, #0
.final_2_185:
    add sp, #4*1 ; pop locals 1
jacdac_Server_setStatusCode__P3507_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(596,9): jacdac.Server.sendChangeEvent
    ;
    .object jacdac_Server_sendChangeEvent__P3513 "jacdac/routing.ts(596,9): jacdac.Server.sendChangeEvent"
jacdac_Server_sendChangeEvent__P3513_pre:
    .section code
    .balign 4
jacdac_Server_sendChangeEvent__P3513_args:
    cmp r4, #1
    bge jacdac_Server_sendChangeEvent__P3513_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Server_sendChangeEvent__P3513_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_sendChangeEvent__P3513:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_sendChangeEvent__P3513_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_sendChangeEvent__P3513_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_sendEvent__P3512_nochk
_proccall1122:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall1123:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3513:
    @stackempty locals
    movs r0, #0
.final_0_186:
jacdac_Server_sendChangeEvent__P3513_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(584,9): jacdac.Server.sendEvent
    ;
    .object jacdac_Server_sendEvent__P3512 "jacdac/routing.ts(584,9): jacdac.Server.sendEvent"
jacdac_Server_sendEvent__P3512_pre:
    .section code
    .balign 4
jacdac_Server_sendEvent__P3512_args:
    cmp r4, #3
    bge jacdac_Server_sendEvent__P3512_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_Server_sendEvent__P3512_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_Server_sendEvent__P3512:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_sendEvent__P3512_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Server_sendEvent__P3512_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #6
    bl _cmp_eq
    beq .else_0_187      
.jmpz1124:
    b .ret.3512      
.else_0_187:
.afterif_1_187:
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_187      
.jmpz1125:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_187      
.lazySkip_3_187:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    b .lazy_2_187      
.object PUSH
.balign 4
_ldlit_324:
 .word jacdac_Server_handleCalibrateCommand_inline__P9754_Lit
_ldlit_325:
 .word _catch_9787
_ldlit_326:
 .word 131071
.object POP
.lazy_2_187:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_mkEventCmd__P3466
_proccall1126:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl jacdac_JDPacket_from__P2916
_proccall1127:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_sendReport__P4985_nochk
_proccall1128:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    movs r1, #41
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_delayedSend__P3008
_proccall1129:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    movs r1, #201
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_delayedSend__P3008
_proccall1130:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3512:
    @stackempty locals
    movs r0, #0
.final_4_187:
    add sp, #4*2 ; pop locals 2
jacdac_Server_sendEvent__P3512_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventqueue.ts(14,5): jacdac.delayedSend
    ;
    .object jacdac_delayedSend__P3008 "jacdac/eventqueue.ts(14,5): jacdac.delayedSend"
jacdac_delayedSend__P3008_pre:
    .section code
    .balign 4
    .section code
jacdac_delayedSend__P3008:
jacdac_delayedSend__P3008_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_delayedSend__P3008_locals:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_188      
.jmpz1131:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    movs r1, #164
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_328 ; jacdac_processDelayedPackets__P5016_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2297
_proccall1132:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_188:
.afterif_1_188:
    ldr r0, _ldlit_329 ; jacdac_DelayedPacket__C5014_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_DelayedPacket_constructor__P5015
_proccall1133:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.9859:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.9859      
.jmpz1134:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac_DelayedPacket__C5014_validate_53
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_gt
    beq .else_2_188      
.jmpz1135:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_54
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::insertAt
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .ret.3008      
.else_2_188:
.afterif_3_188:
.cont.9859:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.9859      
.brk.9859:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3008:
    @stackempty locals
    movs r0, #0
.final_4_188:
    add sp, #4*2 ; pop locals 2
jacdac_delayedSend__P3008_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventqueue.ts(8,9): jacdac.DelayedPacket.constructor
    ;
    .object jacdac_DelayedPacket_constructor__P5015 "jacdac/eventqueue.ts(8,9): jacdac.DelayedPacket.constructor"
jacdac_DelayedPacket_constructor__P5015_pre:
    .section code
    .balign 4
    .section code
jacdac_DelayedPacket_constructor__P5015:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_DelayedPacket__C5014_validate_53
    mov lr, r7
jacdac_DelayedPacket_constructor__P5015_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_DelayedPacket_constructor__P5015_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    movs r0, #0
.ret.5015:
    @stackempty locals
.final_0_189:
jacdac_DelayedPacket_constructor__P5015_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventqueue.ts(29,5): jacdac.processDelayedPackets
    ;
    .object jacdac_processDelayedPackets__P5016 "jacdac/eventqueue.ts(29,5): jacdac.processDelayedPackets"
jacdac_processDelayedPackets__P5016_pre:
    .section code
    .balign 4
jacdac_processDelayedPackets__P5016_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_processDelayedPackets__P5016_args@fn
jacdac_processDelayedPackets__P5016_args:
    .section code
jacdac_processDelayedPackets__P5016:
jacdac_processDelayedPackets__P5016_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_processDelayedPackets__P5016_locals:
.cont.9883:
    movs r0, #66
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.9883      
.jmpz1136:
    movs r0, #21
    push {r0} ; proc-arg
    bl pause__P2227
_proccall1137:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.9888:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_190      
.jmpz1138:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_190      
.lazySkip_2_190:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_DelayedPacket__C5014_validate_53
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_1_190:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_190      
.jmpz1139:
    b .brk.9888      
.else_0_190:
.afterif_3_190:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_arrayShift__P1994
_proccall1140:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_DelayedPacket__C5014_validate_53
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl jacdac_JDPacket__sendCore__P2956
_proccall1141:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.9888:
    b .fortop.9888      
.brk.9888:
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_190      
.jmpz1142:
    movs r0, #6
    movs r1, #164
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    b .ret.5016      
.else_4_190:
.afterif_5_190:
    b .cont.9883      
.brk.9883:
.ret.5016:
    @stackempty locals
    movs r0, #0
.final_6_190:
    add sp, #4*2 ; pop locals 2
jacdac_processDelayedPackets__P5016_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(154,5): helpers.arrayShift
    ;
    .object helpers_arrayShift__P1994 "core/pxt-helpers.ts(154,5): helpers.arrayShift"
helpers_arrayShift__P1994_pre:
    .section code
    .balign 4
    .section code
helpers_arrayShift__P1994:
helpers_arrayShift__P1994_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_arrayShift__P1994_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeAt
    add sp, #4*1 ; pop locals 1
.ret.1994:
    @stackempty locals
.final_0_191:
helpers_arrayShift__P1994_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/basic.ts(24,1): pause
    ;
    .object pause__P2227 "core/basic.ts(24,1): pause"
pause__P2227_pre:
    .section code
    .balign 4
    .section code
pause__P2227:
pause__P2227_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pause__P2227_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1144:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_192      
.jmpz1143:
    movs r0, #41
    str r0, [sp, args@0]
    @stackempty locals
.else_0_192:
.afterif_1_192:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl basic::pause
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2227:
    @stackempty locals
    movs r0, #0
.final_2_192:
pause__P2227_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(115,9): jacdac.Bus.mkEventCmd
    ;
    .object jacdac_Bus_mkEventCmd__P3466 "jacdac/routing.ts(115,9): jacdac.Bus.mkEventCmd"
jacdac_Bus_mkEventCmd__P3466_pre:
    .section code
    .balign 4
jacdac_Bus_mkEventCmd__P3466_args:
    cmp r4, #2
    bge jacdac_Bus_mkEventCmd__P3466_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Bus_mkEventCmd__P3466_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_mkEventCmd__P3466:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_mkEventCmd__P3466_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_mkEventCmd__P3466_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_193      
.jmpz1145:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #32]
    @stackempty locals
.else_0_193:
.afterif_1_193:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    movs r1, #3
    bl _numops_adds
    movs r1, #255
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_193      
.jmpz1146:
    ldr r0, _ldlit_330 ; _str174      
    push {r0} ; proc-arg
    bl jacdac_panic__P3479
_proccall1147:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_193:
.afterif_3_193:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    ldr r0, _ldlit_331 ; 65537      
    bl _numops_orrs
    ldr r1, [sp, args@1]
    bl _numops_orrs
.ret.3466:
    @stackempty locals
.final_4_193:
jacdac_Bus_mkEventCmd__P3466_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_328:
 .word jacdac_processDelayedPackets__P5016_Lit
_ldlit_329:
 .word jacdac_DelayedPacket__C5014_VT
_ldlit_330:
 .word _str174
_ldlit_331:
 .word 65537
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(453,9): jacdac.Server.statusCode
    ;
    .object jacdac_Server_statusCode__P3499 "jacdac/routing.ts(453,9): jacdac.Server.statusCode"
jacdac_Server_statusCode__P3499_pre:
    .section code
    .balign 4
jacdac_Server_statusCode__P3499_args:
    cmp r4, #1
    bge jacdac_Server_statusCode__P3499_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Server_statusCode__P3499_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_statusCode__P3499:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_statusCode__P3499_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_statusCode__P3499_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
.ret.3499:
    @stackempty locals
.final_0_194:
jacdac_Server_statusCode__P3499_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(637,9): jacdac.Server.handleIntensity
    ;
    .object jacdac_Server_handleIntensity__P4990 "jacdac/routing.ts(637,9): jacdac.Server.handleIntensity"
jacdac_Server_handleIntensity__P4990_pre:
    .section code
    .balign 4
jacdac_Server_handleIntensity__P4990_args:
    cmp r4, #2
    bge jacdac_Server_handleIntensity__P4990_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_handleIntensity__P4990_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleIntensity__P4990:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_handleIntensity__P4990_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handleIntensity__P4990_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    movs r0, #3
    push {r0} ; proc-arg
    push {r3}
    push {r4}
    bl jacdac_Server_handleRegValue__P4994_nochk
_proccall1148:
    add sp, #4*5 ; pop locals 5
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_intensity__P3504_nochk
_proccall1149:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4990:
    @stackempty locals
    movs r0, #0
.final_0_195:
    add sp, #4*1 ; pop locals 1
jacdac_Server_handleIntensity__P4990_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(483,9): jacdac.Server.intensity
    ;
    .object jacdac_Server_intensity__P3504 "jacdac/routing.ts(483,9): jacdac.Server.intensity"
jacdac_Server_intensity__P3504_pre:
    .section code
    .balign 4
jacdac_Server_intensity__P3504_args:
    cmp r4, #2
    bge jacdac_Server_intensity__P3504_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_intensity__P3504_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_intensity__P3504:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_intensity__P3504_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_intensity__P3504_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_196      
.jmpz1150:
    ldr r0, _ldlit_333 ; _str187      
    push {r0} ; proc-arg
    bl jacdac_panic__P3479
_proccall1151:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_196:
.afterif_1_196:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    ldr r1, [sp, args@1]
    bl _cmp_neqq
    beq .else_2_196      
.jmpz1152:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #56]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall1153:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_196:
.afterif_3_196:
.ret.3504:
    @stackempty locals
    movs r0, #0
.final_4_196:
jacdac_Server_intensity__P3504_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(479,9): jacdac.Server.intensity
    ;
    .object jacdac_Server_intensity__P3503 "jacdac/routing.ts(479,9): jacdac.Server.intensity"
jacdac_Server_intensity__P3503_pre:
    .section code
    .balign 4
jacdac_Server_intensity__P3503_args:
    cmp r4, #1
    bge jacdac_Server_intensity__P3503_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Server_intensity__P3503_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_intensity__P3503:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_intensity__P3503_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_intensity__P3503_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
.ret.3503:
    @stackempty locals
.final_0_197:
jacdac_Server_intensity__P3503_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(627,9): jacdac.Server.handleValue
    ;
    .object jacdac_Server_handleValue__P4989 "jacdac/routing.ts(627,9): jacdac.Server.handleValue"
jacdac_Server_handleValue__P4989_pre:
    .section code
    .balign 4
jacdac_Server_handleValue__P4989_args:
    cmp r4, #2
    bge jacdac_Server_handleValue__P4989_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_handleValue__P4989_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleValue__P4989:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_handleValue__P4989_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handleValue__P4989_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    movs r0, #5
    push {r0} ; proc-arg
    push {r3}
    push {r4}
    bl jacdac_Server_handleRegValue__P4994_nochk
_proccall1154:
    add sp, #4*5 ; pop locals 5
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_value__P3506_nochk
_proccall1155:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4989:
    @stackempty locals
    movs r0, #0
.final_0_198:
    add sp, #4*1 ; pop locals 1
jacdac_Server_handleValue__P4989_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(495,9): jacdac.Server.value
    ;
    .object jacdac_Server_value__P3506 "jacdac/routing.ts(495,9): jacdac.Server.value"
jacdac_Server_value__P3506_pre:
    .section code
    .balign 4
jacdac_Server_value__P3506_args:
    cmp r4, #2
    bge jacdac_Server_value__P3506_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_value__P3506_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_value__P3506:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_value__P3506_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_value__P3506_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_199      
.jmpz1156:
    ldr r0, _ldlit_334 ; _str188      
    push {r0} ; proc-arg
    bl jacdac_panic__P3479
_proccall1157:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_199:
.afterif_1_199:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    ldr r1, [sp, args@1]
    bl _cmp_neqq
    beq .else_2_199      
.jmpz1158:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #52]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall1159:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_199:
.afterif_3_199:
.ret.3506:
    @stackempty locals
    movs r0, #0
.final_4_199:
jacdac_Server_value__P3506_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(491,9): jacdac.Server.value
    ;
    .object jacdac_Server_value__P3505 "jacdac/routing.ts(491,9): jacdac.Server.value"
jacdac_Server_value__P3505_pre:
    .section code
    .balign 4
jacdac_Server_value__P3505_args:
    cmp r4, #1
    bge jacdac_Server_value__P3505_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Server_value__P3505_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_value__P3505:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_value__P3505_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_value__P3505_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
.ret.3505:
    @stackempty locals
.final_0_200:
jacdac_Server_value__P3505_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(621,9): jacdac.Server.handleVariant
    ;
    .object jacdac_Server_handleVariant__P4988 "jacdac/routing.ts(621,9): jacdac.Server.handleVariant"
jacdac_Server_handleVariant__P4988_pre:
    .section code
    .balign 4
jacdac_Server_handleVariant__P4988_args:
    cmp r4, #2
    bge jacdac_Server_handleVariant__P4988_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_handleVariant__P4988_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleVariant__P4988:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_handleVariant__P4988_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handleVariant__P4988_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    movs r1, #0
    bl _cmp_neq
    beq .else_0_201      
.jmpz1160:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    ldr r0, _ldlit_335 ; _str114      
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #15
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl jacdac_Server_handleRegValue__P4994_nochk
_proccall1161:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    b .afterif_1_201      
.else_0_201:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P2923
_proccall1162:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_201:
.ret.4988:
    @stackempty locals
    movs r0, #0
.final_2_201:
jacdac_Server_handleVariant__P4988_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(610,9): jacdac.Server.handleInstanceName
    ;
    .object jacdac_Server_handleInstanceName__P4987 "jacdac/routing.ts(610,9): jacdac.Server.handleInstanceName"
jacdac_Server_handleInstanceName__P4987_pre:
    .section code
    .balign 4
jacdac_Server_handleInstanceName__P4987_args:
    cmp r4, #2
    bge jacdac_Server_handleInstanceName__P4987_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_handleInstanceName__P4987_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleInstanceName__P4987:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_handleInstanceName__P4987_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handleInstanceName__P4987_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_202      
.jmpz1163:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #19
    push {r0} ; proc-arg
    push {r3}
    push {r4}
    bl jacdac_Server_handleRegValue__P4994_nochk
_proccall1164:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    b .afterif_1_202      
.else_0_202:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P2923
_proccall1165:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_202:
.ret.4987:
    @stackempty locals
    movs r0, #0
.final_2_202:
jacdac_Server_handleInstanceName__P4987_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(601,9): jacdac.Server.handleStatusCode
    ;
    .object jacdac_Server_handleStatusCode__P4986 "jacdac/routing.ts(601,9): jacdac.Server.handleStatusCode"
jacdac_Server_handleStatusCode__P4986_pre:
    .section code
    .balign 4
jacdac_Server_handleStatusCode__P4986_args:
    cmp r4, #2
    bge jacdac_Server_handleStatusCode__P4986_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_handleStatusCode__P4986_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleStatusCode__P4986:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_handleStatusCode__P4986_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handleStatusCode__P4986_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    movs r0, #172
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleRegFormat__P4993_nochk
_proccall1166:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.4986:
    @stackempty locals
    movs r0, #0
.final_0_203:
jacdac_Server_handleStatusCode__P4986_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(666,9): jacdac.Server.handleRegFormat
    ;
    .object jacdac_Server_handleRegFormat__P4993 "jacdac/routing.ts(666,9): jacdac.Server.handleRegFormat"
jacdac_Server_handleRegFormat__P4993_pre:
    .section code
    .balign 4
jacdac_Server_handleRegFormat__P4993_args:
    cmp r4, #5
    bge jacdac_Server_handleRegFormat__P4993_nochk
    push {lr}
    bl _expand_args_5_51
    bl jacdac_Server_handleRegFormat__P4993_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
jacdac_Server_handleRegFormat__P4993:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_handleRegFormat__P4993_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handleRegFormat__P4993_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall1167:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #25
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_204      
.jmpz1168:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_204      
.lazySkip_2_204:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    b .lazy_1_204      
.object PUSH
.balign 4
_ldlit_333:
 .word _str187
_ldlit_334:
 .word _str188
_ldlit_335:
 .word _str114
.object POP
.lazy_1_204:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_204      
.jmpz1169:
    ldr r0, [sp, args@4]
    b .ret.4993      
.else_0_204:
.afterif_3_204:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall1170:
    add sp, #4*1 ; pop locals 1
    movs r1, #31
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@2]
    bl _cmp_neq
    beq .else_4_204      
.jmpz1171:
    ldr r0, [sp, args@4]
    b .ret.4993      
.else_4_204:
.afterif_5_204:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P2922
_proccall1172:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _cmp_eq
    beq .else_6_204      
.jmpz1173:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall1174:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_jdpacked__P2919
_proccall1175:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4985_nochk
_proccall1176:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_7_204      
.else_6_204:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _cmp_eq
    beq .else_8_204      
.jmpz1177:
    ldr r0, [sp, args@4]
    b .ret.4993      
.else_8_204:
.afterif_9_204:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdunpack__P2947
_proccall1178:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl jacdac_jdpackEqual__P2968
_proccall1180:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_204      
.jmpz1179:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [sp, locals@2]
    str r0, [sp, args@4]
    @stackempty locals
.else_10_204:
.afterif_11_204:
.afterif_7_204:
    ldr r0, [sp, args@4]
.ret.4993:
    @stackempty locals
.final_12_204:
    add sp, #4*3 ; pop locals 3
jacdac_Server_handleRegFormat__P4993_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(388,5): jacdac.jdpackEqual
    ;
    .object jacdac_jdpackEqual__P2968 "jacdac/pack.ts(388,5): jacdac.jdpackEqual"
jacdac_jdpackEqual__P2968_pre:
    .section code
    .balign 4
    .section code
jacdac_jdpackEqual__P2968:
jacdac_jdpackEqual__P2968_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_jdpackEqual__P2968_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_205      
.jmpz1181:
    movs r0, #10
    b .ret.2968      
.else_0_205:
.afterif_1_205:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_205      
.jmpz1182:
    movs r0, #66
    b .ret.2968      
.else_2_205:
.afterif_3_205:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P2967
_proccall1183:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P2967
_proccall1184:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_bufferEquals__P2626
_proccall1185:
    add sp, #4*2 ; pop locals 2
.ret.2968:
    @stackempty locals
.final_4_205:
    add sp, #4*2 ; pop locals 2
jacdac_jdpackEqual__P2968_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(264,9): jacdac.JDPacket.isCommand
    ;
    .object jacdac_JDPacket_isCommand__P2952 "jacdac/packet.ts(264,9): jacdac.JDPacket.isCommand"
jacdac_JDPacket_isCommand__P2952_pre:
    .section code
    .balign 4
jacdac_JDPacket_isCommand__P2952_args:
    cmp r4, #1
    bge jacdac_JDPacket_isCommand__P2952_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_isCommand__P2952_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_isCommand__P2952:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_isCommand__P2952_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_isCommand__P2952_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2952:
    @stackempty locals
.final_0_206:
jacdac_JDPacket_isCommand__P2952_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(300,9): jacdac.JDPacket._sendReport
    ;
    .object jacdac_JDPacket__sendReport__P2957 "jacdac/packet.ts(300,9): jacdac.JDPacket._sendReport"
jacdac_JDPacket__sendReport__P2957_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendReport__P2957_args:
    cmp r4, #2
    bge jacdac_JDPacket__sendReport__P2957_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket__sendReport__P2957_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket__sendReport__P2957:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket__sendReport__P2957_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket__sendReport__P2957_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_207      
.jmpz1186:
    b .ret.2957      
.else_0_207:
.afterif_1_207:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_deviceIdentifier__P2925_nochk
_proccall1187:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket__sendCore__P2956_nochk
_proccall1188:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2957:
    @stackempty locals
    movs r0, #0
.final_2_207:
jacdac_JDPacket__sendReport__P2957_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(65,9): jacdac.JDPacket.onlyHeader
    ;
    .object jacdac_JDPacket_onlyHeader__P2917 "jacdac/packet.ts(65,9): jacdac.JDPacket.onlyHeader"
jacdac_JDPacket_onlyHeader__P2917_pre:
    .section code
    .balign 4
jacdac_JDPacket_onlyHeader__P2917_args:
    cmp r4, #1
    bge jacdac_JDPacket_onlyHeader__P2917_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_onlyHeader__P2917_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_onlyHeader__P2917:
jacdac_JDPacket_onlyHeader__P2917_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_onlyHeader__P2917_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_from__P2916
_proccall1189:
    add sp, #4*2 ; pop locals 2
.ret.2917:
    @stackempty locals
.final_0_208:
jacdac_JDPacket_onlyHeader__P2917_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(153,9): jacdac.JDPacket.crc
    ;
    .object jacdac_JDPacket_crc__P2933 "jacdac/packet.ts(153,9): jacdac.JDPacket.crc"
jacdac_JDPacket_crc__P2933_pre:
    .section code
    .balign 4
jacdac_JDPacket_crc__P2933_args:
    cmp r4, #1
    bge jacdac_JDPacket_crc__P2933_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_crc__P2933_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_crc__P2933:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_crc__P2933_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_crc__P2933_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #4
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
.ret.2933:
    @stackempty locals
.final_0_209:
jacdac_JDPacket_crc__P2933_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(105,9): jacdac.Bus.selfDevice
    ;
    .object jacdac_Bus_selfDevice__P3465 "jacdac/routing.ts(105,9): jacdac.Bus.selfDevice"
jacdac_Bus_selfDevice__P3465_pre:
    .section code
    .balign 4
jacdac_Bus_selfDevice__P3465_args:
    cmp r4, #1
    bge jacdac_Bus_selfDevice__P3465_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Bus_selfDevice__P3465_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_selfDevice__P3465:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_selfDevice__P3465_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_selfDevice__P3465_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_210      
.jmpz1190:
    ldr r0, _ldlit_337 ; jacdac_Device__C3572_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl control::deviceLongSerialNumber
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #4
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_Device_constructor__P3576
_proccall1191:
    add sp, #4*3 ; pop locals 3
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #16]
    @stackempty locals
.else_0_210:
.afterif_1_210:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
.ret.3465:
    @stackempty locals
.final_2_210:
jacdac_Bus_selfDevice__P3465_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(139,9): jacdac.JDPacket.requiresAck
    ;
    .object jacdac_JDPacket_requiresAck__P2930 "jacdac/packet.ts(139,9): jacdac.JDPacket.requiresAck"
jacdac_JDPacket_requiresAck__P2930_pre:
    .section code
    .balign 4
jacdac_JDPacket_requiresAck__P2930_args:
    cmp r4, #2
    bge jacdac_JDPacket_requiresAck__P2930_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket_requiresAck__P2930_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_requiresAck__P2930:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_requiresAck__P2930_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_requiresAck__P2930_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_requiresAck__P2929_nochk
_proccall1193:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_0_211      
.jmpz1192:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    movs r1, #5
    bl _numops_eors
    push {r0} ; proc-arg
    bl _conv_29
    movs r1, #7
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_211:
.afterif_1_211:
.ret.2930:
    @stackempty locals
    movs r0, #0
.final_2_211:
jacdac_JDPacket_requiresAck__P2930_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(136,9): jacdac.JDPacket.requiresAck
    ;
    .object jacdac_JDPacket_requiresAck__P2929 "jacdac/packet.ts(136,9): jacdac.JDPacket.requiresAck"
jacdac_JDPacket_requiresAck__P2929_pre:
    .section code
    .balign 4
jacdac_JDPacket_requiresAck__P2929_args:
    cmp r4, #1
    bge jacdac_JDPacket_requiresAck__P2929_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_requiresAck__P2929_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_requiresAck__P2929:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_requiresAck__P2929_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_requiresAck__P2929_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_212      
.jmpz1194:
    movs r0, #66
    b .condexprfin_1_212      
.condexprz_0_212:
    movs r0, #10
.condexprfin_1_212:
; jmp value (already in r0)
.ret.2929:
    @stackempty locals
.final_2_212:
jacdac_JDPacket_requiresAck__P2929_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(126,9): jacdac.JDPacket.multicommandClass
    ;
    .object jacdac_JDPacket_multicommandClass__P2927 "jacdac/packet.ts(126,9): jacdac.JDPacket.multicommandClass"
jacdac_JDPacket_multicommandClass__P2927_pre:
    .section code
    .balign 4
jacdac_JDPacket_multicommandClass__P2927_args:
    cmp r4, #1
    bge jacdac_JDPacket_multicommandClass__P2927_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_multicommandClass__P2927_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_multicommandClass__P2927:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_multicommandClass__P2927_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_multicommandClass__P2927_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_213      
.jmpz1195:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #11
    movs r2, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
    b .ret.2927      
.else_0_213:
.afterif_1_213:
    movs r0, #0
.ret.2927:
    @stackempty locals
.final_2_213:
jacdac_JDPacket_multicommandClass__P2927_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(384,5): jacdac.panic
    ;
    .object jacdac_panic__P3479 "jacdac/routing.ts(384,5): jacdac.panic"
jacdac_panic__P3479_pre:
    .section code
    .balign 4
    .section code
jacdac_panic__P3479:
jacdac_panic__P3479_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_panic__P3479_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl console_error__P2382
_proccall1196:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
    add sp, #4*1 ; pop locals 1
.ret.3479:
    @stackempty locals
    movs r0, #0
.final_0_214:
jacdac_panic__P3479_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(117,9): jacdac.JDPacket.deviceIdentifier
    ;
    .object jacdac_JDPacket_deviceIdentifier__P2925 "jacdac/packet.ts(117,9): jacdac.JDPacket.deviceIdentifier"
jacdac_JDPacket_deviceIdentifier__P2925_pre:
    .section code
    .balign 4
jacdac_JDPacket_deviceIdentifier__P2925_args:
    cmp r4, #2
    bge jacdac_JDPacket_deviceIdentifier__P2925_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket_deviceIdentifier__P2925_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_deviceIdentifier__P2925:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_deviceIdentifier__P2925_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_deviceIdentifier__P2925_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Buffer_fromHex__P2645
_proccall1197:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #17
    bl _cmp_eq
    beq .else_0_215      
.jmpz1198:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_45
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_215:
.afterif_1_215:
.ret.2925:
    @stackempty locals
    movs r0, #0
.final_2_215:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_deviceIdentifier__P2925_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(113,9): jacdac.JDPacket.deviceIdentifier
    ;
    .object jacdac_JDPacket_deviceIdentifier__P2924 "jacdac/packet.ts(113,9): jacdac.JDPacket.deviceIdentifier"
jacdac_JDPacket_deviceIdentifier__P2924_pre:
    .section code
    .balign 4
jacdac_JDPacket_deviceIdentifier__P2924_args:
    cmp r4, #1
    bge jacdac_JDPacket_deviceIdentifier__P2924_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_deviceIdentifier__P2924_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_deviceIdentifier__P2924:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_deviceIdentifier__P2924_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_deviceIdentifier__P2924_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #4
    movs r2, #8
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
.ret.2924:
    @stackempty locals
.final_0_216:
jacdac_JDPacket_deviceIdentifier__P2924_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(147,9): jacdac.JDPacket.serviceIndex
    ;
    .object jacdac_JDPacket_serviceIndex__P2932 "jacdac/packet.ts(147,9): jacdac.JDPacket.serviceIndex"
jacdac_JDPacket_serviceIndex__P2932_pre:
    .section code
    .balign 4
jacdac_JDPacket_serviceIndex__P2932_args:
    cmp r4, #2
    bge jacdac_JDPacket_serviceIndex__P2932_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket_serviceIndex__P2932_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_serviceIndex__P2932:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_serviceIndex__P2932_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_serviceIndex__P2932_locals:
    ldr r0, [sp, args@1]
    movs r1, #6
    bl _cmp_eq
    beq .else_0_217      
.jmpz1199:
    ldr r0, _ldlit_338 ; _str104      
    push {r0} ; proc-arg
    bl jacdac_panic__P3479
_proccall1200:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_217:
.afterif_1_217:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #27
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #129
    bl _numops_ands
    ldr r1, [sp, args@1]
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_29
    movs r1, #27
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2932:
    @stackempty locals
    movs r0, #0
.final_2_217:
jacdac_JDPacket_serviceIndex__P2932_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(144,9): jacdac.JDPacket.serviceIndex
    ;
    .object jacdac_JDPacket_serviceIndex__P2931 "jacdac/packet.ts(144,9): jacdac.JDPacket.serviceIndex"
jacdac_JDPacket_serviceIndex__P2931_pre:
    .section code
    .balign 4
jacdac_JDPacket_serviceIndex__P2931_args:
    cmp r4, #1
    bge jacdac_JDPacket_serviceIndex__P2931_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_serviceIndex__P2931_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_serviceIndex__P2931:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_serviceIndex__P2931_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_serviceIndex__P2931_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #27
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #127
    bl _numops_ands
.ret.2931:
    @stackempty locals
.final_0_218:
jacdac_JDPacket_serviceIndex__P2931_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1265,9): jacdac.Client.start
    ;
    .object jacdac_Client_start__P3568 "jacdac/routing.ts(1265,9): jacdac.Client.start"
jacdac_Client_start__P3568_pre:
    .section code
    .balign 4
jacdac_Client_start__P3568_args:
    cmp r4, #1
    bge jacdac_Client_start__P3568_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Client_start__P3568_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_start__P3568:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_start__P3568_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_start__P3568_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_219      
.jmpz1201:
    b .ret.3568      
    b .afterif_1_219      
.object PUSH
.balign 4
_ldlit_337:
 .word jacdac_Device__C3572_VT
_ldlit_338:
 .word _str104
.object POP
.else_0_219:
.afterif_1_219:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #28]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    bl jacdac_start__P3607
_proccall1202:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_startClient__P3472
_proccall1203:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3568:
    @stackempty locals
    movs r0, #0
.final_2_219:
jacdac_Client_start__P3568_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(187,9): jacdac.Bus.startClient
    ;
    .object jacdac_Bus_startClient__P3472 "jacdac/routing.ts(187,9): jacdac.Bus.startClient"
jacdac_Bus_startClient__P3472_pre:
    .section code
    .balign 4
jacdac_Bus_startClient__P3472_args:
    cmp r4, #2
    bge jacdac_Bus_startClient__P3472_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Bus_startClient__P3472_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_startClient__P3472:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_startClient__P3472_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_startClient__P3472_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_clearAttachCache__P3467_nochk
_proccall1204:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3472:
    @stackempty locals
    movs r0, #0
.final_0_220:
jacdac_Bus_startClient__P3472_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-hid-keyboard/client.ts(279,9): modules.HidKeyboardClient.constructor
    ;
    .object modules_HidKeyboardClient_constructor__P4152 "jacdac-hid-keyboard/client.ts(279,9): modules.HidKeyboardClient.constructor"
modules_HidKeyboardClient_constructor__P4152_pre:
    .section code
    .balign 4
    .section code
modules_HidKeyboardClient_constructor__P4152:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_HidKeyboardClient__C4151_validate_11
    mov lr, r7
modules_HidKeyboardClient_constructor__P4152_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_HidKeyboardClient_constructor__P4152_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_340 ; 828421845      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_constructor__P3550
_proccall1205:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.4152:
    @stackempty locals
.final_0_221:
modules_HidKeyboardClient_constructor__P4152_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1054,9): jacdac.Client.constructor
    ;
    .object jacdac_Client_constructor__P3550 "jacdac/routing.ts(1054,9): jacdac.Client.constructor"
jacdac_Client_constructor__P3550_pre:
    .section code
    .balign 4
    .section code
jacdac_Client_constructor__P3550:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_constructor__P3550_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_constructor__P3550_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #56]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_constructor__P3623
_proccall1206:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_222      
.jmpz1207:
    ldr r0, _ldlit_341 ; _str198      
    push {r0} ; proc-arg
    bl jacdac_panic__P3479
_proccall1208:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_222:
.afterif_1_222:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl control_allocateEventSource__P2343
_proccall1209:
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_342 ; jacdac_ClientPacketQueue__C5088_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_ClientPacketQueue_constructor__P5093
_proccall1210:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #44]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #52]
    @stackempty locals
    movs r0, #0
.ret.3550:
    @stackempty locals
.final_2_222:
jacdac_Client_constructor__P3550_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(830,9): jacdac.ClientPacketQueue.constructor
    ;
    .object jacdac_ClientPacketQueue_constructor__P5093 "jacdac/routing.ts(830,9): jacdac.ClientPacketQueue.constructor"
jacdac_ClientPacketQueue_constructor__P5093_pre:
    .section code
    .balign 4
    .section code
jacdac_ClientPacketQueue_constructor__P5093:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ClientPacketQueue__C5088_validate_44
    mov lr, r7
jacdac_ClientPacketQueue_constructor__P5093_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ClientPacketQueue_constructor__P5093_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    movs r0, #0
.ret.5093:
    @stackempty locals
.final_0_223:
jacdac_ClientPacketQueue_constructor__P5093_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/control.ts(112,5): control.allocateEventSource
    ;
    .object control_allocateEventSource__P2343 "core/control.ts(112,5): control.allocateEventSource"
control_allocateEventSource__P2343_pre:
    .section code
    .balign 4
    .section code
control_allocateEventSource__P2343:
control_allocateEventSource__P2343_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_allocateEventSource__P2343_locals:
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #3
    bl _numops_adds
    push {r0}; tmpstore @1
    movs r1, #176
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    pop {r0} ; tmpref @1
.ret.2343:
    @stackempty locals
.final_0_224:
control_allocateEventSource__P2343_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pins.ts(18,5): pins.map
    ;
    .object pins_map__P2588 "core/pins.ts(18,5): pins.map"
pins_map__P2588_pre:
    .section code
    .balign 4
    .section code
pins_map__P2588:
pins_map__P2588_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pins_map__P2588_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    ldr r1, [sp, args@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@3]
    bl _numops_adds
.ret.2588:
    @stackempty locals
.final_0_225:
pins_map__P2588_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(540,5): Math.abs
    ;
    .object Math_abs__P2020 "core/pxt-helpers.ts(540,5): Math.abs"
Math_abs__P2020_pre:
    .section code
    .balign 4
    .section code
Math_abs__P2020:
Math_abs__P2020_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_abs__P2020_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_0_226      
.jmpz1211:
    movs r0, #1
    ldr r1, [sp, args@0]
    bl _numops_subs
    b .condexprfin_1_226      
.condexprz_0_226:
    ldr r0, [sp, args@0]
.condexprfin_1_226:
; jmp value (already in r0)
.ret.2020:
    @stackempty locals
.final_2_226:
Math_abs__P2020_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-vibration-motor/client.ts(37,9): modules.VibrationMotorClient.vibrate
    ;
    .object modules_VibrationMotorClient_vibrate__P4573 "jacdac-vibration-motor/client.ts(37,9): modules.VibrationMotorClient.vibrate"
modules_VibrationMotorClient_vibrate__P4573_pre:
    .section code
    .balign 4
modules_VibrationMotorClient_vibrate__P4573_args:
    cmp r4, #6
    bge modules_VibrationMotorClient_vibrate__P4573_nochk
    push {lr}
    bl _expand_args_6_10
    bl modules_VibrationMotorClient_vibrate__P4573_nochk
    @dummystack 6
    add sp, #4*6
    pop {pc}
    .section code
modules_VibrationMotorClient_vibrate__P4573:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_VibrationMotorClient__C4571_validate_55
    mov lr, r7
modules_VibrationMotorClient_vibrate__P4573_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
modules_VibrationMotorClient_vibrate__P4573_locals:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1213:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_227      
.jmpz1212:
    movs r0, #1
    b .condexprfin_1_227      
.condexprz_0_227:
    ldr r0, [sp, args@3]
.condexprfin_1_227:
; jmp value (already in r0)
    str r0, [sp, args@3]
    @stackempty locals
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1215:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_227      
.jmpz1214:
    movs r0, #1
    b .condexprfin_3_227      
.condexprz_2_227:
    ldr r0, [sp, args@4]
.condexprfin_3_227:
; jmp value (already in r0)
    str r0, [sp, args@4]
    @stackempty locals
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1217:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_227      
.jmpz1216:
    movs r0, #3
    b .condexprfin_5_227      
.condexprz_4_227:
    ldr r0, [sp, args@5]
.condexprfin_5_227:
; jmp value (already in r0)
    str r0, [sp, args@5]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10338:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@5]
    bl _cmp_lt
    beq .brk.10338      
.jmpz1218:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_gt
    beq .else_6_227      
.jmpz1219:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_6_227:
.afterif_7_227:
    ldr r0, [sp, args@3]
    movs r1, #1
    bl _cmp_gt
    beq .else_8_227      
.jmpz1220:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_8_227:
.afterif_9_227:
.cont.10338:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10338      
.brk.10338:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_VibrationMotorClient_vibrateMulti__P4575_nochk
_proccall1221:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4573:
    @stackempty locals
    movs r0, #0
.final_10_227:
    add sp, #4*2 ; pop locals 2
modules_VibrationMotorClient_vibrate__P4573_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-vibration-motor/client.ts(134,9): modules.VibrationMotorClient.vibrateMulti
    ;
    .object modules_VibrationMotorClient_vibrateMulti__P4575 "jacdac-vibration-motor/client.ts(134,9): modules.VibrationMotorClient.vibrateMulti"
modules_VibrationMotorClient_vibrateMulti__P4575_pre:
    .section code
    .balign 4
modules_VibrationMotorClient_vibrateMulti__P4575_args:
    cmp r4, #2
    bge modules_VibrationMotorClient_vibrateMulti__P4575_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_VibrationMotorClient_vibrateMulti__P4575_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_VibrationMotorClient_vibrateMulti__P4575:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_VibrationMotorClient__C4571_validate_55
    mov lr, r7
modules_VibrationMotorClient_vibrateMulti__P4575_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
modules_VibrationMotorClient_vibrateMulti__P4575_locals:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_228      
.jmpz1222:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_228      
.lazySkip_1_228:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .lazy_0_228      
.object PUSH
.balign 4
_ldlit_340:
 .word 828421845
_ldlit_341:
 .word _str198
_ldlit_342:
 .word jacdac_ClientPacketQueue__C5088_VT
.object POP
.lazy_0_228:
; jmp value (already in r0)
    str r0, [sp, args@1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10373:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.10373      
.jmpz1223:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #7
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.10373:
    ldr r0, [sp, locals@1]
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10373      
.brk.10373:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1224:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdpacked__P2919
_proccall1225:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Client_sendCommand__P3564_nochk
_proccall1226:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4575:
    @stackempty locals
    movs r0, #0
.final_2_228:
    add sp, #4*2 ; pop locals 2
modules_VibrationMotorClient_vibrateMulti__P4575_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-vibration-motor/client.ts(12,9): modules.VibrationMotorClient.constructor
    ;
    .object modules_VibrationMotorClient_constructor__P4572 "jacdac-vibration-motor/client.ts(12,9): modules.VibrationMotorClient.constructor"
modules_VibrationMotorClient_constructor__P4572_pre:
    .section code
    .balign 4
    .section code
modules_VibrationMotorClient_constructor__P4572:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_VibrationMotorClient__C4571_validate_55
    mov lr, r7
modules_VibrationMotorClient_constructor__P4572_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_VibrationMotorClient_constructor__P4572_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_344 ; 813664581      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_constructor__P3550
_proccall1227:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.4572:
    @stackempty locals
.final_0_229:
modules_VibrationMotorClient_constructor__P4572_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-distance/client.ts(51,9): modules.DistanceClient.distance
    ;
    .object modules_DistanceClient_distance__P3799 "jacdac-distance/client.ts(51,9): modules.DistanceClient.distance"
modules_DistanceClient_distance__P3799_pre:
    .section code
    .balign 4
modules_DistanceClient_distance__P3799_args:
    cmp r4, #1
    bge modules_DistanceClient_distance__P3799_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_DistanceClient_distance__P3799_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_DistanceClient_distance__P3799:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_DistanceClient__C3797_validate_56
    mov lr, r7
modules_DistanceClient_distance__P3799_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_DistanceClient_distance__P3799_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_reading__P3273_nochk
_proccall1228:
    add sp, #4*1 ; pop locals 1
.ret.3799:
    @stackempty locals
.final_0_230:
modules_DistanceClient_distance__P3799_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(112,9): jacdac.SimpleSensorClient.reading
    ;
    .object jacdac_SimpleSensorClient_reading__P3273 "jacdac/sensor/client.ts(112,9): jacdac.SimpleSensorClient.reading"
jacdac_SimpleSensorClient_reading__P3273_pre:
    .section code
    .balign 4
jacdac_SimpleSensorClient_reading__P3273_args:
    cmp r4, #1
    bge jacdac_SimpleSensorClient_reading__P3273_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_SimpleSensorClient_reading__P3273_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_SimpleSensorClient_reading__P3273:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SimpleSensorClient__C3270_validate_57
    mov lr, r7
jacdac_SimpleSensorClient_reading__P3273_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_SimpleSensorClient_reading__P3273_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_setStreaming__P3268_nochk
_proccall1229:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall1230:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #92]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_231      
.jmpz1231:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_231      
.lazySkip_2_231:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1232:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_231:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_231      
.jmpz1233:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #92]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_roundWithPrecision__P2024
_proccall1234:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
.else_0_231:
.afterif_3_231:
    ldr r0, [sp, locals@1]
.ret.3273:
    @stackempty locals
.final_4_231:
    add sp, #4*2 ; pop locals 2
jacdac_SimpleSensorClient_reading__P3273_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(580,5): Math.roundWithPrecision
    ;
    .object Math_roundWithPrecision__P2024 "core/pxt-helpers.ts(580,5): Math.roundWithPrecision"
Math_roundWithPrecision__P2024_pre:
    .section code
    .balign 4
    .section code
Math_roundWithPrecision__P2024:
Math_roundWithPrecision__P2024_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Math_roundWithPrecision__P2024_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_le
    beq .else_0_232      
.jmpz1235:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    b .ret.2024      
.else_0_232:
.afterif_1_232:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_eq
    beq .else_2_232      
.jmpz1236:
    movs r0, #1
    b .ret.2024      
.else_2_232:
.afterif_3_232:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.cont.10450:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #21
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::pow
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_232      
.jmpz1237:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_232      
.lazySkip_5_232:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #43
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_4_232:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.10450      
.jmpz1238:
    b .cont.10450      
.brk.10450:
    ldr r0, [sp, locals@0]
.ret.2024:
    @stackempty locals
.final_6_232:
    add sp, #4*2 ; pop locals 2
Math_roundWithPrecision__P2024_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(942,9): jacdac.RegisterClient.pauseUntilValues
    ;
    .object jacdac_RegisterClient_pauseUntilValues__P3530 "jacdac/routing.ts(942,9): jacdac.RegisterClient.pauseUntilValues"
jacdac_RegisterClient_pauseUntilValues__P3530_pre:
    .section code
    .balign 4
jacdac_RegisterClient_pauseUntilValues__P3530_args:
    cmp r4, #2
    bge jacdac_RegisterClient_pauseUntilValues__P3530_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_RegisterClient_pauseUntilValues__P3530_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_RegisterClient_pauseUntilValues__P3530:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    mov lr, r7
jacdac_RegisterClient_pauseUntilValues__P3530_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_RegisterClient_pauseUntilValues__P3530_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_233      
.jmpz1239:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_query__P3529_nochk
_proccall1240:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_233:
.afterif_1_233:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_hasValues__P3526_nochk
_proccall1242:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_233      
.jmpz1241:
    movs r0, #2
    ldr r1, _ldlit_345 ; jacdac_RegisterClient_pauseUntilValues_inline__P10487_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_233      
.jmpz1243:
    ldr r0, [sp, #4*0] ; tmpref @2
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_233      
.lazySkip_4_233:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #5
    lsls r0, r0, #8
    adds r0, #221
.lazy_3_233:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl pauseUntil__P2661
_proccall1244:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_233:
.afterif_5_233:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_values__P3531_nochk
_proccall1245:
    add sp, #4*1 ; pop locals 1
.ret.3530:
    @stackempty locals
.final_6_233:
    add sp, #4*1 ; pop locals 1
jacdac_RegisterClient_pauseUntilValues__P3530_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_344:
 .word 813664581
_ldlit_345:
 .word jacdac_RegisterClient_pauseUntilValues_inline__P10487_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(946,28): jacdac.RegisterClient.pauseUntilValues.inline
    ;
    .object jacdac_RegisterClient_pauseUntilValues_inline__P10487 "jacdac/routing.ts(946,28): jacdac.RegisterClient.pauseUntilValues.inline"
jacdac_RegisterClient_pauseUntilValues_inline__P10487_pre:
    .section code
    .balign 4
jacdac_RegisterClient_pauseUntilValues_inline__P10487_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_RegisterClient_pauseUntilValues_inline__P10487_args@fn
jacdac_RegisterClient_pauseUntilValues_inline__P10487_args:
    .section code
jacdac_RegisterClient_pauseUntilValues_inline__P10487:
jacdac_RegisterClient_pauseUntilValues_inline__P10487_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_RegisterClient_pauseUntilValues_inline__P10487_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_hasValues__P3526_nochk
_proccall1246:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_234      
.jmpz1247:
    movs r0, #66
    b .ret.10487      
.else_0_234:
.afterif_1_234:
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_234      
.jmpz1248:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_query__P3529_nochk
_proccall1249:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_234:
.afterif_3_234:
    movs r0, #10
.ret.10487:
    @stackempty locals
.final_4_234:
    add sp, #4*1 ; pop locals 1
jacdac_RegisterClient_pauseUntilValues_inline__P10487_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(956,9): jacdac.RegisterClient.values
    ;
    .object jacdac_RegisterClient_values__P3531 "jacdac/routing.ts(956,9): jacdac.RegisterClient.values"
jacdac_RegisterClient_values__P3531_pre:
    .section code
    .balign 4
jacdac_RegisterClient_values__P3531_args:
    cmp r4, #1
    bge jacdac_RegisterClient_values__P3531_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_RegisterClient_values__P3531_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_values__P3531:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    mov lr, r7
jacdac_RegisterClient_values__P3531_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_values__P3531_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl jacdac_Client_start__P3568
_proccall1250:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_jdunpack__P2966
_proccall1251:
    add sp, #4*2 ; pop locals 2
.ret.3531:
    @stackempty locals
.final_0_235:
jacdac_RegisterClient_values__P3531_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/poll.ts(74,1): pauseUntil
    ;
    .object pauseUntil__P2661 "core/poll.ts(74,1): pauseUntil"
pauseUntil__P2661_pre:
    .section code
    .balign 4
    .section code
pauseUntil__P2661:
pauseUntil__P2661_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pauseUntil__P2661_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_236      
.jmpz1252:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_236      
.lazySkip_2_236:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _lambda_call0_0
    add sp, #4*1 ; pop locals 1
.lazy_1_236:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_236      
.jmpz1254:
    b .ret.2661      
.else_0_236:
.afterif_3_236:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_236      
.jmpz1255:
    movs r0, #1
    str r0, [sp, args@1]
    @stackempty locals
.else_4_236:
.afterif_5_236:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl control___queuePollEvent__P2660
_proccall1256:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2661:
    @stackempty locals
    movs r0, #0
.final_6_236:
pauseUntil__P2661_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/poll.ts(40,5): control.__queuePollEvent
    ;
    .object control___queuePollEvent__P2660 "core/poll.ts(40,5): control.__queuePollEvent"
control___queuePollEvent__P2660_pre:
    .section code
    .balign 4
    .section code
control___queuePollEvent__P2660:
control___queuePollEvent__P2660_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control___queuePollEvent__P2660_locals:
    ldr r0, _ldlit_347 ; control_PollEvent__C4842_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl control::allocateNotifyEvent
    bl _numops_fromInt
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    ldr r0, [sp, #4*11] ; tmpref @1
    push {r0} ; proc-arg
    bl control_PollEvent_constructor__P4843
_proccall1257:
    add sp, #4*12 ; pop locals 12
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_237      
.jmpz1258:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
    ldr r0, _ldlit_348 ; control_pollEvents__P4846_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2297
_proccall1259:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_237      
.else_0_237:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_237:
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_237      
.jmpz1260:
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4842_validate_58
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4842_validate_58
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_60
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_3_237      
.else_2_237:
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4842_validate_58
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4842_validate_58
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_41
    mov r7, sp
    str r7, [r6, #4]
    bl control::waitForEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_237:
.ret.2660:
    @stackempty locals
    movs r0, #0
.final_4_237:
    add sp, #4*1 ; pop locals 1
control___queuePollEvent__P2660_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/poll.ts(21,5): control.pollEvents
    ;
    .object control_pollEvents__P4846 "core/poll.ts(21,5): control.pollEvents"
control_pollEvents__P4846_pre:
    .section code
    .balign 4
control_pollEvents__P4846_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_pollEvents__P4846_args@fn
control_pollEvents__P4846_args:
    .section code
control_pollEvents__P4846:
control_pollEvents__P4846_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_pollEvents__P4846_locals:
.cont.10571:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_gt
    bne .jmpz1261
    b .brk.10571      
.jmpz1261:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10578:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1262
    b .brk.10578      
.jmpz1262:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #109
    bl _ifacecall1__52
_proccall1264:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_238      
.jmpz1263:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_238      
.lazySkip_2_238:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4842_validate_58
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_238      
.jmpz1265:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_238      
.lazySkip_4_238:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4842_validate_58
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4842_validate_58
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_3_238:
; jmp value (already in r0)
.lazy_1_238:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_238      
.jmpz1266:
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4842_validate_58
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4842_validate_58
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_41
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4842_validate_58
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_238      
.jmpz1267:
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl helpers_arraySplice__P1992
_proccall1268:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
.else_5_238:
.afterif_6_238:
.else_0_238:
.afterif_7_238:
.cont.10578:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10578      
.brk.10578:
    movs r0, #101
    push {r0} ; proc-arg
    bl pause__P2227
_proccall1269:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.10571      
.brk.10571:
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
.ret.4846:
    @stackempty locals
    movs r0, #0
.final_8_238:
    add sp, #4*3 ; pop locals 3
control_pollEvents__P4846_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(138,5): helpers.arraySplice
    ;
    .object helpers_arraySplice__P1992 "core/pxt-helpers.ts(138,5): helpers.arraySplice"
helpers_arraySplice__P1992_pre:
    .section code
    .balign 4
    .section code
helpers_arraySplice__P1992:
helpers_arraySplice__P1992_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_arraySplice__P1992_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_239      
.jmpz1270:
    b .ret.1992      
.else_0_239:
.afterif_1_239:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.10631:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _cmp_lt
    bne .jmpz1271
    b .brk.10631      
.object PUSH
.balign 4
_ldlit_347:
 .word control_PollEvent__C4842_VT
_ldlit_348:
 .word control_pollEvents__P4846_Lit
.object POP
.jmpz1271:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_61
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeAt
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.10631:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.10631      
.brk.10631:
.ret.1992:
    @stackempty locals
    movs r0, #0
.final_2_239:
    add sp, #4*1 ; pop locals 1
helpers_arraySplice__P1992_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/poll.ts(9,9): control.PollEvent.constructor
    ;
    .object control_PollEvent_constructor__P4843 "core/poll.ts(9,9): control.PollEvent.constructor"
control_PollEvent_constructor__P4843_pre:
    .section code
    .balign 4
    .section code
control_PollEvent_constructor__P4843:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_PollEvent__C4842_validate_58
    mov lr, r7
control_PollEvent_constructor__P4843_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_PollEvent_constructor__P4843_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@6]
    str r1, [r0, #24]
    @stackempty locals
    movs r0, #0
.ret.4843:
    @stackempty locals
.final_0_240:
control_PollEvent_constructor__P4843_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(910,9): jacdac.RegisterClient.hasValues
    ;
    .object jacdac_RegisterClient_hasValues__P3526 "jacdac/routing.ts(910,9): jacdac.RegisterClient.hasValues"
jacdac_RegisterClient_hasValues__P3526_pre:
    .section code
    .balign 4
jacdac_RegisterClient_hasValues__P3526_args:
    cmp r4, #1
    bge jacdac_RegisterClient_hasValues__P3526_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_RegisterClient_hasValues__P3526_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_hasValues__P3526:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    mov lr, r7
jacdac_RegisterClient_hasValues__P3526_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_hasValues__P3526_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3526:
    @stackempty locals
.final_0_241:
jacdac_RegisterClient_hasValues__P3526_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(925,9): jacdac.RegisterClient.query
    ;
    .object jacdac_RegisterClient_query__P3529 "jacdac/routing.ts(925,9): jacdac.RegisterClient.query"
jacdac_RegisterClient_query__P3529_pre:
    .section code
    .balign 4
jacdac_RegisterClient_query__P3529_args:
    cmp r4, #1
    bge jacdac_RegisterClient_query__P3529_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_RegisterClient_query__P3529_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_query__P3529:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    mov lr, r7
jacdac_RegisterClient_query__P3529_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_RegisterClient_query__P3529_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_isConst__P3527_nochk
_proccall1273:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_242      
.jmpz1272:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_242      
.lazySkip_1_242:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_hasValues__P3526_nochk
_proccall1274:
    add sp, #4*1 ; pop locals 1
.lazy_0_242:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    ldr r0, [r0, #8]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_242      
.jmpz1275:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_242      
.lazySkip_4_242:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_3_242:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_242      
.jmpz1276:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_isConst__P3527_nochk
_proccall1278:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_5_242      
.jmpz1277:
    movs r0, #6
    b .condexprfin_6_242      
.condexprz_5_242:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_isOptional__P3528_nochk
_proccall1280:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_7_242      
.jmpz1279:
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    b .condexprfin_8_242      
.condexprz_7_242:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #245
.condexprfin_8_242:
; jmp value (already in r0)
.condexprfin_6_242:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl jacdac_Device_query__P3589
_proccall1281:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.else_2_242:
.afterif_9_242:
.ret.3529:
    @stackempty locals
    movs r0, #0
.final_10_242:
    add sp, #4*2 ; pop locals 2
jacdac_RegisterClient_query__P3529_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(918,9): jacdac.RegisterClient.isOptional
    ;
    .object jacdac_RegisterClient_isOptional__P3528 "jacdac/routing.ts(918,9): jacdac.RegisterClient.isOptional"
jacdac_RegisterClient_isOptional__P3528_pre:
    .section code
    .balign 4
jacdac_RegisterClient_isOptional__P3528_args:
    cmp r4, #1
    bge jacdac_RegisterClient_isOptional__P3528_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_RegisterClient_isOptional__P3528_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_isOptional__P3528:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    mov lr, r7
jacdac_RegisterClient_isOptional__P3528_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_isOptional__P3528_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3528:
    @stackempty locals
.final_0_243:
jacdac_RegisterClient_isOptional__P3528_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1475,9): jacdac.Device.query
    ;
    .object jacdac_Device_query__P3589 "jacdac/routing.ts(1475,9): jacdac.Device.query"
jacdac_Device_query__P3589_pre:
    .section code
    .balign 4
jacdac_Device_query__P3589_args:
    cmp r4, #4
    bge jacdac_Device_query__P3589_nochk
    push {lr}
    bl _expand_args_4_43
    bl jacdac_Device_query__P3589_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
jacdac_Device_query__P3589:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_query__P3589_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_query__P3589_locals:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_lookupQuery__P5102_nochk
_proccall1282:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_244      
.jmpz1283:
    ldr r0, _ldlit_350 ; jacdac_RegQuery__C5099_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_RegQuery_constructor__P5100
_proccall1284:
    add sp, #4*3 ; pop locals 3
    ldr r0, [sp, #4*0] ; tmpref @1
    str r0, [sp, locals@0]
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_244:
.afterif_1_244:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C5099_validate_38
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_244      
.jmpz1285:
    movs r0, #0
    b .ret.3589      
.else_2_244:
.afterif_3_244:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C5099_validate_38
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_244      
.jmpz1286:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_244      
.lazySkip_6_244:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C5099_validate_38
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_244      
.jmpz1287:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_244      
.lazySkip_8_244:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C5099_validate_38
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    lsls r1, r1, #8
    adds r1, #233
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_7_244:
; jmp value (already in r0)
.lazy_5_244:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_244      
.jmpz1288:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_244      
.lazySkip_10_244:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_12_244      
.jmpz1289:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_11_244      
.lazySkip_12_244:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C5099_validate_38
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_11_244:
; jmp value (already in r0)
.lazy_9_244:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_244      
.jmpz1290:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _inst_jacdac_RegQuery__C5099_validate_38
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #32
    lsls r0, r0, #8
    adds r0, #1
    ldr r1, [sp, args@1]
    bl _numops_orrs
    push {r0} ; the one arg
    bl jacdac_JDPacket_onlyHeader__P2917
_proccall1291:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2932
_proccall1292:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_JDPacket__sendCmd__P2958
_proccall1293:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_244:
.afterif_13_244:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C5099_validate_38
    ldr r0, [r0, #12]
.ret.3589:
    @stackempty locals
.final_14_244:
    add sp, #4*3 ; pop locals 3
jacdac_Device_query__P3589_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1311,9): jacdac.RegQuery.constructor
    ;
    .object jacdac_RegQuery_constructor__P5100 "jacdac/routing.ts(1311,9): jacdac.RegQuery.constructor"
jacdac_RegQuery_constructor__P5100_pre:
    .section code
    .balign 4
    .section code
jacdac_RegQuery_constructor__P5100:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegQuery__C5099_validate_38
    mov lr, r7
jacdac_RegQuery_constructor__P5100_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegQuery_constructor__P5100_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #8]
    movs r0, #0
.ret.5100:
    @stackempty locals
.final_0_245:
jacdac_RegQuery_constructor__P5100_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(914,9): jacdac.RegisterClient.isConst
    ;
    .object jacdac_RegisterClient_isConst__P3527 "jacdac/routing.ts(914,9): jacdac.RegisterClient.isConst"
jacdac_RegisterClient_isConst__P3527_pre:
    .section code
    .balign 4
jacdac_RegisterClient_isConst__P3527_args:
    cmp r4, #1
    bge jacdac_RegisterClient_isConst__P3527_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_RegisterClient_isConst__P3527_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_isConst__P3527:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    mov lr, r7
jacdac_RegisterClient_isConst__P3527_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_isConst__P3527_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3527:
    @stackempty locals
.final_0_246:
jacdac_RegisterClient_isConst__P3527_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(78,9): jacdac.SensorClient.setStreaming
    ;
    .object jacdac_SensorClient_setStreaming__P3268 "jacdac/sensor/client.ts(78,9): jacdac.SensorClient.setStreaming"
jacdac_SensorClient_setStreaming__P3268_pre:
    .section code
    .balign 4
jacdac_SensorClient_setStreaming__P3268_args:
    cmp r4, #3
    bge jacdac_SensorClient_setStreaming__P3268_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_SensorClient_setStreaming__P3268_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_SensorClient_setStreaming__P3268:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SensorClient__C3264_validate_62
    mov lr, r7
jacdac_SensorClient_setStreaming__P3268_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_SensorClient_setStreaming__P3268_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1294:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #84]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #84]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_247      
.jmpz1295:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_247      
.lazySkip_2_247:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_247:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_247      
.jmpz1296:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_checkSamples__P5040_nochk
_proccall1297:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_247:
.afterif_3_247:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_neq
    bne .jmpz1298
    b .else_4_247      
.object PUSH
.balign 4
_ldlit_350:
 .word jacdac_RegQuery__C5099_VT
.object POP
.jmpz1298:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, #0]      
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_setReg__P3566_nochk
_proccall1299:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_4_247:
.afterif_5_247:
.ret.3268:
    @stackempty locals
    movs r0, #0
.final_6_247:
    add sp, #4*1 ; pop locals 1
jacdac_SensorClient_setStreaming__P3268_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1224,9): jacdac.Client.setReg
    ;
    .object jacdac_Client_setReg__P3566 "jacdac/routing.ts(1224,9): jacdac.Client.setReg"
jacdac_Client_setReg__P3566_pre:
    .section code
    .balign 4
jacdac_Client_setReg__P3566_args:
    cmp r4, #4
    bge jacdac_Client_setReg__P3566_nochk
    push {lr}
    bl _expand_args_4_43
    bl jacdac_Client_setReg__P3566_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
jacdac_Client_setReg__P3566:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_setReg__P3566_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Client_setReg__P3566_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1300:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #1
    ldr r1, [sp, args@1]
    bl _numops_orrs
    mov r3, r0
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_jdpacked__P2919
_proccall1301:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_ClientPacketQueue_send__P5091
_proccall1302:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3566:
    @stackempty locals
    movs r0, #0
.final_0_248:
    add sp, #4*1 ; pop locals 1
jacdac_Client_setReg__P3566_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(847,9): jacdac.ClientPacketQueue.send
    ;
    .object jacdac_ClientPacketQueue_send__P5091 "jacdac/routing.ts(847,9): jacdac.ClientPacketQueue.send"
jacdac_ClientPacketQueue_send__P5091_pre:
    .section code
    .balign 4
jacdac_ClientPacketQueue_send__P5091_args:
    cmp r4, #2
    bge jacdac_ClientPacketQueue_send__P5091_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_ClientPacketQueue_send__P5091_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_ClientPacketQueue_send__P5091:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ClientPacketQueue__C5088_validate_44
    mov lr, r7
jacdac_ClientPacketQueue_send__P5091_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ClientPacketQueue_send__P5091_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isRegSet__P2939
_proccall1304:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_249      
.jmpz1303:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_249      
.lazySkip_2_249:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_249:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_249      
.jmpz1305:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_ClientPacketQueue_updateQueue__P5089_nochk
_proccall1306:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_249:
.afterif_3_249:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_Client_sendCommand__P3564
_proccall1307:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5091:
    @stackempty locals
    movs r0, #0
.final_4_249:
jacdac_ClientPacketQueue_send__P5091_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(832,9): jacdac.ClientPacketQueue.updateQueue
    ;
    .object jacdac_ClientPacketQueue_updateQueue__P5089 "jacdac/routing.ts(832,9): jacdac.ClientPacketQueue.updateQueue"
jacdac_ClientPacketQueue_updateQueue__P5089_pre:
    .section code
    .balign 4
jacdac_ClientPacketQueue_updateQueue__P5089_args:
    cmp r4, #2
    bge jacdac_ClientPacketQueue_updateQueue__P5089_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_ClientPacketQueue_updateQueue__P5089_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_ClientPacketQueue_updateQueue__P5089:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ClientPacketQueue__C5088_validate_44
    mov lr, r7
jacdac_ClientPacketQueue_updateQueue__P5089_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_ClientPacketQueue_updateQueue__P5089_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall1308:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10843:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.10843      
.jmpz1309:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #4
    movs r2, #2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _cmp_eq
    beq .else_0_250      
.jmpz1310:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_withFrameStripped__P2949
_proccall1311:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .ret.5089      
.else_0_250:
.afterif_1_250:
.cont.10843:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10843      
.brk.10843:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_withFrameStripped__P2949
_proccall1312:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5089:
    @stackempty locals
    movs r0, #0
.final_2_250:
    add sp, #4*2 ; pop locals 2
jacdac_ClientPacketQueue_updateQueue__P5089_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(252,9): jacdac.JDPacket.withFrameStripped
    ;
    .object jacdac_JDPacket_withFrameStripped__P2949 "jacdac/packet.ts(252,9): jacdac.JDPacket.withFrameStripped"
jacdac_JDPacket_withFrameStripped__P2949_pre:
    .section code
    .balign 4
jacdac_JDPacket_withFrameStripped__P2949_args:
    cmp r4, #1
    bge jacdac_JDPacket_withFrameStripped__P2949_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_withFrameStripped__P2949_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_withFrameStripped__P2949:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_withFrameStripped__P2949_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_withFrameStripped__P2949_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #12
    movs r2, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl helpers_bufferConcat__P2625
_proccall1313:
    add sp, #4*2 ; pop locals 2
.ret.2949:
    @stackempty locals
.final_0_251:
jacdac_JDPacket_withFrameStripped__P2949_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(185,9): jacdac.JDPacket.isRegSet
    ;
    .object jacdac_JDPacket_isRegSet__P2939 "jacdac/packet.ts(185,9): jacdac.JDPacket.isRegSet"
jacdac_JDPacket_isRegSet__P2939_pre:
    .section code
    .balign 4
jacdac_JDPacket_isRegSet__P2939_args:
    cmp r4, #1
    bge jacdac_JDPacket_isRegSet__P2939_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_isRegSet__P2939_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_isRegSet__P2939:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_isRegSet__P2939_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_isRegSet__P2939_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934_nochk
_proccall1314:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #25
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.ret.2939:
    @stackempty locals
.final_0_252:
jacdac_JDPacket_isRegSet__P2939_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(48,9): jacdac.SensorClient.checkSamples
    ;
    .object jacdac_SensorClient_checkSamples__P5040 "jacdac/sensor/client.ts(48,9): jacdac.SensorClient.checkSamples"
jacdac_SensorClient_checkSamples__P5040_pre:
    .section code
    .balign 4
jacdac_SensorClient_checkSamples__P5040_args:
    cmp r4, #1
    bge jacdac_SensorClient_checkSamples__P5040_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_SensorClient_checkSamples__P5040_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_SensorClient_checkSamples__P5040:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SensorClient__C3264_validate_62
    mov lr, r7
jacdac_SensorClient_checkSamples__P5040_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_SensorClient_checkSamples__P5040_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #84]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_253      
.jmpz1315:
    b .ret.5040      
.else_0_253:
.afterif_1_253:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #68]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3531
_proccall1317:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_253      
.jmpz1316:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_253      
.lazySkip_3_253:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #201
.lazy_2_253:
; jmp value (already in r0)
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    bl Math_max__P2022
_proccall1318:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    movs r1, #65
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_253      
.jmpz1319:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_253      
.lazySkip_6_253:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #80]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_5_253:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_8_253      
.jmpz1320:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_253      
.lazySkip_8_253:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #76]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_7_253:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_253      
.jmpz1321:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl jacdac_RegisterClient_values__P3532
_proccall1322:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    str r1, [r0, #72]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #80]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_sendSet__P3533
_proccall1323:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_253:
.afterif_9_253:
.ret.5040:
    @stackempty locals
    movs r0, #0
.final_10_253:
    add sp, #4*2 ; pop locals 2
jacdac_SensorClient_checkSamples__P5040_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(973,9): jacdac.RegisterClient.sendSet
    ;
    .object jacdac_RegisterClient_sendSet__P3533 "jacdac/routing.ts(973,9): jacdac.RegisterClient.sendSet"
jacdac_RegisterClient_sendSet__P3533_pre:
    .section code
    .balign 4
jacdac_RegisterClient_sendSet__P3533_args:
    cmp r4, #1
    bge jacdac_RegisterClient_sendSet__P3533_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_RegisterClient_sendSet__P3533_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_sendSet__P3533:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    mov lr, r7
jacdac_RegisterClient_sendSet__P3533_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_sendSet__P3533_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_254      
.jmpz1324:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_Client_setRegBuffer__P3567
_proccall1325:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_254:
.afterif_1_254:
.ret.3533:
    @stackempty locals
    movs r0, #0
.final_2_254:
jacdac_RegisterClient_sendSet__P3533_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1230,9): jacdac.Client.setRegBuffer
    ;
    .object jacdac_Client_setRegBuffer__P3567 "jacdac/routing.ts(1230,9): jacdac.Client.setRegBuffer"
jacdac_Client_setRegBuffer__P3567_pre:
    .section code
    .balign 4
jacdac_Client_setRegBuffer__P3567_args:
    cmp r4, #3
    bge jacdac_Client_setRegBuffer__P3567_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_Client_setRegBuffer__P3567_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_Client_setRegBuffer__P3567:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_setRegBuffer__P3567_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_setRegBuffer__P3567_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1326:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #1
    ldr r1, [sp, args@1]
    bl _numops_orrs
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_from__P2916
_proccall1327:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_ClientPacketQueue_send__P5091
_proccall1328:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3567:
    @stackempty locals
    movs r0, #0
.final_0_255:
jacdac_Client_setRegBuffer__P3567_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(961,9): jacdac.RegisterClient.values
    ;
    .object jacdac_RegisterClient_values__P3532 "jacdac/routing.ts(961,9): jacdac.RegisterClient.values"
jacdac_RegisterClient_values__P3532_pre:
    .section code
    .balign 4
jacdac_RegisterClient_values__P3532_args:
    cmp r4, #2
    bge jacdac_RegisterClient_values__P3532_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_RegisterClient_values__P3532_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_RegisterClient_values__P3532:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    mov lr, r7
jacdac_RegisterClient_values__P3532_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_RegisterClient_values__P3532_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl jacdac_Client_start__P3568
_proccall1329:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_jdpack__P2967
_proccall1330:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_256      
.jmpz1331:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_256      
.lazySkip_1_256:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_0_256:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_256      
.jmpz1332:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_256      
.lazySkip_3_256:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl helpers_bufferEquals__P2626
_proccall1333:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_2_256:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_256      
.jmpz1334:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_Client_setRegBuffer__P3567
_proccall1335:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall1336:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_256:
.afterif_5_256:
.ret.3532:
    @stackempty locals
    movs r0, #0
.final_6_256:
    add sp, #4*2 ; pop locals 2
jacdac_RegisterClient_values__P3532_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(529,5): Math.clamp
    ;
    .object Math_clamp__P2019 "core/pxt-helpers.ts(529,5): Math.clamp"
Math_clamp__P2019_pre:
    .section code
    .balign 4
    .section code
Math_clamp__P2019:
Math_clamp__P2019_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_clamp__P2019_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_max__P2022
_proccall1337:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl Math_min__P2023
_proccall1338:
    add sp, #4*2 ; pop locals 2
.ret.2019:
    @stackempty locals
.final_0_257:
Math_clamp__P2019_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-distance/client.ts(113,9): modules.DistanceClient.onDistanceChangedBy
    ;
    .object modules_DistanceClient_onDistanceChangedBy__P3804 "jacdac-distance/client.ts(113,9): modules.DistanceClient.onDistanceChangedBy"
modules_DistanceClient_onDistanceChangedBy__P3804_pre:
    .section code
    .balign 4
modules_DistanceClient_onDistanceChangedBy__P3804_args:
    cmp r4, #3
    bge modules_DistanceClient_onDistanceChangedBy__P3804_nochk
    push {lr}
    bl _expand_args_3_7
    bl modules_DistanceClient_onDistanceChangedBy__P3804_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
modules_DistanceClient_onDistanceChangedBy__P3804:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_DistanceClient__C3797_validate_56
    mov lr, r7
modules_DistanceClient_onDistanceChangedBy__P3804_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_DistanceClient_onDistanceChangedBy__P3804_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_onReadingChangedBy__P3274_nochk
_proccall1339:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3804:
    @stackempty locals
    movs r0, #0
.final_0_258:
modules_DistanceClient_onDistanceChangedBy__P3804_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(135,9): jacdac.SimpleSensorClient.onReadingChangedBy
    ;
    .object jacdac_SimpleSensorClient_onReadingChangedBy__P3274 "jacdac/sensor/client.ts(135,9): jacdac.SimpleSensorClient.onReadingChangedBy"
jacdac_SimpleSensorClient_onReadingChangedBy__P3274_pre:
    .section code
    .balign 4
jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args:
    cmp r4, #3
    bge jacdac_SimpleSensorClient_onReadingChangedBy__P3274_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_SimpleSensorClient_onReadingChangedBy__P3274_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_SimpleSensorClient_onReadingChangedBy__P3274:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SimpleSensorClient__C3270_validate_57
    mov lr, r7
jacdac_SimpleSensorClient_onReadingChangedBy__P3274_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_SimpleSensorClient_onReadingChangedBy__P3274_locals:
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_259      
.jmpz1340:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_259      
.lazySkip_2_259:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_1_259:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_259      
.jmpz1341:
    b .ret.3274      
.else_0_259:
.afterif_3_259:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_reading__P3273_nochk
_proccall1342:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    movs r1, #10
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    movs r0, #5
    ldr r1, _ldlit_352 ; jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11037_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #4
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_onStateChanged__P3269_nochk
_proccall1343:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3274:
    @stackempty locals
    movs r0, #0
.final_4_259:
    add sp, #4*2 ; pop locals 2
jacdac_SimpleSensorClient_onReadingChangedBy__P3274_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(144,33): jacdac.SimpleSensorClient.onReadingChangedBy.inline
    ;
    .object jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11037 "jacdac/sensor/client.ts(144,33): jacdac.SimpleSensorClient.onReadingChangedBy.inline"
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11037_pre:
    .section code
    .balign 4
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11037_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11037_args@fn
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11037_args:
    .section code
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11037:
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11037_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11037_locals:
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_260      
.jmpz1344:
    b .ret.11037      
.else_0_260:
.afterif_1_260:
    ldr r0, [r5, #4*4]
    ldr r0, [r0, #60]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3531
_proccall1345:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #6
    bl _cmp_eq
    beq .else_2_260      
.jmpz1346:
    b .ret.11037      
.else_2_260:
.afterif_3_260:
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_260      
.jmpz1347:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_260      
.lazySkip_6_260:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    ldr r1, [sp, locals@0]
    bl _numops_subs
    push {r0} ; the one arg
    bl Math_abs__P2020
_proccall1348:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*6]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_5_260:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_260      
.jmpz1349:
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #6
    bl _cmp_eq
    beq .condexprz_7_260      
.jmpz1350:
    ldr r0, [sp, locals@0]
    b .condexprfin_8_260      
.condexprz_7_260:
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
.condexprfin_8_260:
; jmp value (already in r0)
    ldr r1, [sp, locals@0]
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [r5, #4*5]
    ldr r1, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    ldr r0, [r5, #4*3]
    movs r1, #66
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_353 ; jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11069_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [r5, #4*7]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control_runInBackground__P2298
_proccall1351:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_260:
.afterif_9_260:
.ret.11037:
    @stackempty locals
    movs r0, #0
.final_10_260:
    add sp, #4*2 ; pop locals 2
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11037_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(156,45): jacdac.SimpleSensorClient.onReadingChangedBy.inline
    ;
    .object jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11069 "jacdac/sensor/client.ts(156,45): jacdac.SimpleSensorClient.onReadingChangedBy.inline"
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11069_pre:
    .section code
    .balign 4
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11069_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11069_args@fn
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11069_args:
    .section code
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11069:
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11069_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11069_locals:
    ldr r0, _ldlit_354 ; _finally_11070      
    bl _pxt_save_exception_state
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_63
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
_finally_11070:
    ldr r0, [r5, #4*5]
    movs r1, #10
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endFinally
.ret.11069:
    @stackempty locals
    movs r0, #0
.final_2_261:
jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11069_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_352:
 .word jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11037_Lit
_ldlit_353:
 .word jacdac_SimpleSensorClient_onReadingChangedBy_inline__P11069_Lit
_ldlit_354:
 .word _finally_11070
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-distance/client.ts(14,9): modules.DistanceClient.constructor
    ;
    .object modules_DistanceClient_constructor__P3798 "jacdac-distance/client.ts(14,9): modules.DistanceClient.constructor"
modules_DistanceClient_constructor__P3798_pre:
    .section code
    .balign 4
    .section code
modules_DistanceClient_constructor__P3798:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_DistanceClient__C3797_validate_56
    mov lr, r7
modules_DistanceClient_constructor__P3798_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_DistanceClient_constructor__P3798_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    movs r0, #188
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_356 ; 674551573      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_constructor__P3271
_proccall1353:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #5
    str r1, [r0, #92]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #15
    lsls r1, r1, #8
    adds r1, #161
    str r1, [r0, #88]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #192
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #13
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1354:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1355:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #100]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #200
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1356:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #204
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1357:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #108]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3798:
    @stackempty locals
.final_0_262:
modules_DistanceClient_constructor__P3798_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1092,9): jacdac.Client.addRegister
    ;
    .object jacdac_Client_addRegister__P4978 "jacdac/routing.ts(1092,9): jacdac.Client.addRegister"
jacdac_Client_addRegister__P4978_pre:
    .section code
    .balign 4
jacdac_Client_addRegister__P4978_args:
    cmp r4, #5
    bge jacdac_Client_addRegister__P4978_nochk
    push {lr}
    bl _expand_args_5_51
    bl jacdac_Client_addRegister__P4978_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
jacdac_Client_addRegister__P4978:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_addRegister__P4978_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Client_addRegister__P4978_locals:
    movs r0, #1
    ldr r1, _ldlit_357 ; reg_inline__P11141_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFind__P2003
_proccall1358:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_263      
.jmpz1359:
    ldr r0, _ldlit_358 ; jacdac_RegisterClient__C3521_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*5] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_constructor__P3523
_proccall1360:
    add sp, #4*6 ; pop locals 6
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_263:
.afterif_1_263:
    ldr r0, [sp, locals@0]
.ret.4978:
    @stackempty locals
.final_2_263:
    add sp, #4*1 ; pop locals 1
jacdac_Client_addRegister__P4978_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1098,43): reg.inline
    ;
    .object reg_inline__P11141 "jacdac/routing.ts(1098,43): reg.inline"
reg_inline__P11141_pre:
    .section code
    .balign 4
reg_inline__P11141_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word reg_inline__P11141_args@fn
reg_inline__P11141_args:
    cmp r4, #1
    bge reg_inline__P11141_nochk
    push {lr}
    bl _expand_args_1_5
    bl reg_inline__P11141_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
reg_inline__P11141:
reg_inline__P11141_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
reg_inline__P11141_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.11141:
    @stackempty locals
.final_0_264:
reg_inline__P11141_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(886,9): jacdac.RegisterClient.constructor
    ;
    .object jacdac_RegisterClient_constructor__P3523 "jacdac/routing.ts(886,9): jacdac.RegisterClient.constructor"
jacdac_RegisterClient_constructor__P3523_pre:
    .section code
    .balign 4
    .section code
jacdac_RegisterClient_constructor__P3523:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3521_validate_40
    mov lr, r7
jacdac_RegisterClient_constructor__P3523_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_constructor__P3523_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #28]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_constructor__P3623
_proccall1361:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@4]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_265      
.jmpz1362:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_265      
.lazySkip_1_265:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_265:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_265      
.jmpz1363:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_jdpack__P2967
_proccall1364:
    add sp, #4*2 ; pop locals 2
    b .condexprfin_3_265      
.condexprz_2_265:
    movs r0, #0
.condexprfin_3_265:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3523:
    @stackempty locals
.final_4_265:
jacdac_RegisterClient_constructor__P3523_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(99,9): jacdac.SimpleSensorClient.constructor
    ;
    .object jacdac_SimpleSensorClient_constructor__P3271 "jacdac/sensor/client.ts(99,9): jacdac.SimpleSensorClient.constructor"
jacdac_SimpleSensorClient_constructor__P3271_pre:
    .section code
    .balign 4
    .section code
jacdac_SimpleSensorClient_constructor__P3271:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SimpleSensorClient__C3270_validate_57
    mov lr, r7
jacdac_SimpleSensorClient_constructor__P3271_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SimpleSensorClient_constructor__P3271_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    movs r0, #201
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_constructor__P3266
_proccall1365:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #0
.ret.3271:
    @stackempty locals
.final_0_266:
jacdac_SimpleSensorClient_constructor__P3271_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_356:
 .word 674551573
_ldlit_357:
 .word reg_inline__P11141_Lit
_ldlit_358:
 .word jacdac_RegisterClient__C3521_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(14,9): jacdac.SensorClient.constructor
    ;
    .object jacdac_SensorClient_constructor__P3266 "jacdac/sensor/client.ts(14,9): jacdac.SensorClient.constructor"
jacdac_SensorClient_constructor__P3266_pre:
    .section code
    .balign 4
    .section code
jacdac_SensorClient_constructor__P3266:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SensorClient__C3264_validate_62
    mov lr, r7
jacdac_SensorClient_constructor__P3266_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SensorClient_constructor__P3266_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_constructor__P3550
_proccall1366:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1367:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #208
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1368:
    add sp, #4*5 ; pop locals 5
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #64]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1369:
    add sp, #4*5 ; pop locals 5
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #68]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_360 ; jacdac_SensorClient_inline__P11226_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_EventSource_on__P3624
_proccall1370:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_361 ; jacdac_SensorClient_inline__P11238_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #132
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_EventSource_on__P3624
_proccall1371:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3266:
    @stackempty locals
.final_0_267:
jacdac_SensorClient_constructor__P3266_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(37,46): jacdac.SensorClient.inline
    ;
    .object jacdac_SensorClient_inline__P11226 "jacdac/sensor/client.ts(37,46): jacdac.SensorClient.inline"
jacdac_SensorClient_inline__P11226_pre:
    .section code
    .balign 4
jacdac_SensorClient_inline__P11226_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_SensorClient_inline__P11226_args@fn
jacdac_SensorClient_inline__P11226_args:
    .section code
jacdac_SensorClient_inline__P11226:
jacdac_SensorClient_inline__P11226_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SensorClient_inline__P11226_locals:
    ldr r0, [r5, #4*3]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #72]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #72]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #80]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.11226:
    @stackempty locals
    movs r0, #0
.final_0_268:
jacdac_SensorClient_inline__P11226_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(41,54): jacdac.SensorClient.inline
    ;
    .object jacdac_SensorClient_inline__P11238 "jacdac/sensor/client.ts(41,54): jacdac.SensorClient.inline"
jacdac_SensorClient_inline__P11238_pre:
    .section code
    .balign 4
jacdac_SensorClient_inline__P11238_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_SensorClient_inline__P11238_args@fn
jacdac_SensorClient_inline__P11238_args:
    .section code
jacdac_SensorClient_inline__P11238:
jacdac_SensorClient_inline__P11238_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SensorClient_inline__P11238_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_updateSamples__P5039_nochk
_proccall1372:
    add sp, #4*1 ; pop locals 1
.ret.11238:
    @stackempty locals
    movs r0, #0
.final_0_269:
jacdac_SensorClient_inline__P11238_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(44,9): jacdac.SensorClient.updateSamples
    ;
    .object jacdac_SensorClient_updateSamples__P5039 "jacdac/sensor/client.ts(44,9): jacdac.SensorClient.updateSamples"
jacdac_SensorClient_updateSamples__P5039_pre:
    .section code
    .balign 4
jacdac_SensorClient_updateSamples__P5039_args:
    cmp r4, #1
    bge jacdac_SensorClient_updateSamples__P5039_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_SensorClient_updateSamples__P5039_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_SensorClient_updateSamples__P5039:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SensorClient__C3264_validate_62
    mov lr, r7
jacdac_SensorClient_updateSamples__P5039_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SensorClient_updateSamples__P5039_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3531
_proccall1374:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_270      
.jmpz1373:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_270      
.lazySkip_1_270:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_270:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #72]
    @stackempty locals
.ret.5039:
    @stackempty locals
    movs r0, #0
.final_2_270:
jacdac_SensorClient_updateSamples__P5039_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-temperature/client.ts(52,9): modules.TemperatureClient.temperature
    ;
    .object modules_TemperatureClient_temperature__P4553 "jacdac-temperature/client.ts(52,9): modules.TemperatureClient.temperature"
modules_TemperatureClient_temperature__P4553_pre:
    .section code
    .balign 4
modules_TemperatureClient_temperature__P4553_args:
    cmp r4, #1
    bge modules_TemperatureClient_temperature__P4553_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_TemperatureClient_temperature__P4553_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_TemperatureClient_temperature__P4553:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_TemperatureClient__C4551_validate_64
    mov lr, r7
modules_TemperatureClient_temperature__P4553_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_TemperatureClient_temperature__P4553_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_reading__P3273_nochk
_proccall1375:
    add sp, #4*1 ; pop locals 1
.ret.4553:
    @stackempty locals
.final_0_271:
modules_TemperatureClient_temperature__P4553_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-temperature/client.ts(113,9): modules.TemperatureClient.onTemperatureChangedBy
    ;
    .object modules_TemperatureClient_onTemperatureChangedBy__P4558 "jacdac-temperature/client.ts(113,9): modules.TemperatureClient.onTemperatureChangedBy"
modules_TemperatureClient_onTemperatureChangedBy__P4558_pre:
    .section code
    .balign 4
modules_TemperatureClient_onTemperatureChangedBy__P4558_args:
    cmp r4, #3
    bge modules_TemperatureClient_onTemperatureChangedBy__P4558_nochk
    push {lr}
    bl _expand_args_3_7
    bl modules_TemperatureClient_onTemperatureChangedBy__P4558_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
modules_TemperatureClient_onTemperatureChangedBy__P4558:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_TemperatureClient__C4551_validate_64
    mov lr, r7
modules_TemperatureClient_onTemperatureChangedBy__P4558_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_TemperatureClient_onTemperatureChangedBy__P4558_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_onReadingChangedBy__P3274_nochk
_proccall1376:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4558:
    @stackempty locals
    movs r0, #0
.final_0_272:
modules_TemperatureClient_onTemperatureChangedBy__P4558_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-temperature/client.ts(14,9): modules.TemperatureClient.constructor
    ;
    .object modules_TemperatureClient_constructor__P4552 "jacdac-temperature/client.ts(14,9): modules.TemperatureClient.constructor"
modules_TemperatureClient_constructor__P4552_pre:
    .section code
    .balign 4
    .section code
modules_TemperatureClient_constructor__P4552:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_TemperatureClient__C4551_validate_64
    mov lr, r7
modules_TemperatureClient_constructor__P4552_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_TemperatureClient_constructor__P4552_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    movs r0, #212
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_362 ; 675509647      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_constructor__P3271
_proccall1377:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #92]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1378:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1379:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #100]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #224
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #13
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1380:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #228
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1381:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #108]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4552:
    @stackempty locals
.final_0_273:
modules_TemperatureClient_constructor__P4552_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-switch/client.g.ts(70,9): modules.SwitchClient.onOff
    ;
    .object modules_SwitchClient_onOff__P4529 "jacdac-switch/client.g.ts(70,9): modules.SwitchClient.onOff"
modules_SwitchClient_onOff__P4529_pre:
    .section code
    .balign 4
modules_SwitchClient_onOff__P4529_args:
    cmp r4, #2
    bge modules_SwitchClient_onOff__P4529_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_SwitchClient_onOff__P4529_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_SwitchClient_onOff__P4529:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_SwitchClient__C4523_validate_65
    mov lr, r7
modules_SwitchClient_onOff__P4529_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_SwitchClient_onOff__P4529_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_registerEvent__P4981_nochk
_proccall1382:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4529:
    @stackempty locals
    movs r0, #0
.final_0_274:
modules_SwitchClient_onOff__P4529_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1242,9): jacdac.Client.registerEvent
    ;
    .object jacdac_Client_registerEvent__P4981 "jacdac/routing.ts(1242,9): jacdac.Client.registerEvent"
jacdac_Client_registerEvent__P4981_pre:
    .section code
    .balign 4
jacdac_Client_registerEvent__P4981_args:
    cmp r4, #3
    bge jacdac_Client_registerEvent__P4981_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_Client_registerEvent__P4981_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
.object PUSH
.balign 4
_ldlit_360:
 .word jacdac_SensorClient_inline__P11226_Lit
_ldlit_361:
 .word jacdac_SensorClient_inline__P11238_Lit
_ldlit_362:
 .word 675509647
.object POP
    .section code
jacdac_Client_registerEvent__P4981:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_registerEvent__P4981_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_registerEvent__P4981_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1383:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_275      
.jmpz1384:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #40]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_275:
.afterif_1_275:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_2_275      
.jmpz1385:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_275:
.afterif_3_275:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, _ldlit_364 ; 122881      
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_60
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4981:
    @stackempty locals
    movs r0, #0
.final_4_275:
jacdac_Client_registerEvent__P4981_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-switch/client.g.ts(9,9): modules.SwitchClient.constructor
    ;
    .object modules_SwitchClient_constructor__P4524 "jacdac-switch/client.g.ts(9,9): modules.SwitchClient.constructor"
modules_SwitchClient_constructor__P4524_pre:
    .section code
    .balign 4
    .section code
modules_SwitchClient_constructor__P4524:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_SwitchClient__C4523_validate_65
    mov lr, r7
modules_SwitchClient_constructor__P4524_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_SwitchClient_constructor__P4524_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #232
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_365 ; 900016133      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_constructor__P3266
_proccall1386:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #236
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1387:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4524:
    @stackempty locals
.final_0_276:
modules_SwitchClient_constructor__P4524_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(267,9): modules.ServoClient.maxAngle
    ;
    .object modules_ServoClient_maxAngle__P4490 "jacdac-servo/client.ts(267,9): modules.ServoClient.maxAngle"
modules_ServoClient_maxAngle__P4490_pre:
    .section code
    .balign 4
modules_ServoClient_maxAngle__P4490_args:
    cmp r4, #1
    bge modules_ServoClient_maxAngle__P4490_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_ServoClient_maxAngle__P4490_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_ServoClient_maxAngle__P4490:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C4477_validate_66
    mov lr, r7
modules_ServoClient_maxAngle__P4490_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_ServoClient_maxAngle__P4490_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1388:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall1389:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.4490:
    @stackempty locals
.final_0_277:
    add sp, #4*1 ; pop locals 1
modules_ServoClient_maxAngle__P4490_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(98,9): modules.ServoClient.setAngle
    ;
    .object modules_ServoClient_setAngle__P4480 "jacdac-servo/client.ts(98,9): modules.ServoClient.setAngle"
modules_ServoClient_setAngle__P4480_pre:
    .section code
    .balign 4
modules_ServoClient_setAngle__P4480_args:
    cmp r4, #2
    bge modules_ServoClient_setAngle__P4480_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_ServoClient_setAngle__P4480_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_ServoClient_setAngle__P4480:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C4477_validate_66
    mov lr, r7
modules_ServoClient_setAngle__P4480_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ServoClient_setAngle__P4480_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_internalSetAngle__P5271_nochk
_proccall1390:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_internalSetContinuous__P5272_nochk
_proccall1391:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4480:
    @stackempty locals
    movs r0, #0
.final_0_278:
modules_ServoClient_setAngle__P4480_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(113,9): modules.ServoClient.internalSetContinuous
    ;
    .object modules_ServoClient_internalSetContinuous__P5272 "jacdac-servo/client.ts(113,9): modules.ServoClient.internalSetContinuous"
modules_ServoClient_internalSetContinuous__P5272_pre:
    .section code
    .balign 4
modules_ServoClient_internalSetContinuous__P5272_args:
    cmp r4, #2
    bge modules_ServoClient_internalSetContinuous__P5272_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_ServoClient_internalSetContinuous__P5272_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_ServoClient_internalSetContinuous__P5272:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C4477_validate_66
    mov lr, r7
modules_ServoClient_internalSetContinuous__P5272_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ServoClient_internalSetContinuous__P5272_locals:
    ldr r0, [sp, args@0]
    movs r3, #132
    ldr r0, [r0, r3]
    ldr r1, [sp, args@1]
    bl _cmp_neqq
    beq .else_0_279      
.jmpz1392:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    movs r3, #132
    str r1, [r0, r3]
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_279      
.jmpz1393:
    ldr r0, _ldlit_366 ; _str239      
    b .condexprfin_2_279      
.condexprz_1_279:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.condexprfin_2_279:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, _ldlit_367 ; _str140      
    push {r0} ; proc-arg
    movs r0, #19
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_setReg__P3566_nochk
_proccall1394:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_0_279:
.afterif_3_279:
.ret.5272:
    @stackempty locals
    movs r0, #0
.final_4_279:
modules_ServoClient_internalSetContinuous__P5272_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(103,9): modules.ServoClient.internalSetAngle
    ;
    .object modules_ServoClient_internalSetAngle__P5271 "jacdac-servo/client.ts(103,9): modules.ServoClient.internalSetAngle"
modules_ServoClient_internalSetAngle__P5271_pre:
    .section code
    .balign 4
modules_ServoClient_internalSetAngle__P5271_args:
    cmp r4, #2
    bge modules_ServoClient_internalSetAngle__P5271_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_ServoClient_internalSetAngle__P5271_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_ServoClient_internalSetAngle__P5271:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C4477_validate_66
    mov lr, r7
modules_ServoClient_internalSetAngle__P5271_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_ServoClient_internalSetAngle__P5271_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1395:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_setEnabled__P4484_nochk
_proccall1396:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3531
_proccall1397:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_280      
.jmpz1398:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_values__P3532
_proccall1399:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_280:
.afterif_1_280:
.ret.5271:
    @stackempty locals
    movs r0, #0
.final_2_280:
    add sp, #4*1 ; pop locals 1
modules_ServoClient_internalSetAngle__P5271_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(185,9): modules.ServoClient.setEnabled
    ;
    .object modules_ServoClient_setEnabled__P4484 "jacdac-servo/client.ts(185,9): modules.ServoClient.setEnabled"
modules_ServoClient_setEnabled__P4484_pre:
    .section code
    .balign 4
modules_ServoClient_setEnabled__P4484_args:
    cmp r4, #2
    bge modules_ServoClient_setEnabled__P4484_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_ServoClient_setEnabled__P4484_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_ServoClient_setEnabled__P4484:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C4477_validate_66
    mov lr, r7
modules_ServoClient_setEnabled__P4484_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_ServoClient_setEnabled__P4484_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1400:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3531
_proccall1401:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    bne .jmpz1402
    b .else_0_281      
.object PUSH
.balign 4
_ldlit_364:
 .word 122881
_ldlit_365:
 .word 900016133
_ldlit_366:
 .word _str239
_ldlit_367:
 .word _str140
.object POP
.jmpz1402:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_281      
.jmpz1403:
    movs r0, #3
    b .condexprfin_2_281      
.condexprz_1_281:
    movs r0, #1
.condexprfin_2_281:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_values__P3532
_proccall1404:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_281:
.afterif_3_281:
.ret.4484:
    @stackempty locals
    movs r0, #0
.final_4_281:
    add sp, #4*1 ; pop locals 1
modules_ServoClient_setEnabled__P4484_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(226,9): modules.ServoClient.minAngle
    ;
    .object modules_ServoClient_minAngle__P4487 "jacdac-servo/client.ts(226,9): modules.ServoClient.minAngle"
modules_ServoClient_minAngle__P4487_pre:
    .section code
    .balign 4
modules_ServoClient_minAngle__P4487_args:
    cmp r4, #1
    bge modules_ServoClient_minAngle__P4487_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_ServoClient_minAngle__P4487_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_ServoClient_minAngle__P4487:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C4477_validate_66
    mov lr, r7
modules_ServoClient_minAngle__P4487_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_ServoClient_minAngle__P4487_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1405:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #108]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall1406:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.4487:
    @stackempty locals
.final_0_282:
    add sp, #4*1 ; pop locals 1
modules_ServoClient_minAngle__P4487_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(49,9): machine.MicrobitMachine.onControlEvent
    ;
    .object machine_MicrobitMachine_onControlEvent__P5438 "runtime.ts(49,9): machine.MicrobitMachine.onControlEvent"
machine_MicrobitMachine_onControlEvent__P5438_pre:
    .section code
    .balign 4
machine_MicrobitMachine_onControlEvent__P5438_args:
    cmp r4, #5
    bge machine_MicrobitMachine_onControlEvent__P5438_nochk
    push {lr}
    bl _expand_args_5_51
    bl machine_MicrobitMachine_onControlEvent__P5438_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
machine_MicrobitMachine_onControlEvent__P5438:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_machine_MicrobitMachine__C5435_validate_6
    mov lr, r7
machine_MicrobitMachine_onControlEvent__P5438_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
machine_MicrobitMachine_onControlEvent__P5438_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_369 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_listenerCount__P3628_nochk
_proccall1408:
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    bl _cmp_eq
    beq .else_0_283      
.jmpz1407:
    movs r0, #2
    ldr r1, _ldlit_370 ; machine_MicrobitMachine_onControlEvent_inline__P11463_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_60
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_0_283:
.afterif_1_283:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl machine_MicrobitMachine_onClient__P5437_nochk
_proccall1409:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.5438:
    @stackempty locals
    movs r0, #0
.final_2_283:
    add sp, #4*1 ; pop locals 1
machine_MicrobitMachine_onControlEvent__P5438_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(57,45): machine.MicrobitMachine.onControlEvent.inline
    ;
    .object machine_MicrobitMachine_onControlEvent_inline__P11463 "runtime.ts(57,45): machine.MicrobitMachine.onControlEvent.inline"
machine_MicrobitMachine_onControlEvent_inline__P11463_pre:
    .section code
    .balign 4
machine_MicrobitMachine_onControlEvent_inline__P11463_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_MicrobitMachine_onControlEvent_inline__P11463_args@fn
machine_MicrobitMachine_onControlEvent_inline__P11463_args:
    .section code
machine_MicrobitMachine_onControlEvent_inline__P11463:
machine_MicrobitMachine_onControlEvent_inline__P11463_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_MicrobitMachine_onControlEvent_inline__P11463_locals:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall1410:
    add sp, #4*3 ; pop locals 3
.ret.11463:
    @stackempty locals
.final_0_284:
machine_MicrobitMachine_onControlEvent_inline__P11463_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(112,9): jacdac.EventSource.listenerCount
    ;
    .object jacdac_EventSource_listenerCount__P3628 "jacdac/eventsource.ts(112,9): jacdac.EventSource.listenerCount"
jacdac_EventSource_listenerCount__P3628_pre:
    .section code
    .balign 4
jacdac_EventSource_listenerCount__P3628_args:
    cmp r4, #2
    bge jacdac_EventSource_listenerCount__P3628_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_EventSource_listenerCount__P3628_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_EventSource_listenerCount__P3628:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3622_validate_49
    mov lr, r7
jacdac_EventSource_listenerCount__P3628_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_EventSource_listenerCount__P3628_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_285      
.jmpz1411:
    movs r0, #1
    b .ret.3628      
.else_0_285:
.afterif_1_285:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.11479:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.11479      
.jmpz1412:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_EventListener__C3619_validate_67
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_2_285      
.jmpz1413:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.else_2_285:
.afterif_3_285:
.cont.11479:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.11479      
.brk.11479:
    movs r0, #0
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@0]
.ret.3628:
    @stackempty locals
.final_4_285:
    add sp, #4*4 ; pop locals 4
jacdac_EventSource_listenerCount__P3628_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_369:
 .word _str89
_ldlit_370:
 .word machine_MicrobitMachine_onControlEvent_inline__P11463_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(21,9): modules.ServoClient.constructor
    ;
    .object modules_ServoClient_constructor__P4478 "jacdac-servo/client.ts(21,9): modules.ServoClient.constructor"
modules_ServoClient_constructor__P4478_pre:
    .section code
    .balign 4
    .section code
modules_ServoClient_constructor__P4478:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C4477_validate_66
    mov lr, r7
modules_ServoClient_constructor__P4478_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ServoClient_constructor__P4478_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    ldr r0, [sp, args@0]
    movs r1, #0
    movs r3, #132
    str r1, [r0, r3]
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_372 ; 637084167      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_constructor__P3271
_proccall1414:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1415:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #248
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1416:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #100]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #252
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1417:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1418:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #108]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #65
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1419:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #112]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #33
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #35
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1420:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #67
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1421:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #120]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #17
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1422:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #124]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #69
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1423:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    movs r3, #128
    str r1, [r0, r3]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_373 ; modules_ServoClient_inline__P11578_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #140
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624_nochk
_proccall1424:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.4478:
    @stackempty locals
.final_0_286:
modules_ServoClient_constructor__P4478_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(69,37): modules.ServoClient.inline
    ;
    .object modules_ServoClient_inline__P11578 "jacdac-servo/client.ts(69,37): modules.ServoClient.inline"
modules_ServoClient_inline__P11578_pre:
    .section code
    .balign 4
modules_ServoClient_inline__P11578_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word modules_ServoClient_inline__P11578_args@fn
modules_ServoClient_inline__P11578_args:
    .section code
modules_ServoClient_inline__P11578:
modules_ServoClient_inline__P11578_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ServoClient_inline__P11578_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #108]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_query__P3529
_proccall1425:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #116]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_query__P3529
_proccall1426:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.11578:
    @stackempty locals
    movs r0, #0
.final_0_287:
modules_ServoClient_inline__P11578_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-rotary-encoder/client.ts(77,9): modules.RotaryEncoderClient.onPositionChanged
    ;
    .object modules_RotaryEncoderClient_onPositionChanged__P4448 "jacdac-rotary-encoder/client.ts(77,9): modules.RotaryEncoderClient.onPositionChanged"
modules_RotaryEncoderClient_onPositionChanged__P4448_pre:
    .section code
    .balign 4
modules_RotaryEncoderClient_onPositionChanged__P4448_args:
    cmp r4, #2
    bge modules_RotaryEncoderClient_onPositionChanged__P4448_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_RotaryEncoderClient_onPositionChanged__P4448_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_RotaryEncoderClient_onPositionChanged__P4448:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_RotaryEncoderClient__C4443_validate_68
    mov lr, r7
modules_RotaryEncoderClient_onPositionChanged__P4448_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_RotaryEncoderClient_onPositionChanged__P4448_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_onReadingChangedBy__P3274_nochk
_proccall1427:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4448:
    @stackempty locals
    movs r0, #0
.final_0_288:
modules_RotaryEncoderClient_onPositionChanged__P4448_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-rotary-encoder/client.ts(10,9): modules.RotaryEncoderClient.constructor
    ;
    .object modules_RotaryEncoderClient_constructor__P4444 "jacdac-rotary-encoder/client.ts(10,9): modules.RotaryEncoderClient.constructor"
modules_RotaryEncoderClient_constructor__P4444_pre:
    .section code
    .balign 4
    .section code
modules_RotaryEncoderClient_constructor__P4444:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_RotaryEncoderClient__C4443_validate_68
    mov lr, r7
modules_RotaryEncoderClient_constructor__P4444_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_RotaryEncoderClient_constructor__P4444_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    movs r0, #35
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_374 ; 569660307      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_constructor__P3271
_proccall1428:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #71
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1429:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #9
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1430:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #100]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4444:
    @stackempty locals
.final_0_289:
modules_RotaryEncoderClient_constructor__P4444_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_372:
 .word 637084167
_ldlit_373:
 .word modules_ServoClient_inline__P11578_Lit
_ldlit_374:
 .word 569660307
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(521,5): music.stopAllSounds
    ;
    .object music_stopAllSounds__P2559 "core/music.ts(521,5): music.stopAllSounds"
music_stopAllSounds__P2559_pre:
    .section code
    .balign 4
    .section code
music_stopAllSounds__P2559:
music_stopAllSounds__P2559_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
music_stopAllSounds__P2559_locals:
    movs r0, #1
    push {r0} ; proc-arg
    bl music_rest__P2541
_proccall1431:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #11
    push {r0} ; proc-arg
    bl music_stopMelody__P2557
_proccall1432:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl music::__stopSoundExpressions
    @stackempty locals
    bl music__stopPlayables__P2818
_proccall1433:
    @stackempty locals
    movs r0, #73
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_290      
.jmpz1434:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #73
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.11625:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.11625      
.jmpz1435:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _lambda_call0_0
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.11625:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.11625      
.brk.11625:
    movs r0, #0
    str r0, [sp, locals@1]
.else_0_290:
.afterif_1_290:
.ret.2559:
    @stackempty locals
    movs r0, #0
.final_2_290:
    add sp, #4*3 ; pop locals 3
music_stopAllSounds__P2559_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/playable.ts(135,5): music._stopPlayables
    ;
    .object music__stopPlayables__P2818 "core/playable.ts(135,5): music._stopPlayables"
music__stopPlayables__P2818_pre:
    .section code
    .balign 4
    .section code
music__stopPlayables__P2818:
music__stopPlayables__P2818_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
music__stopPlayables__P2818_locals:
    movs r0, #37
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_291      
.jmpz1437:
    b .ret.2818      
.else_0_291:
.afterif_1_291:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #37
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.11631:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.11631      
.jmpz1438:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    movs r1, #66
    bl _inst_music_Playable__C2803_validate_69
    str r1, [r0, #4]
    @stackempty locals
.cont.11631:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.11631      
.brk.11631:
    movs r0, #0
    str r0, [sp, locals@1]
    movs r0, #0
    movs r1, #37
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.2818:
    @stackempty locals
    movs r0, #0
.final_2_291:
    add sp, #4*3 ; pop locals 3
music__stopPlayables__P2818_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(500,5): music.stopMelody
    ;
    .object music_stopMelody__P2557 "core/music.ts(500,5): music.stopMelody"
music_stopMelody__P2557_pre:
    .section code
    .balign 4
    .section code
music_stopMelody__P2557:
music_stopMelody__P2557_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_stopMelody__P2557_locals:
    ldr r0, [sp, args@0]
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_292      
.jmpz1439:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    mov r3, r0
    movs r0, #9
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl music_startMelody__P2551
_proccall1440:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_292:
.afterif_1_292:
    ldr r0, [sp, args@0]
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_292      
.jmpz1441:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl music_startMelody__P2551
_proccall1442:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_292:
.afterif_3_292:
.ret.2557:
    @stackempty locals
    movs r0, #0
.final_4_292:
music_stopMelody__P2557_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(380,5): music.startMelody
    ;
    .object music_startMelody__P2551 "core/music.ts(380,5): music.startMelody"
music_startMelody__P2551_pre:
    .section code
    .balign 4
    .section code
music_startMelody__P2551:
music_startMelody__P2551_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_startMelody__P2551_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl music_startMelodyInternal__P2553
_proccall1443:
    add sp, #4*2 ; pop locals 2
.ret.2551:
    @stackempty locals
    movs r0, #0
.final_0_293:
music_startMelody__P2551_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(407,5): music.startMelodyInternal
    ;
    .object music_startMelodyInternal__P2553 "core/music.ts(407,5): music.startMelodyInternal"
music_startMelodyInternal__P2553_pre:
    .section code
    .balign 4
    .section code
music_startMelodyInternal__P2553:
music_startMelodyInternal__P2553_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
music_startMelodyInternal__P2553_locals:
    bl music_init__P4810
_proccall1444:
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #25
    bl _numops_ands
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #0
    bl _cmp_neq
    bne .jmpz1445
    b .else_0_294      
.jmpz1445:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_294      
.jmpz1446:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_294      
.lazySkip_3_294:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #24]
.lazy_2_294:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_294      
.jmpz1447:
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #19
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #6
    movs r1, #75
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #125
    lsls r0, r0, #4
    movs r1, #245
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    @stackempty locals
.else_1_294:
.afterif_4_294:
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_294      
.jmpz1448:
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #24]
    movs r1, #7
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #125
    lsls r0, r0, #4
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_5_294:
.afterif_6_294:
    ldr r0, _ldlit_376 ; music_Melody__C4815_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl music_Melody_constructor__P4818
_proccall1449:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #75
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #24]
    movs r1, #5
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #125
    lsls r0, r0, #4
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_7_294      
.else_0_294:
    ldr r0, _ldlit_376 ; music_Melody__C4815_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl music_Melody_constructor__P4818
_proccall1450:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    movs r1, #75
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #24]
    movs r1, #5
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #125
    lsls r0, r0, #4
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_377 ; music_startMelodyInternal_inline__P11717_Lit      
    push {r0} ; proc-arg
    bl _conv_71
    mov r7, sp
    str r7, [r6, #4]
    bl control::inBackground
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_7_294:
.ret.2553:
    @stackempty locals
    movs r0, #0
.final_8_294:
    add sp, #4*1 ; pop locals 1
music_startMelodyInternal__P2553_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(424,34): music.startMelodyInternal.inline
    ;
    .object music_startMelodyInternal_inline__P11717 "core/music.ts(424,34): music.startMelodyInternal.inline"
music_startMelodyInternal_inline__P11717_pre:
    .section code
    .balign 4
music_startMelodyInternal_inline__P11717_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word music_startMelodyInternal_inline__P11717_args@fn
music_startMelodyInternal_inline__P11717_args:
    .section code
music_startMelodyInternal_inline__P11717:
music_startMelodyInternal_inline__P11717_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_startMelodyInternal_inline__P11717_locals:
.cont.11718:
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl music_Melody_hasNextNote__P4816
_proccall1452:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.11718      
.jmpz1451:
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl music_playNextNote__P4814
_proccall1453:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl music_Melody_hasNextNote__P4816
_proccall1455:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_295      
.jmpz1454:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_295      
.lazySkip_2_295:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #19
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_1_295:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_295      
.jmpz1456:
    movs r0, #19
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #75
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #6
    movs r1, #19
    lsls r1, r1, #4
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #125
    lsls r0, r0, #4
    movs r1, #3
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    @stackempty locals
    movs r0, #125
    lsls r0, r0, #4
    movs r1, #246
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    @stackempty locals
    movs r0, #125
    lsls r0, r0, #4
    movs r1, #5
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    @stackempty locals
.else_0_295:
.afterif_3_295:
    b .cont.11718      
.brk.11718:
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #24]
    movs r1, #7
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #125
    lsls r0, r0, #4
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #75
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_295      
.jmpz1457:
    movs r0, #125
    lsls r0, r0, #4
    movs r1, #5
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    @stackempty locals
.else_4_295:
.afterif_5_295:
    movs r0, #6
    movs r1, #75
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.11717:
    @stackempty locals
    movs r0, #0
.final_6_295:
music_startMelodyInternal_inline__P11717_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(572,5): music.playNextNote
    ;
    .object music_playNextNote__P4814 "core/music.ts(572,5): music.playNextNote"
music_playNextNote__P4814_pre:
    .section code
    .balign 4
    .section code
music_playNextNote__P4814:
music_playNextNote__P4814_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
music_playNextNote__P4814_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl music_Melody_nextNote__P4817
_proccall1458:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #16]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #8]
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #12]
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #10
    str r0, [sp, locals@5]
    @stackempty locals
    movs r0, #66
    str r0, [sp, locals@7]
    @stackempty locals
    movs r0, #10
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@9]
    @stackempty locals
.fortop.11788:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1459
    b .brk.11788      
.jmpz1459:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0}; tmpstore @1
    mov r1, r0
    ldr r0, _ldlit_378 ; _str72      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1460
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_296      
.jmpz1460:
    ldr r0, _ldlit_379 ; _str73      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1461
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_296      
.jmpz1461:
    ldr r0, _ldlit_380 ; _str74      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1462
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_296      
.jmpz1462:
    ldr r0, _ldlit_381 ; _str75      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1463
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_296      
.jmpz1463:
    ldr r0, _ldlit_382 ; _str76      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1464
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_296      
.jmpz1464:
    ldr r0, _ldlit_383 ; _str77      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1465
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_296      
.jmpz1465:
    ldr r0, _ldlit_384 ; _str78      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1466
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_296      
.object PUSH
.balign 4
_ldlit_376:
 .word music_Melody__C4815_VT
_ldlit_377:
 .word music_startMelodyInternal_inline__P11717_Lit
_ldlit_378:
 .word _str72
_ldlit_379:
 .word _str73
_ldlit_380:
 .word _str74
_ldlit_381:
 .word _str75
_ldlit_382:
 .word _str76
_ldlit_383:
 .word _str77
_ldlit_384:
 .word _str78
.object POP
.jmpz1466:
    ldr r0, _ldlit_386 ; _str79      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1467
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_296      
.jmpz1467:
    ldr r0, _ldlit_387 ; _str80      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1468
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_8_296      
.jmpz1468:
    ldr r0, _ldlit_388 ; _str81      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1469
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_9_296      
.jmpz1469:
    ldr r0, _ldlit_389 ; _str82      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1470
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_10_296      
.jmpz1470:
    ldr r0, _ldlit_390 ; _str83      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1471
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_11_296      
.jmpz1471:
    ldr r0, _ldlit_391 ; _str84      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1472
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_12_296      
.jmpz1472:
    ldr r0, _ldlit_392 ; _str85      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1473
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_296      
.jmpz1473:
    ldr r0, _ldlit_393 ; _str86      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1474
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_14_296      
.jmpz1474:
    ldr r0, _ldlit_394 ; _str87      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1475
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_15_296      
.jmpz1475:
    ldr r0, _ldlit_395 ; _str88      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1476
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_16_296      
.jmpz1476:
    ldr r0, _ldlit_396 ; _str89      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1477
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_17_296      
.jmpz1477:
    pop {r0} ; tmpref @1
    b .switch_18_296      
.switch_0_296:
.switch_1_296:
    movs r0, #3
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #66
    str r0, [sp, locals@8]
    @stackempty locals
    b .brk.11797      
.switch_2_296:
.switch_3_296:
    movs r0, #7
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #66
    str r0, [sp, locals@8]
    @stackempty locals
    b .brk.11797      
.switch_4_296:
.switch_5_296:
    movs r0, #11
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #66
    str r0, [sp, locals@8]
    @stackempty locals
    b .brk.11797      
.switch_6_296:
.switch_7_296:
    movs r0, #13
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #66
    str r0, [sp, locals@8]
    @stackempty locals
    b .brk.11797      
.switch_8_296:
.switch_9_296:
    movs r0, #17
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #66
    str r0, [sp, locals@8]
    @stackempty locals
    b .brk.11797      
.switch_10_296:
.switch_11_296:
    movs r0, #21
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #66
    str r0, [sp, locals@8]
    @stackempty locals
    b .brk.11797      
.switch_12_296:
    movs r0, #25
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #66
    str r0, [sp, locals@8]
    @stackempty locals
    b .brk.11797      
.switch_13_296:
.switch_14_296:
    movs r0, #66
    str r0, [sp, locals@5]
    @stackempty locals
    movs r0, #10
    str r0, [sp, locals@8]
    @stackempty locals
    b .brk.11797      
.switch_15_296:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #10
    str r0, [sp, locals@8]
    @stackempty locals
    b .brk.11797      
.switch_16_296:
    ldr r0, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_19_296      
.jmpz1478:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@4]
    @stackempty locals
    b .afterif_20_296      
.else_19_296:
    movs r0, #25
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #66
    str r0, [sp, locals@8]
    @stackempty locals
.afterif_20_296:
    b .brk.11797      
.switch_17_296:
    movs r0, #10
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@9]
    str r0, [sp, locals@6]
    @stackempty locals
    movs r0, #10
    str r0, [sp, locals@8]
    @stackempty locals
    b .brk.11797      
.switch_18_296:
    movs r0, #10
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@7]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_21_296      
.jmpz1479:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl music_parseIntSimple__P4813
_proccall1480:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
.else_21_296:
.afterif_22_296:
.brk.11797:
.cont.11788:
    ldr r0, [sp, locals@9]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@9]
    @stackempty locals
    b .fortop.11788      
.brk.11788:
    ldr r0, [sp, locals@7]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_23_296      
.jmpz1481:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@6]
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl helpers_stringSubstr__P2010
_proccall1482:
    add sp, #4*3 ; pop locals 3
    push {r0} ; the one arg
    bl music_parseIntSimple__P4813
_proccall1483:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
.else_23_296:
.afterif_24_296:
    ldr r7, [r6, #0]
    ldr r0, [r7, #88]
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #234
    lsls r0, r0, #8
    adds r0, #96
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@11]
    @stackempty locals
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_25_296      
.jmpz1484:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl music_rest__P2541
_proccall1485:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_26_296      
.else_25_296:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl music_getFrequencyForNote__P2561
_proccall1486:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl music_playTone__P2539
_proccall1487:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_26_296:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@2]
    bl _inst_music_Melody__C4815_validate_70
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@3]
    bl _inst_music_Melody__C4815_validate_70
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_28_296      
.jmpz1488:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_27_296      
.lazySkip_28_296:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_27_296:
; jmp value (already in r0)
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_29_296      
.jmpz1489:
    movs r0, #1
    b .condexprfin_30_296      
.condexprz_29_296:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    b .condexprfin_30_296      
.object PUSH
.balign 4
_ldlit_386:
 .word _str79
_ldlit_387:
 .word _str80
_ldlit_388:
 .word _str81
_ldlit_389:
 .word _str82
_ldlit_390:
 .word _str83
_ldlit_391:
 .word _str84
_ldlit_392:
 .word _str85
_ldlit_393:
 .word _str86
_ldlit_394:
 .word _str87
_ldlit_395:
 .word _str88
_ldlit_396:
 .word _str89
.object POP
.condexprfin_30_296:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    bl _inst_music_Melody__C4815_validate_70
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #24]
    movs r1, #3
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #125
    lsls r0, r0, #4
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_31_296      
.jmpz1490:
    ldr r0, [sp, args@0]
    bl _inst_music_Melody__C4815_validate_70
    ldr r0, [r0, #24]
    movs r1, #9
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #125
    lsls r0, r0, #4
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_31_296:
.afterif_32_296:
.ret.4814:
    @stackempty locals
    movs r0, #0
.final_33_296:
    add sp, #4*13 ; pop locals 13
music_playNextNote__P4814_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(552,5): music.getFrequencyForNote
    ;
    .object music_getFrequencyForNote__P2561 "core/music.ts(552,5): music.getFrequencyForNote"
music_getFrequencyForNote__P2561_pre:
    .section code
    .balign 4
    .section code
music_getFrequencyForNote__P2561:
music_getFrequencyForNote__P2561_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_getFrequencyForNote__P2561_locals:
    movs r0, #77
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #25
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_297      
.jmpz1491:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_297      
.lazySkip_1_297:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_297:
; jmp value (already in r0)
.ret.2561:
    @stackempty locals
.final_2_297:
music_getFrequencyForNote__P2561_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(203,5): music.playTone
    ;
    .object music_playTone__P2539 "core/music.ts(203,5): music.playTone"
music_playTone__P2539_pre:
    .section code
    .balign 4
    .section code
music_playTone__P2539:
music_playTone__P2539_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_playTone__P2539_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1493:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_298      
.jmpz1492:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_298      
.lazySkip_2_298:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1494:
    add sp, #4*1 ; pop locals 1
.lazy_1_298:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_298      
.jmpz1495:
    b .ret.2539      
.else_0_298:
.afterif_3_298:
    movs r0, #39
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_298      
.jmpz1496:
    movs r0, #39
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_15
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_5_298      
.else_4_298:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_41
    mov r7, sp
    str r7, [r6, #4]
    bl pins::analogPitch
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_5_298:
.ret.2539:
    @stackempty locals
    movs r0, #0
.final_6_298:
music_playTone__P2539_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(562,5): music.parseIntSimple
    ;
    .object music_parseIntSimple__P4813 "core/music.ts(562,5): music.parseIntSimple"
music_parseIntSimple__P4813_pre:
    .section code
    .balign 4
    .section code
music_parseIntSimple__P4813:
music_parseIntSimple__P4813_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
music_parseIntSimple__P4813_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.11944:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.11944      
.jmpz1498:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    movs r1, #97
    bl _numops_subs
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_299      
.jmpz1499:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_299      
.lazySkip_2_299:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #19
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_299:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_299      
.jmpz1500:
    movs r0, #14
    b .ret.4813      
.else_0_299:
.afterif_3_299:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@2]
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.cont.11944:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.11944      
.brk.11944:
    ldr r0, [sp, locals@0]
.ret.4813:
    @stackempty locals
.final_4_299:
    add sp, #4*3 ; pop locals 3
music_parseIntSimple__P4813_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(644,9): music.Melody.nextNote
    ;
    .object music_Melody_nextNote__P4817 "core/music.ts(644,9): music.Melody.nextNote"
music_Melody_nextNote__P4817_pre:
    .section code
    .balign 4
music_Melody_nextNote__P4817_args:
    cmp r4, #1
    bge music_Melody_nextNote__P4817_nochk
    push {lr}
    bl _expand_args_1_5
    bl music_Melody_nextNote__P4817_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
music_Melody_nextNote__P4817:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_music_Melody__C4815_validate_70
    mov lr, r7
music_Melody_nextNote__P4817_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
music_Melody_nextNote__P4817_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.4817:
    @stackempty locals
.final_0_300:
    add sp, #4*1 ; pop locals 1
music_Melody_nextNote__P4817_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(640,9): music.Melody.hasNextNote
    ;
    .object music_Melody_hasNextNote__P4816 "core/music.ts(640,9): music.Melody.hasNextNote"
music_Melody_hasNextNote__P4816_pre:
    .section code
    .balign 4
music_Melody_hasNextNote__P4816_args:
    cmp r4, #1
    bge music_Melody_hasNextNote__P4816_nochk
    push {lr}
    bl _expand_args_1_5
    bl music_Melody_hasNextNote__P4816_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
music_Melody_hasNextNote__P4816:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_music_Melody__C4815_validate_70
    mov lr, r7
music_Melody_hasNextNote__P4816_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_Melody_hasNextNote__P4816_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_301      
.jmpz1501:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_301      
.lazySkip_1_301:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
.lazy_0_301:
; jmp value (already in r0)
.ret.4816:
    @stackempty locals
.final_2_301:
music_Melody_hasNextNote__P4816_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(631,9): music.Melody.constructor
    ;
    .object music_Melody_constructor__P4818 "core/music.ts(631,9): music.Melody.constructor"
music_Melody_constructor__P4818_pre:
    .section code
    .balign 4
    .section code
music_Melody_constructor__P4818:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_music_Melody__C4815_validate_70
    mov lr, r7
music_Melody_constructor__P4818_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_Melody_constructor__P4818_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    movs r1, #21
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #25
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_302      
.jmpz1502:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #225
    b .condexprfin_1_302      
.condexprz_0_302:
    movs r0, #1
.condexprfin_1_302:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #9
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #9
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    @stackempty locals
    movs r0, #0
.ret.4818:
    @stackempty locals
.final_2_302:
music_Melody_constructor__P4818_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(230,5): music.rest
    ;
    .object music_rest__P2541 "core/music.ts(230,5): music.rest"
music_rest__P2541_pre:
    .section code
    .balign 4
    .section code
music_rest__P2541:
music_rest__P2541_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_rest__P2541_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl music_playTone__P2539
_proccall1503:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2541:
    @stackempty locals
    movs r0, #0
.final_0_303:
music_rest__P2541_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/control.ts(16,5): control.runInBackground
    ;
    .object control_runInBackground__P2298 "core/control.ts(16,5): control.runInBackground"
control_runInBackground__P2298_pre:
    .section code
    .balign 4
    .section code
control_runInBackground__P2298:
control_runInBackground__P2298_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_runInBackground__P2298_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_71
    mov r7, sp
    str r7, [r6, #4]
    bl control::inBackground
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2298:
    @stackempty locals
    movs r0, #0
.final_0_304:
control_runInBackground__P2298_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-relay/client.g.ts(59,9): modules.RelayClient.setActive
    ;
    .object modules_RelayClient_setActive__P4428 "jacdac-relay/client.g.ts(59,9): modules.RelayClient.setActive"
modules_RelayClient_setActive__P4428_pre:
    .section code
    .balign 4
modules_RelayClient_setActive__P4428_args:
    cmp r4, #2
    bge modules_RelayClient_setActive__P4428_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_RelayClient_setActive__P4428_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_RelayClient_setActive__P4428:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_RelayClient__C4425_validate_72
    mov lr, r7
modules_RelayClient_setActive__P4428_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_RelayClient_setActive__P4428_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1504:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3531
_proccall1505:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_305      
.jmpz1506:
    movs r0, #3
    b .condexprfin_1_305      
.condexprz_0_305:
    movs r0, #1
.condexprfin_1_305:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_values__P3532
_proccall1507:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4428:
    @stackempty locals
    movs r0, #0
.final_2_305:
    add sp, #4*1 ; pop locals 1
modules_RelayClient_setActive__P4428_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-relay/client.g.ts(46,9): modules.RelayClient.active
    ;
    .object modules_RelayClient_active__P4427 "jacdac-relay/client.g.ts(46,9): modules.RelayClient.active"
modules_RelayClient_active__P4427_pre:
    .section code
    .balign 4
modules_RelayClient_active__P4427_args:
    cmp r4, #1
    bge modules_RelayClient_active__P4427_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_RelayClient_active__P4427_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_RelayClient_active__P4427:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_RelayClient__C4425_validate_72
    mov lr, r7
modules_RelayClient_active__P4427_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_RelayClient_active__P4427_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1508:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall1509:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.4427:
    @stackempty locals
.final_0_306:
    add sp, #4*1 ; pop locals 1
modules_RelayClient_active__P4427_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-relay/client.g.ts(17,9): modules.RelayClient.constructor
    ;
    .object modules_RelayClient_constructor__P4426 "jacdac-relay/client.g.ts(17,9): modules.RelayClient.constructor"
modules_RelayClient_constructor__P4426_pre:
    .section code
    .balign 4
    .section code
modules_RelayClient_constructor__P4426:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_RelayClient__C4425_validate_72
    mov lr, r7
modules_RelayClient_constructor__P4426_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_RelayClient_constructor__P4426_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_398 ; 813681837      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_constructor__P3550
_proccall1510:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #79
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1511:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #5
    lsls r0, r0, #6
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1512:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #64]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #81
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1513:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #68]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4426:
    @stackempty locals
.final_0_307:
modules_RelayClient_constructor__P4426_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-light-level/client.g.ts(40,9): modules.LightLevelClient.lightLevel
    ;
    .object modules_LightLevelClient_lightLevel__P4352 "jacdac-light-level/client.g.ts(40,9): modules.LightLevelClient.lightLevel"
modules_LightLevelClient_lightLevel__P4352_pre:
    .section code
    .balign 4
modules_LightLevelClient_lightLevel__P4352_args:
    cmp r4, #1
    bge modules_LightLevelClient_lightLevel__P4352_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_LightLevelClient_lightLevel__P4352_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_LightLevelClient_lightLevel__P4352:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LightLevelClient__C4350_validate_73
    mov lr, r7
modules_LightLevelClient_lightLevel__P4352_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_LightLevelClient_lightLevel__P4352_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_reading__P3273_nochk
_proccall1514:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
.ret.4352:
    @stackempty locals
.final_0_308:
modules_LightLevelClient_lightLevel__P4352_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-light-level/client.g.ts(78,9): modules.LightLevelClient.onLightLevelChangedBy
    ;
    .object modules_LightLevelClient_onLightLevelChangedBy__P4355 "jacdac-light-level/client.g.ts(78,9): modules.LightLevelClient.onLightLevelChangedBy"
modules_LightLevelClient_onLightLevelChangedBy__P4355_pre:
    .section code
    .balign 4
modules_LightLevelClient_onLightLevelChangedBy__P4355_args:
    cmp r4, #3
    bge modules_LightLevelClient_onLightLevelChangedBy__P4355_nochk
    push {lr}
    bl _expand_args_3_7
    bl modules_LightLevelClient_onLightLevelChangedBy__P4355_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
modules_LightLevelClient_onLightLevelChangedBy__P4355:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LightLevelClient__C4350_validate_73
    mov lr, r7
modules_LightLevelClient_onLightLevelChangedBy__P4355_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_LightLevelClient_onLightLevelChangedBy__P4355_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_SimpleSensorClient_onReadingChangedBy__P3274_nochk
_proccall1515:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4355:
    @stackempty locals
    movs r0, #0
.final_0_309:
modules_LightLevelClient_onLightLevelChangedBy__P4355_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-light-level/client.g.ts(12,9): modules.LightLevelClient.constructor
    ;
    .object modules_LightLevelClient_constructor__P4351 "jacdac-light-level/client.g.ts(12,9): modules.LightLevelClient.constructor"
modules_LightLevelClient_constructor__P4351_pre:
    .section code
    .balign 4
    .section code
modules_LightLevelClient_constructor__P4351:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LightLevelClient__C4350_validate_73
    mov lr, r7
modules_LightLevelClient_constructor__P4351_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_LightLevelClient_constructor__P4351_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    movs r0, #41
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_399 ; 800666681      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_constructor__P3271
_proccall1516:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #83
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #13
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1517:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #21
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1518:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #100]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4351:
    @stackempty locals
.final_0_310:
modules_LightLevelClient_constructor__P4351_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-magnetic-field-level/client.g.ts(42,9): modules.MagneticFieldLevelClient.strength
    ;
    .object modules_MagneticFieldLevelClient_strength__P4381 "jacdac-magnetic-field-level/client.g.ts(42,9): modules.MagneticFieldLevelClient.strength"
modules_MagneticFieldLevelClient_strength__P4381_pre:
    .section code
    .balign 4
modules_MagneticFieldLevelClient_strength__P4381_args:
    cmp r4, #1
    bge modules_MagneticFieldLevelClient_strength__P4381_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_MagneticFieldLevelClient_strength__P4381_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_MagneticFieldLevelClient_strength__P4381:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_MagneticFieldLevelClient__C4379_validate_74
    mov lr, r7
modules_MagneticFieldLevelClient_strength__P4381_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_MagneticFieldLevelClient_strength__P4381_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_reading__P3273_nochk
_proccall1519:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
.ret.4381:
    @stackempty locals
.final_0_311:
modules_MagneticFieldLevelClient_strength__P4381_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-magnetic-field-level/client.g.ts(81,9): modules.MagneticFieldLevelClient.onStrengthChangedBy
    ;
    .object modules_MagneticFieldLevelClient_onStrengthChangedBy__P4384 "jacdac-magnetic-field-level/client.g.ts(81,9): modules.MagneticFieldLevelClient.onStrengthChangedBy"
modules_MagneticFieldLevelClient_onStrengthChangedBy__P4384_pre:
    .section code
    .balign 4
modules_MagneticFieldLevelClient_onStrengthChangedBy__P4384_args:
    cmp r4, #3
    bge modules_MagneticFieldLevelClient_onStrengthChangedBy__P4384_nochk
    push {lr}
    bl _expand_args_3_7
    bl modules_MagneticFieldLevelClient_onStrengthChangedBy__P4384_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
modules_MagneticFieldLevelClient_onStrengthChangedBy__P4384:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_MagneticFieldLevelClient__C4379_validate_74
    mov lr, r7
modules_MagneticFieldLevelClient_onStrengthChangedBy__P4384_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_MagneticFieldLevelClient_onStrengthChangedBy__P4384_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_SimpleSensorClient_onReadingChangedBy__P3274_nochk
_proccall1520:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4384:
    @stackempty locals
    movs r0, #0
.final_0_312:
modules_MagneticFieldLevelClient_onStrengthChangedBy__P4384_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-magnetic-field-level/client.g.ts(11,9): modules.MagneticFieldLevelClient.constructor
    ;
    .object modules_MagneticFieldLevelClient_constructor__P4380 "jacdac-magnetic-field-level/client.g.ts(11,9): modules.MagneticFieldLevelClient.constructor"
modules_MagneticFieldLevelClient_constructor__P4380_pre:
    .section code
    .balign 4
    .section code
modules_MagneticFieldLevelClient_constructor__P4380:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_MagneticFieldLevelClient__C4379_validate_74
    mov lr, r7
modules_MagneticFieldLevelClient_constructor__P4380_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_MagneticFieldLevelClient_constructor__P4380_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    movs r0, #85
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_400 ; 637284383      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_constructor__P3271
_proccall1521:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #43
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1522:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
    b .ret.4380      
.object PUSH
.balign 4
_ldlit_398:
 .word 813681837
_ldlit_399:
 .word 800666681
_ldlit_400:
 .word 637284383
.object POP
.ret.4380:
    @stackempty locals
.final_0_313:
modules_MagneticFieldLevelClient_constructor__P4380_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(76,9): jacdac.EventSource.emit
    ;
    .object jacdac_EventSource_emit__P3626 "jacdac/eventsource.ts(76,9): jacdac.EventSource.emit"
jacdac_EventSource_emit__P3626_pre:
    .section code
    .balign 4
jacdac_EventSource_emit__P3626_args:
    cmp r4, #3
    bge jacdac_EventSource_emit__P3626_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_EventSource_emit__P3626_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_EventSource_emit__P3626:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3622_validate_49
    mov lr, r7
jacdac_EventSource_emit__P3626_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_EventSource_emit__P3626_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_314      
.jmpz1523:
    movs r0, #10
    b .ret.3626      
.else_0_314:
.afterif_1_314:
    movs r0, #10
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.12165:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12165      
.jmpz1524:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_EventListener__C3619_validate_67
    ldr r0, [r0, #4]
    movs r1, #87
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _cmp_eq
    beq .else_2_314      
.jmpz1525:
    movs r0, #66
    str r0, [sp, locals@0]
    @stackempty locals
.else_2_314:
.afterif_3_314:
.cont.12165:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.12165      
.brk.12165:
    movs r0, #0
    str r0, [sp, locals@2]
    movs r0, #0
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@5]
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.12174:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12174      
.jmpz1526:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_EventListener__C3619_validate_67
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_4_314      
.jmpz1527:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_EventListener__C3619_validate_67
    ldr r0, [r0, #8]
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_314      
.jmpz1528:
    ldr r0, _ldlit_402 ; _catch_12183      
    bl _pxt_save_exception_state
    @stackempty locals
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_63
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    b .catchend_8_314      
_catch_12183:
    movs r0, #0
    str r0, [sp, locals@8]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getThrownValue
    str r0, [sp, locals@8]
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    movs r0, #87
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall1530:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.catchend_8_314:
    b .afterif_9_314      
.else_5_314:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_63
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_9_314:
.else_4_314:
.afterif_10_314:
.cont.12174:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    b .fortop.12174      
.brk.12174:
    movs r0, #0
    str r0, [sp, locals@5]
    movs r0, #66
.ret.3626:
    @stackempty locals
.final_11_314:
    add sp, #4*9 ; pop locals 9
jacdac_EventSource_emit__P3626_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function sonify.ts(38,5): machine.plot
    ;
    .object machine_plot__P4695 "sonify.ts(38,5): machine.plot"
machine_plot__P4695_pre:
    .section code
    .balign 4
    .section code
machine_plot__P4695:
machine_plot__P4695_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_plot__P4695_locals:
    movs r0, #14
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl led_plotBarGraph__P2455
_proccall1532:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl machine_sonify__P6239
_proccall1533:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4695:
    @stackempty locals
    movs r0, #0
.final_0_315:
machine_plot__P4695_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function sonify.ts(31,5): machine.sonify
    ;
    .object machine_sonify__P6239 "sonify.ts(31,5): machine.sonify"
machine_sonify__P6239_pre:
    .section code
    .balign 4
    .section code
machine_sonify__P6239:
machine_sonify__P6239_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
machine_sonify__P6239_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_abs__P2020
_proccall1534:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    movs r0, #78
    lsls r0, r0, #8
    adds r0, #33
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_map__P10
_proccall1535:
    add sp, #4*5 ; pop locals 5
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_sign__P2021
_proccall1536:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl machine_scheduleTone__P4694
_proccall1537:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.6239:
    @stackempty locals
    movs r0, #0
.final_0_316:
    add sp, #4*1 ; pop locals 1
machine_sonify__P6239_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(548,5): Math.sign
    ;
    .object Math_sign__P2021 "core/pxt-helpers.ts(548,5): Math.sign"
Math_sign__P2021_pre:
    .section code
    .balign 4
    .section code
Math_sign__P2021:
Math_sign__P2021_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_sign__P2021_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_eq
    beq .else_0_317      
.jmpz1538:
    movs r0, #1
    b .ret.2021      
.else_0_317:
.afterif_1_317:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_gt
    beq .else_2_317      
.jmpz1539:
    movs r0, #3
    b .ret.2021      
.else_2_317:
.afterif_3_317:
    movs r0, #1
    negs r0, r0
.ret.2021:
    @stackempty locals
.final_4_317:
Math_sign__P2021_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/math.ts(23,5): Math.map
    ;
    .object Math_map__P10 "core/math.ts(23,5): Math.map"
Math_map__P10_pre:
    .section code
    .balign 4
    .section code
Math_map__P10:
Math_map__P10_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_map__P10_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    ldr r1, [sp, args@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@3]
    bl _numops_adds
.ret.10:
    @stackempty locals
.final_0_318:
Math_map__P10_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/led.ts(42,5): led.plotBarGraph
    ;
    .object led_plotBarGraph__P2455 "core/led.ts(42,5): led.plotBarGraph"
led_plotBarGraph__P2455_pre:
    .section code
    .balign 4
    .section code
led_plotBarGraph__P2455:
led_plotBarGraph__P2455_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
led_plotBarGraph__P2455_locals:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eq
    beq .else_0_319      
.jmpz1540:
    movs r0, #11
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, args@2]
    @stackempty locals
.else_0_319:
.afterif_1_319:
    bl input_runningTime__P2294
_proccall1541:
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_319      
.jmpz1542:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    mov r3, r0
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl console_logValue__P2384
_proccall1543:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_319:
.afterif_3_319:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1545:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_319      
.jmpz1544:
    mov r7, sp
    str r7, [r6, #4]
    bl basic::clearScreen
    @stackempty locals
    b .ret.2455      
.else_4_319:
.afterif_5_319:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_abs__P2020
_proccall1546:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_gt
    beq .else_6_319      
.jmpz1547:
    ldr r0, [sp, args@1]
    movs r1, #89
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    b .afterif_7_319      
.else_6_319:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_319      
.jmpz1548:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_319      
.lazySkip_10_319:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    movs r1, #45
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #78
    lsls r1, r1, #8
    adds r1, #33
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_9_319:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_319      
.jmpz1549:
    ldr r0, [sp, args@0]
    movs r1, #89
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #45
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_8_319:
.afterif_11_319:
.afterif_7_319:
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    ldr r1, _ldlit_403 ; _dbl69      
    bl _cmp_lt
    beq .else_12_319      
.jmpz1550:
    movs r0, #3
    movs r1, #89
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_12_319:
.afterif_13_319:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #89
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #9
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.12300:
    ldr r0, [sp, locals@3]
    movs r1, #1
    bl _cmp_ge
    beq .brk.12300      
.jmpz1551:
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.12303:
    ldr r0, [sp, locals@4]
    movs r1, #7
    bl _cmp_lt
    beq .brk.12303      
.jmpz1552:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    bne .jmpz1553
    b .else_14_319      
.object PUSH
.balign 4
_ldlit_402:
 .word _catch_12183
_ldlit_403:
 .word _dbl69
.object POP
.jmpz1553:
    movs r0, #5
    ldr r1, [sp, locals@4]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_41
    mov r7, sp
    str r7, [r6, #4]
    bl led::unplot
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #5
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_41
    mov r7, sp
    str r7, [r6, #4]
    bl led::unplot
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_15_319      
.else_14_319:
    movs r0, #5
    ldr r1, [sp, locals@4]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_41
    mov r7, sp
    str r7, [r6, #4]
    bl led::plot
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #5
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_41
    mov r7, sp
    str r7, [r6, #4]
    bl led::plot
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_15_319:
    ldr r0, [sp, locals@2]
    ldr r1, _ldlit_405 ; _dbl70      
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.cont.12303:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    b .fortop.12303      
.brk.12303:
.cont.12300:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@3]
    @stackempty locals
    b .fortop.12300      
.brk.12300:
.ret.2455:
    @stackempty locals
    movs r0, #0
.final_16_319:
    add sp, #4*5 ; pop locals 5
led_plotBarGraph__P2455_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(67,5): console.logValue
    ;
    .object console_logValue__P2384 "core/console.ts(67,5): console.logValue"
console_logValue__P2384_pre:
    .section code
    .balign 4
    .section code
console_logValue__P2384:
console_logValue__P2384_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_logValue__P2384_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_320      
.jmpz1554:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl console_inspect__P2385
_proccall1555:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_406 ; _str59      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl console_inspect__P2385
_proccall1556:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_320      
.condexprz_0_320:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl console_inspect__P2385
_proccall1557:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
.condexprfin_1_320:
; jmp value (already in r0)
    push {r0} ; proc-arg
    bl console_log__P2383
_proccall1558:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2384:
    @stackempty locals
    movs r0, #0
.final_2_320:
console_logValue__P2384_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(56,5): console.log
    ;
    .object console_log__P2383 "core/console.ts(56,5): console.log"
console_log__P2383_pre:
    .section code
    .balign 4
    .section code
console_log__P2383:
console_log__P2383_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_log__P2383_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    bl console_add__P2379
_proccall1559:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2383:
    @stackempty locals
    movs r0, #0
.final_0_321:
console_log__P2383_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/input.ts(67,5): input.runningTime
    ;
    .object input_runningTime__P2294 "core/input.ts(67,5): input.runningTime"
input_runningTime__P2294_pre:
    .section code
    .balign 4
    .section code
input_runningTime__P2294:
input_runningTime__P2294_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
input_runningTime__P2294_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
.ret.2294:
    @stackempty locals
.final_0_322:
input_runningTime__P2294_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-potentiometer/client.g.ts(34,9): modules.PotentiometerClient.position
    ;
    .object modules_PotentiometerClient_position__P4405 "jacdac-potentiometer/client.g.ts(34,9): modules.PotentiometerClient.position"
modules_PotentiometerClient_position__P4405_pre:
    .section code
    .balign 4
modules_PotentiometerClient_position__P4405_args:
    cmp r4, #1
    bge modules_PotentiometerClient_position__P4405_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_PotentiometerClient_position__P4405_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_PotentiometerClient_position__P4405:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_PotentiometerClient__C4403_validate_75
    mov lr, r7
modules_PotentiometerClient_position__P4405_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_PotentiometerClient_position__P4405_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_reading__P3273_nochk
_proccall1560:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
.ret.4405:
    @stackempty locals
.final_0_323:
modules_PotentiometerClient_position__P4405_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-potentiometer/client.g.ts(60,9): modules.PotentiometerClient.onPositionChangedBy
    ;
    .object modules_PotentiometerClient_onPositionChangedBy__P4407 "jacdac-potentiometer/client.g.ts(60,9): modules.PotentiometerClient.onPositionChangedBy"
modules_PotentiometerClient_onPositionChangedBy__P4407_pre:
    .section code
    .balign 4
modules_PotentiometerClient_onPositionChangedBy__P4407_args:
    cmp r4, #3
    bge modules_PotentiometerClient_onPositionChangedBy__P4407_nochk
    push {lr}
    bl _expand_args_3_7
    bl modules_PotentiometerClient_onPositionChangedBy__P4407_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
modules_PotentiometerClient_onPositionChangedBy__P4407:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_PotentiometerClient__C4403_validate_75
    mov lr, r7
modules_PotentiometerClient_onPositionChangedBy__P4407_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_PotentiometerClient_onPositionChangedBy__P4407_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_SimpleSensorClient_onReadingChangedBy__P3274_nochk
_proccall1561:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4407:
    @stackempty locals
    movs r0, #0
.final_0_324:
modules_PotentiometerClient_onPositionChangedBy__P4407_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-potentiometer/client.g.ts(11,9): modules.PotentiometerClient.constructor
    ;
    .object modules_PotentiometerClient_constructor__P4404 "jacdac-potentiometer/client.g.ts(11,9): modules.PotentiometerClient.constructor"
modules_PotentiometerClient_constructor__P4404_pre:
    .section code
    .balign 4
    .section code
modules_PotentiometerClient_constructor__P4404:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_PotentiometerClient__C4403_validate_75
    mov lr, r7
modules_PotentiometerClient_constructor__P4404_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_PotentiometerClient_constructor__P4404_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    movs r0, #91
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_407 ; 1045335693      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_constructor__P3271
_proccall1562:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #23
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1563:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4404:
    @stackempty locals
.final_0_325:
modules_PotentiometerClient_constructor__P4404_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(569,5): Math.min
    ;
    .object Math_min__P2023 "core/pxt-helpers.ts(569,5): Math.min"
Math_min__P2023_pre:
    .section code
    .balign 4
    .section code
Math_min__P2023:
Math_min__P2023_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_min__P2023_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_le
    beq .else_0_326      
.jmpz1564:
    ldr r0, [sp, args@0]
    b .ret.2023      
.else_0_326:
.afterif_1_326:
    ldr r0, [sp, args@1]
.ret.2023:
    @stackempty locals
.final_2_326:
Math_min__P2023_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(326,9): modules.LedClient.setPixelColor
    ;
    .object modules_LedClient_setPixelColor__P4254 "jacdac-led/client.ts(326,9): modules.LedClient.setPixelColor"
modules_LedClient_setPixelColor__P4254_pre:
    .section code
    .balign 4
modules_LedClient_setPixelColor__P4254_args:
    cmp r4, #3
    bge modules_LedClient_setPixelColor__P4254_nochk
    push {lr}
    bl _expand_args_3_7
    bl modules_LedClient_setPixelColor__P4254_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
modules_LedClient_setPixelColor__P4254:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LedClient__C4237_validate_76
    mov lr, r7
modules_LedClient_setPixelColor__P4254_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
modules_LedClient_setPixelColor__P4254_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_327      
.jmpz1565:
    b .ret.4254      
.else_0_327:
.afterif_1_327:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_327      
.jmpz1566:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_327      
.lazySkip_4_327:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
    b .lazy_3_327      
.object PUSH
.balign 4
_ldlit_405:
 .word _dbl70
_ldlit_406:
 .word _str59
_ldlit_407:
 .word 1045335693
.object POP
.lazy_3_327:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1567
    b .else_2_327      
.jmpz1567:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #33
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_327      
.jmpz1568:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_327      
.lazySkip_7_327:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
.lazy_6_327:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_9_327      
.jmpz1569:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_327      
.lazySkip_9_327:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
.lazy_8_327:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_327      
.jmpz1570:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_47
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_47
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    movs r1, #5
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_47
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_LedClient_setDirty__P5196_nochk
_proccall1571:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_5_327:
.afterif_10_327:
.else_2_327:
.afterif_11_327:
.ret.4254:
    @stackempty locals
    movs r0, #0
.final_12_327:
    add sp, #4*5 ; pop locals 5
modules_LedClient_setPixelColor__P4254_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(283,9): modules.LedClient.setDirty
    ;
    .object modules_LedClient_setDirty__P5196 "jacdac-led/client.ts(283,9): modules.LedClient.setDirty"
modules_LedClient_setDirty__P5196_pre:
    .section code
    .balign 4
modules_LedClient_setDirty__P5196_args:
    cmp r4, #1
    bge modules_LedClient_setDirty__P5196_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_LedClient_setDirty__P5196_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_LedClient_setDirty__P5196:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LedClient__C4237_validate_76
    mov lr, r7
modules_LedClient_setDirty__P5196_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_LedClient_setDirty__P5196_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_328      
.jmpz1572:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #60]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_328      
.jmpz1573:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_LedClient_startAutoShow__P5194_nochk
_proccall1574:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_1_328:
.afterif_2_328:
.else_0_328:
.afterif_3_328:
.ret.5196:
    @stackempty locals
    movs r0, #0
.final_4_328:
modules_LedClient_setDirty__P5196_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(270,9): modules.LedClient.startAutoShow
    ;
    .object modules_LedClient_startAutoShow__P5194 "jacdac-led/client.ts(270,9): modules.LedClient.startAutoShow"
modules_LedClient_startAutoShow__P5194_pre:
    .section code
    .balign 4
modules_LedClient_startAutoShow__P5194_args:
    cmp r4, #1
    bge modules_LedClient_startAutoShow__P5194_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_LedClient_startAutoShow__P5194_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_LedClient_startAutoShow__P5194:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LedClient__C4237_validate_76
    mov lr, r7
modules_LedClient_startAutoShow__P5194_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_LedClient_startAutoShow__P5194_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_329      
.jmpz1575:
    b .ret.5194      
.else_0_329:
.afterif_1_329:
    movs r0, #1
    ldr r1, _ldlit_409 ; modules_LedClient_startAutoShow_inline__P12502_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_subscribeRefresh__P3476
_proccall1576:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #72]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_410 ; modules_LedClient_startAutoShow_inline__P12506_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624_nochk
_proccall1577:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_LedClient_show__P4253_nochk
_proccall1578:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5194:
    @stackempty locals
    movs r0, #0
.final_2_329:
modules_LedClient_startAutoShow__P5194_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(272,63): modules.LedClient.startAutoShow.inline
    ;
    .object modules_LedClient_startAutoShow_inline__P12502 "jacdac-led/client.ts(272,63): modules.LedClient.startAutoShow.inline"
modules_LedClient_startAutoShow_inline__P12502_pre:
    .section code
    .balign 4
modules_LedClient_startAutoShow_inline__P12502_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word modules_LedClient_startAutoShow_inline__P12502_args@fn
modules_LedClient_startAutoShow_inline__P12502_args:
    .section code
modules_LedClient_startAutoShow_inline__P12502:
modules_LedClient_startAutoShow_inline__P12502_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_LedClient_startAutoShow_inline__P12502_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_LedClient_refresh__P5197_nochk
_proccall1579:
    add sp, #4*1 ; pop locals 1
.ret.12502:
    @stackempty locals
    movs r0, #0
.final_0_330:
modules_LedClient_startAutoShow_inline__P12502_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(275,40): modules.LedClient.startAutoShow.inline
    ;
    .object modules_LedClient_startAutoShow_inline__P12506 "jacdac-led/client.ts(275,40): modules.LedClient.startAutoShow.inline"
modules_LedClient_startAutoShow_inline__P12506_pre:
    .section code
    .balign 4
modules_LedClient_startAutoShow_inline__P12506_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word modules_LedClient_startAutoShow_inline__P12506_args@fn
modules_LedClient_startAutoShow_inline__P12506_args:
    .section code
modules_LedClient_startAutoShow_inline__P12506:
modules_LedClient_startAutoShow_inline__P12506_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_LedClient_startAutoShow_inline__P12506_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_LedClient_stopAutoShow__P5195_nochk
_proccall1580:
    add sp, #4*1 ; pop locals 1
.ret.12506:
    @stackempty locals
    movs r0, #0
.final_0_331:
modules_LedClient_startAutoShow_inline__P12506_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(301,9): modules.LedClient.show
    ;
    .object modules_LedClient_show__P4253 "jacdac-led/client.ts(301,9): modules.LedClient.show"
modules_LedClient_show__P4253_pre:
    .section code
    .balign 4
modules_LedClient_show__P4253_args:
    cmp r4, #1
    bge modules_LedClient_show__P4253_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_LedClient_show__P4253_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_LedClient_show__P4253:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LedClient__C4237_validate_76
    mov lr, r7
modules_LedClient_show__P4253_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
modules_LedClient_show__P4253_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1581:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_LedClient_numPixels__P4242_nochk
_proccall1582:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1584:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_332      
.jmpz1583:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_332      
.lazySkip_2_332:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_332:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_332      
.jmpz1585:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_332      
.lazySkip_4_332:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*2 ; pop locals 2
.lazy_3_332:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_332      
.jmpz1586:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    bl _conv_45
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@1]
    str r1, [r0, #64]
    @stackempty locals
.else_0_332:
.afterif_5_332:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    ldr r0, [r0, #76]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl jacdac_RegisterClient_values__P3532
_proccall1587:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1588:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4253:
    @stackempty locals
    movs r0, #0
.final_6_332:
    add sp, #4*2 ; pop locals 2
modules_LedClient_show__P4253_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(278,9): modules.LedClient.stopAutoShow
    ;
    .object modules_LedClient_stopAutoShow__P5195 "jacdac-led/client.ts(278,9): modules.LedClient.stopAutoShow"
modules_LedClient_stopAutoShow__P5195_pre:
    .section code
    .balign 4
modules_LedClient_stopAutoShow__P5195_args:
    cmp r4, #1
    bge modules_LedClient_stopAutoShow__P5195_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_LedClient_stopAutoShow__P5195_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_LedClient_stopAutoShow__P5195:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LedClient__C4237_validate_76
    mov lr, r7
modules_LedClient_stopAutoShow__P5195_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_LedClient_stopAutoShow__P5195_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #72]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_333      
.jmpz1589:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _lambda_call0_0
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_333:
.afterif_1_333:
.ret.5195:
    @stackempty locals
    movs r0, #0
.final_2_333:
    add sp, #4*1 ; pop locals 1
modules_LedClient_stopAutoShow__P5195_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(289,9): modules.LedClient.refresh
    ;
    .object modules_LedClient_refresh__P5197 "jacdac-led/client.ts(289,9): modules.LedClient.refresh"
modules_LedClient_refresh__P5197_pre:
    .section code
    .balign 4
modules_LedClient_refresh__P5197_args:
    cmp r4, #1
    bge modules_LedClient_refresh__P5197_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_LedClient_refresh__P5197_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_LedClient_refresh__P5197:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LedClient__C4237_validate_76
    mov lr, r7
modules_LedClient_refresh__P5197_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_LedClient_refresh__P5197_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_334      
.jmpz1591:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_LedClient_show__P4253_nochk
_proccall1592:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_334:
.afterif_1_334:
.ret.5197:
    @stackempty locals
    movs r0, #0
.final_2_334:
modules_LedClient_refresh__P5197_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(369,9): jacdac.Bus.subscribeRefresh
    ;
    .object jacdac_Bus_subscribeRefresh__P3476 "jacdac/routing.ts(369,9): jacdac.Bus.subscribeRefresh"
jacdac_Bus_subscribeRefresh__P3476_pre:
    .section code
    .balign 4
jacdac_Bus_subscribeRefresh__P3476_args:
    cmp r4, #2
    bge jacdac_Bus_subscribeRefresh__P3476_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Bus_subscribeRefresh__P3476_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_subscribeRefresh__P3476:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_subscribeRefresh__P3476_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Bus_subscribeRefresh__P3476_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_subscribe__P3629_nochk
_proccall1593:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_startRefresh__P5082_nochk
_proccall1594:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3476:
    @stackempty locals
.final_0_335:
    add sp, #4*1 ; pop locals 1
jacdac_Bus_subscribeRefresh__P3476_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(351,9): jacdac.Bus.startRefresh
    ;
    .object jacdac_Bus_startRefresh__P5082 "jacdac/routing.ts(351,9): jacdac.Bus.startRefresh"
jacdac_Bus_startRefresh__P5082_pre:
    .section code
    .balign 4
jacdac_Bus_startRefresh__P5082_args:
    cmp r4, #1
    bge jacdac_Bus_startRefresh__P5082_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Bus_startRefresh__P5082_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_409:
 .word modules_LedClient_startAutoShow_inline__P12502_Lit
_ldlit_410:
 .word modules_LedClient_startAutoShow_inline__P12506_Lit
.object POP
    .section code
jacdac_Bus_startRefresh__P5082:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_startRefresh__P5082_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_startRefresh__P5082_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_336      
.jmpz1595:
    b .ret.5082      
.else_0_336:
.afterif_1_336:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #52]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_412 ; jacdac_Bus_startRefresh_inline__P12582_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control_runInBackground__P2298
_proccall1596:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5082:
    @stackempty locals
    movs r0, #0
.final_2_336:
jacdac_Bus_startRefresh__P5082_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(355,37): jacdac.Bus.startRefresh.inline
    ;
    .object jacdac_Bus_startRefresh_inline__P12582 "jacdac/routing.ts(355,37): jacdac.Bus.startRefresh.inline"
jacdac_Bus_startRefresh_inline__P12582_pre:
    .section code
    .balign 4
jacdac_Bus_startRefresh_inline__P12582_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_Bus_startRefresh_inline__P12582_args@fn
jacdac_Bus_startRefresh_inline__P12582_args:
    .section code
jacdac_Bus_startRefresh_inline__P12582:
jacdac_Bus_startRefresh_inline__P12582_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_startRefresh_inline__P12582_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_Bus_refreshLoop__P5083_nochk
_proccall1597:
    add sp, #4*1 ; pop locals 1
.ret.12582:
    @stackempty locals
    movs r0, #0
.final_0_337:
jacdac_Bus_startRefresh_inline__P12582_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(358,9): jacdac.Bus.refreshLoop
    ;
    .object jacdac_Bus_refreshLoop__P5083 "jacdac/routing.ts(358,9): jacdac.Bus.refreshLoop"
jacdac_Bus_refreshLoop__P5083_pre:
    .section code
    .balign 4
jacdac_Bus_refreshLoop__P5083_args:
    cmp r4, #1
    bge jacdac_Bus_refreshLoop__P5083_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Bus_refreshLoop__P5083_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_refreshLoop__P5083:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_refreshLoop__P5083_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_refreshLoop__P5083_locals:
    ldr r0, _ldlit_413 ; _finally_12585      
    bl _pxt_save_exception_state
    @stackempty locals
.cont.12586:
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_hasListener__P3627_nochk
_proccall1599:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.12586      
.jmpz1598:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #93
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall1600:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #101
    push {r0} ; proc-arg
    bl pause__P2227
_proccall1601:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.12586      
.brk.12586:
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
_finally_12585:
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #52]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endFinally
.ret.5083:
    @stackempty locals
    movs r0, #0
.final_2_338:
jacdac_Bus_refreshLoop__P5083_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(102,9): jacdac.EventSource.hasListener
    ;
    .object jacdac_EventSource_hasListener__P3627 "jacdac/eventsource.ts(102,9): jacdac.EventSource.hasListener"
jacdac_EventSource_hasListener__P3627_pre:
    .section code
    .balign 4
jacdac_EventSource_hasListener__P3627_args:
    cmp r4, #2
    bge jacdac_EventSource_hasListener__P3627_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_EventSource_hasListener__P3627_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_EventSource_hasListener__P3627:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3622_validate_49
    mov lr, r7
jacdac_EventSource_hasListener__P3627_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_EventSource_hasListener__P3627_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_339      
.jmpz1602:
    movs r0, #10
    b .ret.3627      
.else_0_339:
.afterif_1_339:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.12602:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.12602      
.jmpz1603:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_EventListener__C3619_validate_67
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_2_339      
.jmpz1604:
    movs r0, #66
    b .ret.3627      
.else_2_339:
.afterif_3_339:
.cont.12602:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.12602      
.brk.12602:
    movs r0, #0
    str r0, [sp, locals@1]
    movs r0, #10
.ret.3627:
    @stackempty locals
.final_4_339:
    add sp, #4*3 ; pop locals 3
jacdac_EventSource_hasListener__P3627_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(128,9): jacdac.EventSource.subscribe
    ;
    .object jacdac_EventSource_subscribe__P3629 "jacdac/eventsource.ts(128,9): jacdac.EventSource.subscribe"
jacdac_EventSource_subscribe__P3629_pre:
    .section code
    .balign 4
jacdac_EventSource_subscribe__P3629_args:
    cmp r4, #3
    bge jacdac_EventSource_subscribe__P3629_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_EventSource_subscribe__P3629_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_EventSource_subscribe__P3629:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3622_validate_49
    mov lr, r7
jacdac_EventSource_subscribe__P3629_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_EventSource_subscribe__P3629_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_addListenerInternal__P4976_nochk
_proccall1605:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #3
    ldr r1, _ldlit_414 ; unsubscribe_inline__P12613_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3629:
    @stackempty locals
.final_0_340:
    add sp, #4*1 ; pop locals 1
jacdac_EventSource_subscribe__P3629_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(130,33): unsubscribe.inline
    ;
    .object unsubscribe_inline__P12613 "jacdac/eventsource.ts(130,33): unsubscribe.inline"
unsubscribe_inline__P12613_pre:
    .section code
    .balign 4
unsubscribe_inline__P12613_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word unsubscribe_inline__P12613_args@fn
unsubscribe_inline__P12613_args:
    .section code
unsubscribe_inline__P12613:
unsubscribe_inline__P12613_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
unsubscribe_inline__P12613_locals:
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_EventSource_removeListenerInternal__P4977_nochk
_proccall1606:
    add sp, #4*3 ; pop locals 3
.ret.12613:
    @stackempty locals
    movs r0, #0
.final_0_341:
unsubscribe_inline__P12613_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(50,9): jacdac.EventSource.removeListenerInternal
    ;
    .object jacdac_EventSource_removeListenerInternal__P4977 "jacdac/eventsource.ts(50,9): jacdac.EventSource.removeListenerInternal"
jacdac_EventSource_removeListenerInternal__P4977_pre:
    .section code
    .balign 4
jacdac_EventSource_removeListenerInternal__P4977_args:
    cmp r4, #3
    bge jacdac_EventSource_removeListenerInternal__P4977_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_EventSource_removeListenerInternal__P4977_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_EventSource_removeListenerInternal__P4977:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3622_validate_49
    mov lr, r7
jacdac_EventSource_removeListenerInternal__P4977_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_EventSource_removeListenerInternal__P4977_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_342      
.jmpz1607:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_342      
.lazySkip_2_342:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_342:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_342      
.jmpz1608:
    b .ret.4977      
.else_0_342:
.afterif_3_342:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.12633:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.12633      
.jmpz1609:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_EventListener__C3619_validate_67
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_342      
.jmpz1610:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_342      
.object PUSH
.balign 4
_ldlit_412:
 .word jacdac_Bus_startRefresh_inline__P12582_Lit
_ldlit_413:
 .word _finally_12585
_ldlit_414:
 .word unsubscribe_inline__P12613_Lit
.object POP
.lazySkip_6_342:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_EventListener__C3619_validate_67
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_5_342:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_342      
.jmpz1611:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySplice__P1992
_proccall1612:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .ret.4977      
.else_4_342:
.afterif_7_342:
.cont.12633:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.12633      
.brk.12633:
.ret.4977:
    @stackempty locals
    movs r0, #0
.final_8_342:
    add sp, #4*4 ; pop locals 4
jacdac_EventSource_removeListenerInternal__P4977_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(32,9): jacdac.EventSource.addListenerInternal
    ;
    .object jacdac_EventSource_addListenerInternal__P4976 "jacdac/eventsource.ts(32,9): jacdac.EventSource.addListenerInternal"
jacdac_EventSource_addListenerInternal__P4976_pre:
    .section code
    .balign 4
jacdac_EventSource_addListenerInternal__P4976_args:
    cmp r4, #3
    bge jacdac_EventSource_addListenerInternal__P4976_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_EventSource_addListenerInternal__P4976_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_EventSource_addListenerInternal__P4976:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3622_validate_49
    mov lr, r7
jacdac_EventSource_addListenerInternal__P4976_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_EventSource_addListenerInternal__P4976_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_343      
.jmpz1613:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_343      
.lazySkip_2_343:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_343:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_343      
.jmpz1614:
    b .ret.4976      
.else_0_343:
.afterif_3_343:
    movs r0, #2
    ldr r1, _ldlit_416 ; previous_inline__P12666_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFind__P2003
_proccall1615:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_343      
.jmpz1616:
    b .ret.4976      
.else_4_343:
.afterif_5_343:
    ldr r0, _ldlit_417 ; jacdac_EventListener__C3619_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_EventListener_constructor__P3620
_proccall1617:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4976:
    @stackempty locals
    movs r0, #0
.final_6_343:
    add sp, #4*2 ; pop locals 2
jacdac_EventSource_addListenerInternal__P4976_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(39,17): previous.inline
    ;
    .object previous_inline__P12666 "jacdac/eventsource.ts(39,17): previous.inline"
previous_inline__P12666_pre:
    .section code
    .balign 4
previous_inline__P12666_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word previous_inline__P12666_args@fn
previous_inline__P12666_args:
    cmp r4, #1
    bge previous_inline__P12666_nochk
    push {lr}
    bl _expand_args_1_5
    bl previous_inline__P12666_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
previous_inline__P12666:
previous_inline__P12666_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
previous_inline__P12666_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_EventListener__C3619_validate_67
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_344      
.jmpz1618:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_344      
.lazySkip_1_344:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_jacdac_EventListener__C3619_validate_67
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_0_344:
; jmp value (already in r0)
.ret.12666:
    @stackempty locals
.final_2_344:
previous_inline__P12666_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(6,9): jacdac.EventListener.constructor
    ;
    .object jacdac_EventListener_constructor__P3620 "jacdac/eventsource.ts(6,9): jacdac.EventListener.constructor"
jacdac_EventListener_constructor__P3620_pre:
    .section code
    .balign 4
    .section code
jacdac_EventListener_constructor__P3620:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventListener__C3619_validate_67
    mov lr, r7
jacdac_EventListener_constructor__P3620_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_EventListener_constructor__P3620_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    movs r0, #0
.ret.3620:
    @stackempty locals
.final_0_345:
jacdac_EventListener_constructor__P3620_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(141,9): modules.LedClient.numPixels
    ;
    .object modules_LedClient_numPixels__P4242 "jacdac-led/client.ts(141,9): modules.LedClient.numPixels"
modules_LedClient_numPixels__P4242_pre:
    .section code
    .balign 4
modules_LedClient_numPixels__P4242_args:
    cmp r4, #1
    bge modules_LedClient_numPixels__P4242_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_LedClient_numPixels__P4242_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_LedClient_numPixels__P4242:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LedClient__C4237_validate_76
    mov lr, r7
modules_LedClient_numPixels__P4242_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_LedClient_numPixels__P4242_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1619:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall1620:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.4242:
    @stackempty locals
.final_0_346:
    add sp, #4*1 ; pop locals 1
modules_LedClient_numPixels__P4242_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(112,9): modules.LedClient.setBrightness
    ;
    .object modules_LedClient_setBrightness__P4240 "jacdac-led/client.ts(112,9): modules.LedClient.setBrightness"
modules_LedClient_setBrightness__P4240_pre:
    .section code
    .balign 4
modules_LedClient_setBrightness__P4240_args:
    cmp r4, #2
    bge modules_LedClient_setBrightness__P4240_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_LedClient_setBrightness__P4240_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_LedClient_setBrightness__P4240:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LedClient__C4237_validate_76
    mov lr, r7
modules_LedClient_setBrightness__P4240_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_LedClient_setBrightness__P4240_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1621:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #80]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3531
_proccall1622:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #80]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_values__P3532
_proccall1623:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4240:
    @stackempty locals
    movs r0, #0
.final_0_347:
    add sp, #4*1 ; pop locals 1
modules_LedClient_setBrightness__P4240_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(451,9): modules.LedClient.rotate
    ;
    .object modules_LedClient_rotate__P4258 "jacdac-led/client.ts(451,9): modules.LedClient.rotate"
modules_LedClient_rotate__P4258_pre:
    .section code
    .balign 4
modules_LedClient_rotate__P4258_args:
    cmp r4, #2
    bge modules_LedClient_rotate__P4258_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_LedClient_rotate__P4258_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_LedClient_rotate__P4258:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LedClient__C4237_validate_76
    mov lr, r7
modules_LedClient_rotate__P4258_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_LedClient_rotate__P4258_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_348      
.jmpz1624:
    b .ret.4258      
.else_0_348:
.afterif_1_348:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_348      
.jmpz1625:
    b .ret.4258      
.else_2_348:
.afterif_3_348:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #1
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_77
    movs r2, #0
    movs r3, #1
    negs r3, r3
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::rotate
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_LedClient_setDirty__P5196_nochk
_proccall1626:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4258:
    @stackempty locals
    movs r0, #0
.final_4_348:
    add sp, #4*1 ; pop locals 1
modules_LedClient_rotate__P4258_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_416:
 .word previous_inline__P12666_Lit
_ldlit_417:
 .word jacdac_EventListener__C3619_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(21,9): modules.LedClient.constructor
    ;
    .object modules_LedClient_constructor__P4238 "jacdac-led/client.ts(21,9): modules.LedClient.constructor"
modules_LedClient_constructor__P4238_pre:
    .section code
    .balign 4
    .section code
modules_LedClient_constructor__P4238:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LedClient__C4237_validate_76
    mov lr, r7
modules_LedClient_constructor__P4238_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_LedClient_constructor__P4238_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #60]
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #68]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #116]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #120]
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_419 ; 739486177      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_constructor__P3550
_proccall1627:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #47
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1628:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #95
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1629:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #80]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #7
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1630:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #84]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #97
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1631:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #88]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #49
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1632:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #99
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1633:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #25
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1634:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #100]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #101
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1635:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #51
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #13
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1636:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #108]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #103
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1637:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #112]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_420 ; modules_LedClient_inline__P12853_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #88]
    mov r3, r0
    ldr r0, [sp, #0]      
    movs r0, #132
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_EventSource_on__P3624
_proccall1638:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #192
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #64]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4238:
    @stackempty locals
.final_0_349:
modules_LedClient_constructor__P4238_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(78,54): modules.LedClient.inline
    ;
    .object modules_LedClient_inline__P12853 "jacdac-led/client.ts(78,54): modules.LedClient.inline"
modules_LedClient_inline__P12853_pre:
    .section code
    .balign 4
modules_LedClient_inline__P12853_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word modules_LedClient_inline__P12853_args@fn
modules_LedClient_inline__P12853_args:
    .section code
modules_LedClient_inline__P12853:
modules_LedClient_inline__P12853_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_LedClient_inline__P12853_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_LedClient_show__P4253_nochk
_proccall1639:
    add sp, #4*1 ; pop locals 1
.ret.12853:
    @stackempty locals
    movs r0, #0
.final_0_350:
modules_LedClient_inline__P12853_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-humidity/client.ts(39,9): modules.HumidityClient.humidity
    ;
    .object modules_HumidityClient_humidity__P4199 "jacdac-humidity/client.ts(39,9): modules.HumidityClient.humidity"
modules_HumidityClient_humidity__P4199_pre:
    .section code
    .balign 4
modules_HumidityClient_humidity__P4199_args:
    cmp r4, #1
    bge modules_HumidityClient_humidity__P4199_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_HumidityClient_humidity__P4199_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_HumidityClient_humidity__P4199:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_HumidityClient__C4197_validate_78
    mov lr, r7
modules_HumidityClient_humidity__P4199_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_HumidityClient_humidity__P4199_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_reading__P3273_nochk
_proccall1640:
    add sp, #4*1 ; pop locals 1
.ret.4199:
    @stackempty locals
.final_0_351:
modules_HumidityClient_humidity__P4199_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-humidity/client.ts(89,9): modules.HumidityClient.onHumidityChangedBy
    ;
    .object modules_HumidityClient_onHumidityChangedBy__P4203 "jacdac-humidity/client.ts(89,9): modules.HumidityClient.onHumidityChangedBy"
modules_HumidityClient_onHumidityChangedBy__P4203_pre:
    .section code
    .balign 4
modules_HumidityClient_onHumidityChangedBy__P4203_args:
    cmp r4, #3
    bge modules_HumidityClient_onHumidityChangedBy__P4203_nochk
    push {lr}
    bl _expand_args_3_7
    bl modules_HumidityClient_onHumidityChangedBy__P4203_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
modules_HumidityClient_onHumidityChangedBy__P4203:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_HumidityClient__C4197_validate_78
    mov lr, r7
modules_HumidityClient_onHumidityChangedBy__P4203_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_HumidityClient_onHumidityChangedBy__P4203_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_onReadingChangedBy__P3274_nochk
_proccall1641:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4203:
    @stackempty locals
    movs r0, #0
.final_0_352:
modules_HumidityClient_onHumidityChangedBy__P4203_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_419:
 .word 739486177
_ldlit_420:
 .word modules_LedClient_inline__P12853_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-humidity/client.ts(11,9): modules.HumidityClient.constructor
    ;
    .object modules_HumidityClient_constructor__P4198 "jacdac-humidity/client.ts(11,9): modules.HumidityClient.constructor"
modules_HumidityClient_constructor__P4198_pre:
    .section code
    .balign 4
    .section code
modules_HumidityClient_constructor__P4198:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_HumidityClient__C4197_validate_78
    mov lr, r7
modules_HumidityClient_constructor__P4198_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_HumidityClient_constructor__P4198_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    movs r0, #13
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_422 ; 764420465      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_constructor__P3271
_proccall1642:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #92]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #105
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #13
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1643:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #53
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1644:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #100]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #107
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1645:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4198:
    @stackempty locals
.final_0_353:
modules_HumidityClient_constructor__P4198_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-gamepad/client.ts(73,9): modules.GamepadClient.y
    ;
    .object modules_GamepadClient_y__P3860 "jacdac-gamepad/client.ts(73,9): modules.GamepadClient.y"
modules_GamepadClient_y__P3860_pre:
    .section code
    .balign 4
modules_GamepadClient_y__P3860_args:
    cmp r4, #1
    bge modules_GamepadClient_y__P3860_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_GamepadClient_y__P3860_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_GamepadClient_y__P3860:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_GamepadClient__C3856_validate_79
    mov lr, r7
modules_GamepadClient_y__P3860_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_GamepadClient_y__P3860_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_setStreaming__P3268_nochk
_proccall1646:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall1647:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #5
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
.ret.3860:
    @stackempty locals
.final_0_354:
    add sp, #4*1 ; pop locals 1
modules_GamepadClient_y__P3860_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-gamepad/client.ts(56,9): modules.GamepadClient.x
    ;
    .object modules_GamepadClient_x__P3859 "jacdac-gamepad/client.ts(56,9): modules.GamepadClient.x"
modules_GamepadClient_x__P3859_pre:
    .section code
    .balign 4
modules_GamepadClient_x__P3859_args:
    cmp r4, #1
    bge modules_GamepadClient_x__P3859_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_GamepadClient_x__P3859_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_GamepadClient_x__P3859:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_GamepadClient__C3856_validate_79
    mov lr, r7
modules_GamepadClient_x__P3859_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_GamepadClient_x__P3859_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_setStreaming__P3268_nochk
_proccall1648:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall1649:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #3
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
.ret.3859:
    @stackempty locals
.final_0_355:
    add sp, #4*1 ; pop locals 1
modules_GamepadClient_x__P3859_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function gamepad.ts(1,1): plot
    ;
    .object plot__P4682 "gamepad.ts(1,1): plot"
plot__P4682_pre:
    .section code
    .balign 4
    .section code
plot__P4682:
plot__P4682_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
plot__P4682_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl basic::clearScreen
    @stackempty locals
    movs r0, #5
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #5
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #59
    negs r1, r1
    bl _cmp_lt
    beq .else_0_356      
.jmpz1650:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@0]
    @stackempty locals
.else_0_356:
.afterif_1_356:
    ldr r0, [sp, args@0]
    movs r1, #119
    negs r1, r1
    bl _cmp_lt
    beq .else_2_356      
.jmpz1651:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@0]
    @stackempty locals
.else_2_356:
.afterif_3_356:
    ldr r0, [sp, args@0]
    movs r1, #61
    bl _cmp_gt
    beq .else_4_356      
.jmpz1652:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.else_4_356:
.afterif_5_356:
    ldr r0, [sp, args@0]
    movs r1, #121
    bl _cmp_gt
    beq .else_6_356      
.jmpz1653:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.else_6_356:
.afterif_7_356:
    ldr r0, [sp, args@1]
    movs r1, #59
    negs r1, r1
    bl _cmp_lt
    beq .else_8_356      
.jmpz1654:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
.else_8_356:
.afterif_9_356:
    ldr r0, [sp, args@1]
    movs r1, #119
    negs r1, r1
    bl _cmp_lt
    beq .else_10_356      
.jmpz1655:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
.else_10_356:
.afterif_11_356:
    ldr r0, [sp, args@1]
    movs r1, #61
    bl _cmp_gt
    beq .else_12_356      
.jmpz1656:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
.else_12_356:
.afterif_13_356:
    ldr r0, [sp, args@1]
    movs r1, #121
    bl _cmp_gt
    beq .else_14_356      
.jmpz1657:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
.else_14_356:
.afterif_15_356:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_41
    mov r7, sp
    str r7, [r6, #4]
    bl led::plot
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4682:
    @stackempty locals
    movs r0, #0
.final_16_356:
    add sp, #4*2 ; pop locals 2
plot__P4682_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(91,9): jacdac.SensorClient.onStateChanged
    ;
    .object jacdac_SensorClient_onStateChanged__P3269 "jacdac/sensor/client.ts(91,9): jacdac.SensorClient.onStateChanged"
jacdac_SensorClient_onStateChanged__P3269_pre:
    .section code
    .balign 4
jacdac_SensorClient_onStateChanged__P3269_args:
    cmp r4, #2
    bge jacdac_SensorClient_onStateChanged__P3269_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_SensorClient_onStateChanged__P3269_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_SensorClient_onStateChanged__P3269:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SensorClient__C3264_validate_62
    mov lr, r7
jacdac_SensorClient_onStateChanged__P3269_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SensorClient_onStateChanged__P3269_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #132
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_EventSource_on__P3624
_proccall1658:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_setStreaming__P3268_nochk
_proccall1659:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3269:
    @stackempty locals
    movs r0, #0
.final_0_357:
jacdac_SensorClient_onStateChanged__P3269_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_422:
 .word 764420465
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-gamepad/client.ts(14,9): modules.GamepadClient.constructor
    ;
    .object modules_GamepadClient_constructor__P3857 "jacdac-gamepad/client.ts(14,9): modules.GamepadClient.constructor"
modules_GamepadClient_constructor__P3857_pre:
    .section code
    .balign 4
    .section code
modules_GamepadClient_constructor__P3857:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_GamepadClient__C3856_validate_79
    mov lr, r7
modules_GamepadClient_constructor__P3857_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_GamepadClient_constructor__P3857_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    movs r0, #201
    push {r0} ; proc-arg
    ldr r0, _ldlit_424 ; _str234      
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_425 ; 555673773      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_constructor__P3266
_proccall1660:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #27
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #15
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1661:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #109
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1662:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3857:
    @stackempty locals
.final_0_358:
modules_GamepadClient_constructor__P3857_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-button/client.ts(142,9): modules.ButtonClient.onHold
    ;
    .object modules_ButtonClient_onHold__P3755 "jacdac-button/client.ts(142,9): modules.ButtonClient.onHold"
modules_ButtonClient_onHold__P3755_pre:
    .section code
    .balign 4
modules_ButtonClient_onHold__P3755_args:
    cmp r4, #2
    bge modules_ButtonClient_onHold__P3755_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_ButtonClient_onHold__P3755_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_ButtonClient_onHold__P3755:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ButtonClient__C3745_validate_80
    mov lr, r7
modules_ButtonClient_onHold__P3755_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ButtonClient_onHold__P3755_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_registerEvent__P4981_nochk
_proccall1663:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3755:
    @stackempty locals
    movs r0, #0
.final_0_359:
modules_ButtonClient_onHold__P3755_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function sonify.ts(25,5): machine.scheduleTone
    ;
    .object machine_scheduleTone__P4694 "sonify.ts(25,5): machine.scheduleTone"
machine_scheduleTone__P4694_pre:
    .section code
    .balign 4
    .section code
machine_scheduleTone__P4694:
machine_scheduleTone__P4694_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_scheduleTone__P4694_locals:
    ldr r0, [sp, args@0]
    movs r1, #55
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #111
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl machine_startTonePlayer__P6238
_proccall1664:
    @stackempty locals
.ret.4694:
    @stackempty locals
    movs r0, #0
.final_0_360:
machine_scheduleTone__P4694_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function sonify.ts(6,5): machine.startTonePlayer
    ;
    .object machine_startTonePlayer__P6238 "sonify.ts(6,5): machine.startTonePlayer"
machine_startTonePlayer__P6238_pre:
    .section code
    .balign 4
    .section code
machine_startTonePlayer__P6238:
machine_startTonePlayer__P6238_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_startTonePlayer__P6238_locals:
    bl music_stopAllSounds__P2559
_proccall1665:
    @stackempty locals
    ldr r0, _ldlit_426 ; machine_startTonePlayer_inline__P13022_Lit      
    push {r0} ; proc-arg
    bl control_runInBackground__P2298
_proccall1666:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.6238:
    @stackempty locals
    movs r0, #0
.final_0_361:
machine_startTonePlayer__P6238_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function sonify.ts(8,33): machine.startTonePlayer.inline
    ;
    .object machine_startTonePlayer_inline__P13022 "sonify.ts(8,33): machine.startTonePlayer.inline"
machine_startTonePlayer_inline__P13022_pre:
    .section code
    .balign 4
machine_startTonePlayer_inline__P13022_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_startTonePlayer_inline__P13022_args@fn
machine_startTonePlayer_inline__P13022_args:
    .section code
machine_startTonePlayer_inline__P13022:
machine_startTonePlayer_inline__P13022_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
machine_startTonePlayer_inline__P13022_locals:
.cont.13023:
    movs r0, #55
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_362      
.jmpz1667:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_362      
.lazySkip_1_362:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #111
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_0_362:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.13023      
.jmpz1668:
    movs r0, #55
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #111
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    movs r1, #55
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #0
    movs r1, #111
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl Math_abs__P2020
_proccall1669:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl machine_MicrobitMachine_playTone__P5439
_proccall1670:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl machine_SonifyOptions_play__P4691
_proccall1671:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #20
    mov r7, sp
    str r7, [r6, #4]
    bl basic::pause
    @stackempty locals
    b .cont.13023      
.brk.13023:
.ret.13022:
    @stackempty locals
    movs r0, #0
.final_2_362:
    add sp, #4*2 ; pop locals 2
machine_startTonePlayer_inline__P13022_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function microbit.ts(17,9): machine.SonifyOptions.play
    ;
    .object machine_SonifyOptions_play__P4691 "microbit.ts(17,9): machine.SonifyOptions.play"
machine_SonifyOptions_play__P4691_pre:
    .section code
    .balign 4
machine_SonifyOptions_play__P4691_args:
    cmp r4, #2
    bge machine_SonifyOptions_play__P4691_nochk
    push {lr}
    bl _expand_args_2_1
    bl machine_SonifyOptions_play__P4691_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
machine_SonifyOptions_play__P4691:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_machine_SonifyOptions__C4685_validate_81
    mov lr, r7
machine_SonifyOptions_play__P4691_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
machine_SonifyOptions_play__P4691_locals:
    movs r0, #5
    push {r0} ; proc-arg
    bl music_beat__P2543
_proccall1672:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_ge
    beq .condexprz_0_363      
.jmpz1673:
    ldr r0, [sp, args@1]
    b .condexprfin_1_363      
.condexprz_0_363:
    movs r0, #1
.condexprfin_1_363:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_2_363      
.jmpz1674:
    movs r0, #1
    ldr r1, [sp, args@1]
    bl _numops_subs
    b .condexprfin_3_363      
.condexprz_2_363:
    movs r0, #1
.condexprfin_3_363:
; jmp value (already in r0)
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r1, r0
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    ldr r0, [sp, #4*10] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*11] ; estack
    ldr r0, [sp, #4*12] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*13] ; estack
    ldr r0, [sp, #4*14] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*15] ; estack
    bl music_createSoundEffect__P2794
_proccall1675:
    add sp, #4*16 ; pop locals 16
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl music_playSoundEffect__P2793
_proccall1676:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4691:
    @stackempty locals
    movs r0, #0
.final_4_363:
    add sp, #4*4 ; pop locals 4
machine_SonifyOptions_play__P4691_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/soundexpressions.ts(335,5): music.playSoundEffect
    ;
    .object music_playSoundEffect__P2793 "core/soundexpressions.ts(335,5): music.playSoundEffect"
music_playSoundEffect__P2793_pre:
    .section code
    .balign 4
    .section code
music_playSoundEffect__P2793:
music_playSoundEffect__P2793_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_playSoundEffect__P2793_locals:
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _cmp_eqq
    beq .else_0_364      
.jmpz1677:
    ldr r0, _ldlit_427 ; SoundExpression__C2699_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl SoundExpression_constructor__P2700
_proccall1678:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, #0]      
    bl SoundExpression_play__P2702
_proccall1679:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_364      
.else_0_364:
    ldr r0, _ldlit_427 ; SoundExpression__C2699_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl SoundExpression_constructor__P2700
_proccall1680:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, #0]      
    bl SoundExpression_playUntilDone__P2703
_proccall1681:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_364:
.ret.2793:
    @stackempty locals
    movs r0, #0
.final_2_364:
music_playSoundEffect__P2793_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/soundexpressions.ts(46,5): SoundExpression.playUntilDone
    ;
    .object SoundExpression_playUntilDone__P2703 "core/soundexpressions.ts(46,5): SoundExpression.playUntilDone"
SoundExpression_playUntilDone__P2703_pre:
    .section code
    .balign 4
SoundExpression_playUntilDone__P2703_args:
    cmp r4, #1
    bge SoundExpression_playUntilDone__P2703_nochk
    push {lr}
    bl _expand_args_1_5
    bl SoundExpression_playUntilDone__P2703_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
SoundExpression_playUntilDone__P2703:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_SoundExpression__C2699_validate_82
    mov lr, r7
SoundExpression_playUntilDone__P2703_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
SoundExpression_playUntilDone__P2703_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r0, #66
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    push {r0} ; proc-arg
    bl _conv_16
    mov r7, sp
    str r7, [r6, #4]
    bl music::__playSoundExpression
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2703:
    @stackempty locals
    movs r0, #0
.final_0_365:
SoundExpression_playUntilDone__P2703_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_424:
 .word _str234
_ldlit_425:
 .word 555673773
_ldlit_426:
 .word machine_startTonePlayer_inline__P13022_Lit
_ldlit_427:
 .word SoundExpression__C2699_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/soundexpressions.ts(8,5): SoundExpression.constructor
    ;
    .object SoundExpression_constructor__P2700 "core/soundexpressions.ts(8,5): SoundExpression.constructor"
SoundExpression_constructor__P2700_pre:
    .section code
    .balign 4
    .section code
SoundExpression_constructor__P2700:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_SoundExpression__C2699_validate_82
    mov lr, r7
SoundExpression_constructor__P2700_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
SoundExpression_constructor__P2700_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    movs r0, #0
    @stackempty locals
    movs r0, #0
.ret.2700:
    @stackempty locals
.final_0_366:
SoundExpression_constructor__P2700_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/soundexpressions.ts(32,5): SoundExpression.play
    ;
    .object SoundExpression_play__P2702 "core/soundexpressions.ts(32,5): SoundExpression.play"
SoundExpression_play__P2702_pre:
    .section code
    .balign 4
SoundExpression_play__P2702_args:
    cmp r4, #1
    bge SoundExpression_play__P2702_nochk
    push {lr}
    bl _expand_args_1_5
    bl SoundExpression_play__P2702_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
SoundExpression_play__P2702:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_SoundExpression__C2699_validate_82
    mov lr, r7
SoundExpression_play__P2702_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
SoundExpression_play__P2702_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r0, #10
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    push {r0} ; proc-arg
    bl _conv_16
    mov r7, sp
    str r7, [r6, #4]
    bl music::__playSoundExpression
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2702:
    @stackempty locals
    movs r0, #0
.final_0_368:
SoundExpression_play__P2702_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/soundexpressions.ts(383,5): music.createSoundEffect
    ;
    .object music_createSoundEffect__P2794 "core/soundexpressions.ts(383,5): music.createSoundEffect"
music_createSoundEffect__P2794_pre:
    .section code
    .balign 4
    .section code
music_createSoundEffect__P2794:
music_createSoundEffect__P2794_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
music_createSoundEffect__P2794_locals:
    ldr r0, _ldlit_429 ; _str95      
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_constrain__P11
_proccall1682:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #3
    push {r0} ; proc-arg
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl music_setValue__P4879
_proccall1683:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _numops_orrs
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_constrain__P11
_proccall1684:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #9
    push {r0} ; proc-arg
    push {r1}
    movs r0, #3
    push {r0} ; proc-arg
    push {r2}
    bl music_setValue__P4879
_proccall1685:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1686:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    movs r0, #19
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1687:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r0, #37
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1688:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _numops_orrs
    mov r3, r0
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_constrain__P11
_proccall1689:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #9
    push {r0} ; proc-arg
    push {r1}
    movs r0, #53
    push {r0} ; proc-arg
    push {r2}
    bl music_setValue__P4879
_proccall1690:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@6]
    push {r0} ; proc-arg
    bl Math_constrain__P11
_proccall1691:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #5
    push {r0} ; proc-arg
    push {r1}
    movs r0, #69
    push {r0} ; proc-arg
    push {r2}
    bl music_setValue__P4879
_proccall1692:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@7]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1693
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_369      
.jmpz1693:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1694
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_369      
.jmpz1694:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1695
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_369      
.jmpz1695:
    pop {r0} ; tmpref @1
    b .brk.13160      
.switch_0_369:
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #27
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1696:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    movs r0, #61
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1697:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.13160      
.switch_1_369:
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #27
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1698:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #181
    push {r0} ; proc-arg
    movs r0, #61
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1699:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.13160      
.switch_2_369:
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #37
    push {r0} ; proc-arg
    movs r0, #27
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1700:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #181
    push {r0} ; proc-arg
    movs r0, #61
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1701:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
.brk.13160:
    ldr r0, [sp, args@6]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1702
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_369      
.jmpz1702:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1703
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_369      
.jmpz1703:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1704
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_369      
.jmpz1704:
    pop {r0} ; tmpref @1
    b .brk.13186      
.switch_3_369:
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #73
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1705:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    movs r0, #81
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1706:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.13186      
.switch_4_369:
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #73
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1707:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #9
    push {r0} ; proc-arg
    movs r0, #81
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1708:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.13186      
.switch_5_369:
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #73
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1709:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #9
    push {r0} ; proc-arg
    movs r0, #5
    lsls r0, r0, #8
    adds r0, #121
    push {r0} ; proc-arg
    movs r0, #81
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl music_setValue__P4879
_proccall1710:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
.brk.13186:
    ldr r0, [sp, locals@0]
.ret.2794:
    @stackempty locals
.final_6_369:
    add sp, #4*1 ; pop locals 1
music_createSoundEffect__P2794_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/math.ts(35,5): Math.constrain
    ;
    .object Math_constrain__P11 "core/math.ts(35,5): Math.constrain"
Math_constrain__P11_pre:
    .section code
    .balign 4
    .section code
Math_constrain__P11:
Math_constrain__P11_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_constrain__P11_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_lt
    beq .condexprz_0_370      
.jmpz1711:
    ldr r0, [sp, args@1]
    b .condexprfin_1_370      
.condexprz_0_370:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    bl _cmp_gt
    beq .condexprz_2_370      
.jmpz1712:
    ldr r0, [sp, args@2]
    b .condexprfin_3_370      
.object PUSH
.balign 4
_ldlit_429:
 .word _str95
.object POP
.condexprz_2_370:
    ldr r0, [sp, args@0]
.condexprfin_3_370:
; jmp value (already in r0)
.condexprfin_1_370:
; jmp value (already in r0)
.ret.11:
    @stackempty locals
.final_4_370:
Math_constrain__P11_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/soundexpressions.ts(472,5): music.setValue
    ;
    .object music_setValue__P4879 "core/soundexpressions.ts(472,5): music.setValue"
music_setValue__P4879_pre:
    .section code
    .balign 4
    .section code
music_setValue__P4879:
music_setValue__P4879_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
music_setValue__P4879_locals:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #21
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::pow
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl Math_constrain__P11
_proccall1713:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSubstr__P2010
_proccall1714:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl music_formatNumber__P4880
_proccall1715:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, args@3]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_stringSubstr__P2010
_proccall1716:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
.ret.4879:
    @stackempty locals
.final_0_371:
music_setValue__P4879_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/soundexpressions.ts(477,5): music.formatNumber
    ;
    .object music_formatNumber__P4880 "core/soundexpressions.ts(477,5): music.formatNumber"
music_formatNumber__P4880_pre:
    .section code
    .balign 4
    .section code
music_formatNumber__P4880:
music_formatNumber__P4880_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
music_formatNumber__P4880_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_16
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.cont.13261:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, args@1]
    bl _cmp_lt
    beq .brk.13261      
.jmpz1717:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_431 ; _str2      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    b .cont.13261      
.brk.13261:
    ldr r0, [sp, locals@0]
.ret.4880:
    @stackempty locals
.final_0_372:
    add sp, #4*1 ; pop locals 1
music_formatNumber__P4880_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/music.ts(262,5): music.beat
    ;
    .object music_beat__P2543 "core/music.ts(262,5): music.beat"
music_beat__P2543_pre:
    .section code
    .balign 4
    .section code
music_beat__P2543:
music_beat__P2543_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
music_beat__P2543_locals:
    bl music_init__P4810
_proccall1718:
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #6
    bl _cmp_eq
    beq .else_0_373      
.jmpz1719:
    movs r0, #3
    str r0, [sp, args@0]
    @stackempty locals
.else_0_373:
.afterif_1_373:
    ldr r7, [r6, #0]
    ldr r0, [r7, #88]
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #234
    lsls r0, r0, #8
    adds r0, #96
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1720
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_373      
.jmpz1720:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1721
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_373      
.jmpz1721:
    movs r0, #17
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1722
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_373      
.jmpz1722:
    movs r0, #33
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1723
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_373      
.jmpz1723:
    movs r0, #65
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1724
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_373      
.jmpz1724:
    movs r0, #129
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1725
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_373      
.jmpz1725:
    pop {r0} ; tmpref @1
    b .switch_8_373      
.switch_2_373:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    b .ret.2543      
.switch_3_373:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    b .ret.2543      
.switch_4_373:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #7
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    b .ret.2543      
.switch_5_373:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    b .ret.2543      
.switch_6_373:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    b .ret.2543      
.switch_7_373:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    b .ret.2543      
.switch_8_373:
    ldr r0, [sp, locals@0]
    b .ret.2543      
.brk.13282:
    movs r0, #0
.ret.2543:
    @stackempty locals
.final_9_373:
    add sp, #4*1 ; pop locals 1
music_beat__P2543_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(66,9): machine.MicrobitMachine.playTone
    ;
    .object machine_MicrobitMachine_playTone__P5439 "runtime.ts(66,9): machine.MicrobitMachine.playTone"
machine_MicrobitMachine_playTone__P5439_pre:
    .section code
    .balign 4
machine_MicrobitMachine_playTone__P5439_args:
    cmp r4, #2
    bge machine_MicrobitMachine_playTone__P5439_nochk
    push {lr}
    bl _expand_args_2_1
    bl machine_MicrobitMachine_playTone__P5439_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
machine_MicrobitMachine_playTone__P5439:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_machine_MicrobitMachine__C5435_validate_6
    mov lr, r7
machine_MicrobitMachine_playTone__P5439_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_MicrobitMachine_playTone__P5439_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_374      
.jmpz1726:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #52]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall1727:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_374:
.afterif_1_374:
.ret.5439:
    @stackempty locals
    movs r0, #0
.final_2_374:
machine_MicrobitMachine_playTone__P5439_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-button/client.ts(123,9): modules.ButtonClient.onDown
    ;
    .object modules_ButtonClient_onDown__P3753 "jacdac-button/client.ts(123,9): modules.ButtonClient.onDown"
modules_ButtonClient_onDown__P3753_pre:
    .section code
    .balign 4
modules_ButtonClient_onDown__P3753_args:
    cmp r4, #2
    bge modules_ButtonClient_onDown__P3753_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_ButtonClient_onDown__P3753_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_ButtonClient_onDown__P3753:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ButtonClient__C3745_validate_80
    mov lr, r7
modules_ButtonClient_onDown__P3753_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ButtonClient_onDown__P3753_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_registerEvent__P4981_nochk
_proccall1728:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3753:
    @stackempty locals
    movs r0, #0
.final_0_375:
modules_ButtonClient_onDown__P3753_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-button/client.ts(132,9): modules.ButtonClient.onUp
    ;
    .object modules_ButtonClient_onUp__P3754 "jacdac-button/client.ts(132,9): modules.ButtonClient.onUp"
modules_ButtonClient_onUp__P3754_pre:
    .section code
    .balign 4
modules_ButtonClient_onUp__P3754_args:
    cmp r4, #2
    bge modules_ButtonClient_onUp__P3754_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_ButtonClient_onUp__P3754_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_ButtonClient_onUp__P3754:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ButtonClient__C3745_validate_80
    mov lr, r7
modules_ButtonClient_onUp__P3754_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ButtonClient_onUp__P3754_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_registerEvent__P4981_nochk
_proccall1729:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3754:
    @stackempty locals
    movs r0, #0
.final_0_376:
modules_ButtonClient_onUp__P3754_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-button/client.ts(11,9): modules.ButtonClient.constructor
    ;
    .object modules_ButtonClient_constructor__P3746 "jacdac-button/client.ts(11,9): modules.ButtonClient.constructor"
modules_ButtonClient_constructor__P3746_pre:
    .section code
    .balign 4
    .section code
modules_ButtonClient_constructor__P3746:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ButtonClient__C3745_validate_80
    mov lr, r7
modules_ButtonClient_constructor__P3746_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ButtonClient_constructor__P3746_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #100]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #104]
    ldr r0, _ldlit_432 ; _str231      
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_433 ; 686245063      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_constructor__P3271
_proccall1730:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #7
    lsls r0, r0, #6
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1731:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_434 ; modules_ButtonClient_inline__P13342_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624_nochk
_proccall1732:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3746:
    @stackempty locals
.final_0_377:
modules_ButtonClient_constructor__P3746_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-button/client.ts(21,35): modules.ButtonClient.inline
    ;
    .object modules_ButtonClient_inline__P13342 "jacdac-button/client.ts(21,35): modules.ButtonClient.inline"
modules_ButtonClient_inline__P13342_pre:
    .section code
    .balign 4
modules_ButtonClient_inline__P13342_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word modules_ButtonClient_inline__P13342_args@fn
modules_ButtonClient_inline__P13342_args:
    cmp r4, #1
    bge modules_ButtonClient_inline__P13342_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_ButtonClient_inline__P13342_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_ButtonClient_inline__P13342:
modules_ButtonClient_inline__P13342_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ButtonClient_inline__P13342_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl modules_ButtonClient_handleEvent__P5162_nochk
_proccall1733:
    add sp, #4*2 ; pop locals 2
.ret.13342:
    @stackempty locals
    movs r0, #0
.final_0_378:
modules_ButtonClient_inline__P13342_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-button/client.ts(24,9): modules.ButtonClient.handleEvent
    ;
    .object modules_ButtonClient_handleEvent__P5162 "jacdac-button/client.ts(24,9): modules.ButtonClient.handleEvent"
modules_ButtonClient_handleEvent__P5162_pre:
    .section code
    .balign 4
modules_ButtonClient_handleEvent__P5162_args:
    cmp r4, #2
    bge modules_ButtonClient_handleEvent__P5162_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_ButtonClient_handleEvent__P5162_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_431:
 .word _str2
_ldlit_432:
 .word _str231
_ldlit_433:
 .word 686245063
_ldlit_434:
 .word modules_ButtonClient_inline__P13342_Lit
.object POP
    .section code
modules_ButtonClient_handleEvent__P5162:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ButtonClient__C3745_validate_80
    mov lr, r7
modules_ButtonClient_handleEvent__P5162_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_ButtonClient_handleEvent__P5162_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_eventCode__P2937
_proccall1734:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1735
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_379      
.jmpz1735:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1736
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_379      
.jmpz1736:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1737
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_379      
.jmpz1737:
    pop {r0} ; tmpref @1
    b .brk.13351      
.switch_0_379:
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #100]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_intData__P2944
_proccall1738:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.13351      
.switch_1_379:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #100]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_intData__P2944
_proccall1739:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.13351      
.switch_2_379:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #100]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #104]
    @stackempty locals
.brk.13351:
.ret.5162:
    @stackempty locals
    movs r0, #0
.final_3_379:
    add sp, #4*1 ; pop locals 1
modules_ButtonClient_handleEvent__P5162_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(209,9): jacdac.JDPacket.intData
    ;
    .object jacdac_JDPacket_intData__P2944 "jacdac/packet.ts(209,9): jacdac.JDPacket.intData"
jacdac_JDPacket_intData__P2944_pre:
    .section code
    .balign 4
jacdac_JDPacket_intData__P2944_args:
    cmp r4, #1
    bge jacdac_JDPacket_intData__P2944_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_intData__P2944_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_intData__P2944:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_intData__P2944_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_intData__P2944_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl jacdac_intOfBuffer__P2963
_proccall1740:
    add sp, #4*1 ; pop locals 1
.ret.2944:
    @stackempty locals
.final_0_380:
jacdac_JDPacket_intData__P2944_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(404,5): jacdac.intOfBuffer
    ;
    .object jacdac_intOfBuffer__P2963 "jacdac/packet.ts(404,5): jacdac.intOfBuffer"
jacdac_intOfBuffer__P2963_pre:
    .section code
    .balign 4
    .section code
jacdac_intOfBuffer__P2963:
jacdac_intOfBuffer__P2963_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_intOfBuffer__P2963_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_381      
.jmpz1741:
    movs r0, #0
    b .ret.2963      
.else_0_381:
.afterif_1_381:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1742
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_381      
.jmpz1742:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1743
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_381      
.jmpz1743:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1744
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_381      
.jmpz1744:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1745
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_381      
.jmpz1745:
    pop {r0} ; tmpref @1
    b .switch_6_381      
.switch_2_381:
.switch_3_381:
    movs r0, #3
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.13381      
.switch_4_381:
.switch_5_381:
    movs r0, #7
    str r0, [sp, locals@0]
    @stackempty locals
    b .brk.13381      
.switch_6_381:
    movs r0, #11
    str r0, [sp, locals@0]
    @stackempty locals
.brk.13381:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_77
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
.ret.2963:
    @stackempty locals
.final_7_381:
    add sp, #4*1 ; pop locals 1
jacdac_intOfBuffer__P2963_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-buzzer/client.ts(28,9): modules.BuzzerClient.playTone
    ;
    .object modules_BuzzerClient_playTone__P3775 "jacdac-buzzer/client.ts(28,9): modules.BuzzerClient.playTone"
modules_BuzzerClient_playTone__P3775_pre:
    .section code
    .balign 4
modules_BuzzerClient_playTone__P3775_args:
    cmp r4, #4
    bge modules_BuzzerClient_playTone__P3775_nochk
    push {lr}
    bl _expand_args_4_43
    bl modules_BuzzerClient_playTone__P3775_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
modules_BuzzerClient_playTone__P3775:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_BuzzerClient__C3773_validate_83
    mov lr, r7
modules_BuzzerClient_playTone__P3775_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_BuzzerClient_playTone__P3775_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl modules_tonePayload__P5168
_proccall1746:
    add sp, #4*3 ; pop locals 3
    push {r0} ; the one arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_from__P2916
_proccall1747:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Client_sendCommand__P3564_nochk
_proccall1748:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3775:
    @stackempty locals
    movs r0, #0
.final_0_382:
modules_BuzzerClient_playTone__P3775_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-buzzer/client.ts(2,5): modules.tonePayload
    ;
    .object modules_tonePayload__P5168 "jacdac-buzzer/client.ts(2,5): modules.tonePayload"
modules_tonePayload__P5168_pre:
    .section code
    .balign 4
    .section code
modules_tonePayload__P5168:
modules_tonePayload__P5168_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
modules_tonePayload__P5168_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_37
    ldr r0, _ldlit_436 ; 1000000      
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #23
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    ldr r0, _ldlit_437 ; _str232      
    push {r0} ; proc-arg
    bl jacdac_jdpack__P2967
_proccall1749:
    add sp, #4*2 ; pop locals 2
.ret.5168:
    @stackempty locals
.final_0_383:
    add sp, #4*2 ; pop locals 2
modules_tonePayload__P5168_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-buzzer/client.ts(14,9): modules.BuzzerClient.constructor
    ;
    .object modules_BuzzerClient_constructor__P3774 "jacdac-buzzer/client.ts(14,9): modules.BuzzerClient.constructor"
modules_BuzzerClient_constructor__P3774_pre:
    .section code
    .balign 4
    .section code
modules_BuzzerClient_constructor__P3774:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_BuzzerClient__C3773_validate_83
    mov lr, r7
modules_BuzzerClient_constructor__P3774_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_BuzzerClient_constructor__P3774_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_438 ; 917463983      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_constructor__P3550
_proccall1750:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3774:
    @stackempty locals
.final_0_384:
modules_BuzzerClient_constructor__P3774_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-braille-display/client.ts(73,9): modules.BrailleDisplayClient.showNumber
    ;
    .object modules_BrailleDisplayClient_showNumber__P3719 "jacdac-braille-display/client.ts(73,9): modules.BrailleDisplayClient.showNumber"
modules_BrailleDisplayClient_showNumber__P3719_pre:
    .section code
    .balign 4
modules_BrailleDisplayClient_showNumber__P3719_args:
    cmp r4, #2
    bge modules_BrailleDisplayClient_showNumber__P3719_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_BrailleDisplayClient_showNumber__P3719_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_BrailleDisplayClient_showNumber__P3719:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_BrailleDisplayClient__C3716_validate_84
    mov lr, r7
modules_BrailleDisplayClient_showNumber__P3719_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_BrailleDisplayClient_showNumber__P3719_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1752:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_385      
.jmpz1751:
    ldr r0, _ldlit_439 ; _str6      
    b .condexprfin_1_385      
.condexprz_0_385:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toString
    add sp, #4*1 ; pop locals 1
.condexprfin_1_385:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_BrailleDisplayClient_showString__P3718_nochk
_proccall1753:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3719:
    @stackempty locals
    movs r0, #0
.final_2_385:
modules_BrailleDisplayClient_showNumber__P3719_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-braille-display/client.ts(60,9): modules.BrailleDisplayClient.showString
    ;
    .object modules_BrailleDisplayClient_showString__P3718 "jacdac-braille-display/client.ts(60,9): modules.BrailleDisplayClient.showString"
modules_BrailleDisplayClient_showString__P3718_pre:
    .section code
    .balign 4
modules_BrailleDisplayClient_showString__P3718_args:
    cmp r4, #2
    bge modules_BrailleDisplayClient_showString__P3718_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_BrailleDisplayClient_showString__P3718_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_BrailleDisplayClient_showString__P3718:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_BrailleDisplayClient__C3716_validate_84
    mov lr, r7
modules_BrailleDisplayClient_showString__P3718_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_BrailleDisplayClient_showString__P3718_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl modules_brailify__P3715
_proccall1754:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_BrailleDisplayClient_setPatterns__P3723_nochk
_proccall1755:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_386      
.jmpz1756:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_BrailleDisplayClient_setEnabled__P3721_nochk
_proccall1757:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_386:
.afterif_1_386:
.ret.3718:
    @stackempty locals
    movs r0, #0
.final_2_386:
    add sp, #4*1 ; pop locals 1
modules_BrailleDisplayClient_showString__P3718_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-braille-display/client.ts(98,9): modules.BrailleDisplayClient.setEnabled
    ;
    .object modules_BrailleDisplayClient_setEnabled__P3721 "jacdac-braille-display/client.ts(98,9): modules.BrailleDisplayClient.setEnabled"
modules_BrailleDisplayClient_setEnabled__P3721_pre:
    .section code
    .balign 4
modules_BrailleDisplayClient_setEnabled__P3721_args:
    cmp r4, #2
    bge modules_BrailleDisplayClient_setEnabled__P3721_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_BrailleDisplayClient_setEnabled__P3721_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_BrailleDisplayClient_setEnabled__P3721:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_BrailleDisplayClient__C3716_validate_84
    mov lr, r7
modules_BrailleDisplayClient_setEnabled__P3721_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_BrailleDisplayClient_setEnabled__P3721_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1758:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3531
_proccall1759:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_387      
.jmpz1760:
    movs r0, #3
    b .condexprfin_1_387      
.condexprz_0_387:
    movs r0, #1
.condexprfin_1_387:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_values__P3532
_proccall1761:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3721:
    @stackempty locals
    movs r0, #0
.final_2_387:
    add sp, #4*1 ; pop locals 1
modules_BrailleDisplayClient_setEnabled__P3721_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-braille-display/client.ts(122,9): modules.BrailleDisplayClient.setPatterns
    ;
    .object modules_BrailleDisplayClient_setPatterns__P3723 "jacdac-braille-display/client.ts(122,9): modules.BrailleDisplayClient.setPatterns"
modules_BrailleDisplayClient_setPatterns__P3723_pre:
    .section code
    .balign 4
modules_BrailleDisplayClient_setPatterns__P3723_args:
    cmp r4, #2
    bge modules_BrailleDisplayClient_setPatterns__P3723_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_BrailleDisplayClient_setPatterns__P3723_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_BrailleDisplayClient_setPatterns__P3723:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_BrailleDisplayClient__C3716_validate_84
    mov lr, r7
modules_BrailleDisplayClient_setPatterns__P3723_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_BrailleDisplayClient_setPatterns__P3723_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall1762:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_BrailleDisplayClient_setEnabled__P3721_nochk
_proccall1763:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3531
_proccall1764:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_values__P3532
_proccall1765:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3723:
    @stackempty locals
    movs r0, #0
.final_0_388:
    add sp, #4*1 ; pop locals 1
modules_BrailleDisplayClient_setPatterns__P3723_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-braille-display/client.ts(5,5): modules.brailify
    ;
    .object modules_brailify__P3715 "jacdac-braille-display/client.ts(5,5): modules.brailify"
modules_brailify__P3715_pre:
    .section code
    .balign 4
    .section code
modules_brailify__P3715:
modules_brailify__P3715_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
modules_brailify__P3715_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_389      
.jmpz1766:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    b .ret.3715      
    b .afterif_1_389      
.object PUSH
.balign 4
_ldlit_436:
 .word 1000000
_ldlit_437:
 .word _str232
_ldlit_438:
 .word 917463983
_ldlit_439:
 .word _str6
.object POP
.else_0_389:
.afterif_1_389:
    ldr r0, _ldlit_441 ; _str230      
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_442 ; _str106      
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringToUpperCase__P2012
_proccall1767:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.13500:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1768
    b .brk.13500      
.jmpz1768:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@6]
    ldr r1, [sp, locals@1]
    bl _numops_subs
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #80
    lsls r1, r1, #8
    adds r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_389      
.jmpz1769:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_389      
.lazySkip_4_389:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #81
    lsls r1, r1, #8
    adds r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_3_389:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_389      
.jmpz1770:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    b .afterif_5_389      
.else_2_389:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@2]
    bl _cmp_lt
    beq .else_6_389      
.jmpz1771:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    b .afterif_7_389      
.else_6_389:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_16
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
.afterif_7_389:
.afterif_5_389:
.cont.13500:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
    b .fortop.13500      
.brk.13500:
    ldr r0, [sp, locals@3]
.ret.3715:
    @stackempty locals
.final_8_389:
    add sp, #4*8 ; pop locals 8
modules_brailify__P3715_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(406,5): helpers.stringToUpperCase
    ;
    .object helpers_stringToUpperCase__P2012 "core/pxt-helpers.ts(406,5): helpers.stringToUpperCase"
helpers_stringToUpperCase__P2012_pre:
    .section code
    .balign 4
    .section code
helpers_stringToUpperCase__P2012:
helpers_stringToUpperCase__P2012_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_stringToUpperCase__P2012_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.13551:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.13551      
.jmpz1772:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #195
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_390      
.jmpz1773:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_390      
.lazySkip_2_390:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #245
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_1_390:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_390      
.jmpz1774:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall1775:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #65
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
.else_0_390:
.afterif_3_390:
.cont.13551:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.13551      
.brk.13551:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2011
_proccall1776:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2012:
    @stackempty locals
.final_4_390:
    add sp, #4*4 ; pop locals 4
helpers_stringToUpperCase__P2012_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(37,9): machine.MicrobitMachine.onClient
    ;
    .object machine_MicrobitMachine_onClient__P5437 "runtime.ts(37,9): machine.MicrobitMachine.onClient"
machine_MicrobitMachine_onClient__P5437_pre:
    .section code
    .balign 4
machine_MicrobitMachine_onClient__P5437_args:
    cmp r4, #4
    bge machine_MicrobitMachine_onClient__P5437_nochk
    push {lr}
    bl _expand_args_4_43
    bl machine_MicrobitMachine_onClient__P5437_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
machine_MicrobitMachine_onClient__P5437:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_machine_MicrobitMachine__C5435_validate_6
    mov lr, r7
machine_MicrobitMachine_onClient__P5437_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
machine_MicrobitMachine_onClient__P5437_locals:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_subscribe__P3629_nochk
_proccall1777:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624
_proccall1778:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.5437:
    @stackempty locals
    movs r0, #0
.final_0_391:
    add sp, #4*1 ; pop locals 1
machine_MicrobitMachine_onClient__P5437_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_441:
 .word _str230
_ldlit_442:
 .word _str106
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-braille-display/client.ts(34,9): modules.BrailleDisplayClient.constructor
    ;
    .object modules_BrailleDisplayClient_constructor__P3717 "jacdac-braille-display/client.ts(34,9): modules.BrailleDisplayClient.constructor"
modules_BrailleDisplayClient_constructor__P3717_pre:
    .section code
    .balign 4
    .section code
modules_BrailleDisplayClient_constructor__P3717:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_BrailleDisplayClient__C3716_validate_84
    mov lr, r7
modules_BrailleDisplayClient_constructor__P3717_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_BrailleDisplayClient_constructor__P3717_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_444 ; 662663065      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_constructor__P3550
_proccall1779:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #113
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1780:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #57
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1781:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #64]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #115
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1782:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #68]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3717:
    @stackempty locals
.final_0_392:
modules_BrailleDisplayClient_constructor__P3717_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(98,5): machine.showNumber
    ;
    .object machine_showNumber__P4673 "runtime.ts(98,5): machine.showNumber"
machine_showNumber__P4673_pre:
    .section code
    .balign 4
    .section code
machine_showNumber__P4673:
machine_showNumber__P4673_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_showNumber__P4673_locals:
    movs r0, #29
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_eq
    beq .else_0_393      
.jmpz1783:
    bl machine_flushNumbers__P5446
_proccall1784:
    @stackempty locals
.else_0_393:
.afterif_1_393:
    movs r0, #1
    ldr r1, _ldlit_445 ; machine_showNumber_inline__P13651_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #29
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_arrayFind__P2003
_proccall1786:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_393      
.jmpz1785:
    ldr r0, _ldlit_446 ; machine_NumberToShow__C5443_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl machine_NumberToShow_constructor__P5444
_proccall1787:
    add sp, #4*3 ; pop locals 3
    movs r0, #29
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_393:
.afterif_3_393:
.ret.4673:
    @stackempty locals
    movs r0, #0
.final_4_393:
machine_showNumber__P4673_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(100,33): machine.showNumber.inline
    ;
    .object machine_showNumber_inline__P13651 "runtime.ts(100,33): machine.showNumber.inline"
machine_showNumber_inline__P13651_pre:
    .section code
    .balign 4
machine_showNumber_inline__P13651_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_showNumber_inline__P13651_args@fn
machine_showNumber_inline__P13651_args:
    cmp r4, #1
    bge machine_showNumber_inline__P13651_nochk
    push {lr}
    bl _expand_args_1_5
    bl machine_showNumber_inline__P13651_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
machine_showNumber_inline__P13651:
machine_showNumber_inline__P13651_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_showNumber_inline__P13651_locals:
    ldr r0, [sp, args@0]
    bl _inst_machine_NumberToShow__C5443_validate_85
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.13651:
    @stackempty locals
.final_0_394:
machine_showNumber_inline__P13651_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(77,9): machine.NumberToShow.constructor
    ;
    .object machine_NumberToShow_constructor__P5444 "runtime.ts(77,9): machine.NumberToShow.constructor"
machine_NumberToShow_constructor__P5444_pre:
    .section code
    .balign 4
    .section code
machine_NumberToShow_constructor__P5444:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_machine_NumberToShow__C5443_validate_85
    mov lr, r7
machine_NumberToShow_constructor__P5444_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_NumberToShow_constructor__P5444_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    movs r0, #0
.ret.5444:
    @stackempty locals
.final_0_395:
machine_NumberToShow_constructor__P5444_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(81,5): machine.flushNumbers
    ;
    .object machine_flushNumbers__P5446 "runtime.ts(81,5): machine.flushNumbers"
machine_flushNumbers__P5446_pre:
    .section code
    .balign 4
    .section code
machine_flushNumbers__P5446:
machine_flushNumbers__P5446_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_flushNumbers__P5446_locals:
    ldr r0, _ldlit_447 ; machine_flushNumbers_inline__P13670_Lit      
    push {r0} ; proc-arg
    bl control_runInBackground__P2298
_proccall1788:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5446:
    @stackempty locals
    movs r0, #0
.final_0_396:
machine_flushNumbers__P5446_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(82,33): machine.flushNumbers.inline
    ;
    .object machine_flushNumbers_inline__P13670 "runtime.ts(82,33): machine.flushNumbers.inline"
machine_flushNumbers_inline__P13670_pre:
    .section code
    .balign 4
machine_flushNumbers_inline__P13670_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_flushNumbers_inline__P13670_args@fn
machine_flushNumbers_inline__P13670_args:
    .section code
machine_flushNumbers_inline__P13670:
machine_flushNumbers_inline__P13670_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
machine_flushNumbers_inline__P13670_locals:
.cont.13671:
    movs r0, #29
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_gt
    beq .brk.13671      
.jmpz1789:
    movs r0, #29
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::pop
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_machine_NumberToShow__C5443_validate_85
    ldr r0, [r0, #4]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_machine_NumberToShow__C5443_validate_85
    ldr r0, [r0, #8]
    str r0, [sp, locals@2]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl led::stopAnimation
    @stackempty locals
    movs r0, #5
    lsls r0, r0, #8
    adds r0, #121
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl basic_showIcon__P2281
_proccall1790:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_397      
.jmpz1791:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_397      
.lazySkip_2_397:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #199
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_397:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_397      
.jmpz1792:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #45
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl basic_showNumber__P2226
_proccall1793:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_397      
.else_0_397:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl whaleysans_showNumber__P4664
_proccall1794:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #175
    lsls r0, r0, #2
    mov r7, sp
    str r7, [r6, #4]
    bl basic::pause
    @stackempty locals
.afterif_3_397:
    b .cont.13671      
.brk.13671:
.ret.13670:
    @stackempty locals
    movs r0, #0
.final_4_397:
    add sp, #4*3 ; pop locals 3
machine_flushNumbers_inline__P13670_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function whaleysans/WhaleySansFont.ts(36,5): whaleysans.showNumber
    ;
    .object whaleysans_showNumber__P4664 "whaleysans/WhaleySansFont.ts(36,5): whaleysans.showNumber"
whaleysans_showNumber__P4664_pre:
    .section code
    .balign 4
    .section code
whaleysans_showNumber__P4664:
whaleysans_showNumber__P4664_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
whaleysans_showNumber__P4664_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_398      
.jmpz1795:
    movs r0, #1
    str r0, [sp, args@0]
    @stackempty locals
    b .afterif_1_398      
.object PUSH
.balign 4
_ldlit_444:
 .word 662663065
_ldlit_445:
 .word machine_showNumber_inline__P13651_Lit
_ldlit_446:
 .word machine_NumberToShow__C5443_VT
_ldlit_447:
 .word machine_flushNumbers_inline__P13670_Lit
.object POP
.else_0_398:
.afterif_1_398:
    movs r0, #117
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_13
    movs r1, #10
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #117
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.13714:
    ldr r0, [sp, locals@2]
    movs r1, #11
    bl _cmp_lt
    bne .jmpz1796
    b .brk.13714      
.jmpz1796:
    ldr r7, [r6, #0]
    ldr r0, [r7, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    push {r0} ; proc-arg
    bl _conv_87
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    push {r0} ; proc-arg
    bl _conv_87
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    push {r0} ; proc-arg
    bl _conv_87
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    push {r0} ; proc-arg
    bl _conv_87
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::setPixel
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.13714:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.13714      
.brk.13714:
    ldr r7, [r6, #0]
    ldr r0, [r7, #20]
    push {r0} ; proc-arg
    bl _conv_88
    movs r1, #0
    movs r2, #10
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::showImage
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4664:
    @stackempty locals
    movs r0, #0
.final_2_398:
    add sp, #4*3 ; pop locals 3
whaleysans_showNumber__P4664_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/basic.ts(12,5): basic.showNumber
    ;
    .object basic_showNumber__P2226 "core/basic.ts(12,5): basic.showNumber"
basic_showNumber__P2226_pre:
    .section code
    .balign 4
    .section code
basic_showNumber__P2226:
basic_showNumber__P2226_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
basic_showNumber__P2226_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1798:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_399      
.jmpz1797:
    ldr r0, _ldlit_449 ; _str6      
    movs r1, #150
    mov r7, sp
    str r7, [r6, #4]
    bl basic::showString
    @stackempty locals
    b .afterif_1_399      
.else_0_399:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_roundWithPrecision__P2024
_proccall1799:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toString
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl basic::showString
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_399:
.ret.2226:
    @stackempty locals
    movs r0, #0
.final_2_399:
basic_showNumber__P2226_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-air-pressure/client.g.ts(45,9): modules.AirPressureClient.pressure
    ;
    .object modules_AirPressureClient_pressure__P3698 "jacdac-air-pressure/client.g.ts(45,9): modules.AirPressureClient.pressure"
modules_AirPressureClient_pressure__P3698_pre:
    .section code
    .balign 4
modules_AirPressureClient_pressure__P3698_args:
    cmp r4, #1
    bge modules_AirPressureClient_pressure__P3698_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_AirPressureClient_pressure__P3698_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_AirPressureClient_pressure__P3698:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_AirPressureClient__C3696_validate_89
    mov lr, r7
modules_AirPressureClient_pressure__P3698_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_AirPressureClient_pressure__P3698_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_reading__P3273_nochk
_proccall1800:
    add sp, #4*1 ; pop locals 1
.ret.3698:
    @stackempty locals
.final_0_400:
modules_AirPressureClient_pressure__P3698_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-air-pressure/client.g.ts(95,9): modules.AirPressureClient.onPressureChangedBy
    ;
    .object modules_AirPressureClient_onPressureChangedBy__P3702 "jacdac-air-pressure/client.g.ts(95,9): modules.AirPressureClient.onPressureChangedBy"
modules_AirPressureClient_onPressureChangedBy__P3702_pre:
    .section code
    .balign 4
modules_AirPressureClient_onPressureChangedBy__P3702_args:
    cmp r4, #3
    bge modules_AirPressureClient_onPressureChangedBy__P3702_nochk
    push {lr}
    bl _expand_args_3_7
    bl modules_AirPressureClient_onPressureChangedBy__P3702_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
modules_AirPressureClient_onPressureChangedBy__P3702:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_AirPressureClient__C3696_validate_89
    mov lr, r7
modules_AirPressureClient_onPressureChangedBy__P3702_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_AirPressureClient_onPressureChangedBy__P3702_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_onReadingChangedBy__P3274_nochk
_proccall1801:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3702:
    @stackempty locals
    movs r0, #0
.final_0_401:
modules_AirPressureClient_onPressureChangedBy__P3702_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-air-pressure/client.g.ts(11,9): modules.AirPressureClient.constructor
    ;
    .object modules_AirPressureClient_constructor__P3697 "jacdac-air-pressure/client.g.ts(11,9): modules.AirPressureClient.constructor"
modules_AirPressureClient_constructor__P3697_pre:
    .section code
    .balign 4
    .section code
modules_AirPressureClient_constructor__P3697:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_AirPressureClient__C3696_validate_89
    mov lr, r7
modules_AirPressureClient_constructor__P3697_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_AirPressureClient_constructor__P3697_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    movs r0, #59
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_450 ; 1008925141      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_constructor__P3271
_proccall1802:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #119
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #13
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1803:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #15
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1804:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #100]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #121
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1805:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3697:
    @stackempty locals
.final_0_402:
modules_AirPressureClient_constructor__P3697_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-accelerometer/client.g.ts(152,9): modules.AccelerometerClient.onTiltDown
    ;
    .object modules_AccelerometerClient_onTiltDown__P3671 "jacdac-accelerometer/client.g.ts(152,9): modules.AccelerometerClient.onTiltDown"
modules_AccelerometerClient_onTiltDown__P3671_pre:
    .section code
    .balign 4
modules_AccelerometerClient_onTiltDown__P3671_args:
    cmp r4, #2
    bge modules_AccelerometerClient_onTiltDown__P3671_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_AccelerometerClient_onTiltDown__P3671_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_AccelerometerClient_onTiltDown__P3671:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_AccelerometerClient__C3660_validate_90
    mov lr, r7
modules_AccelerometerClient_onTiltDown__P3671_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_AccelerometerClient_onTiltDown__P3671_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_registerEvent__P4981_nochk
_proccall1806:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3671:
    @stackempty locals
    movs r0, #0
.final_0_403:
modules_AccelerometerClient_onTiltDown__P3671_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-accelerometer/client.g.ts(144,9): modules.AccelerometerClient.onTiltUp
    ;
    .object modules_AccelerometerClient_onTiltUp__P3670 "jacdac-accelerometer/client.g.ts(144,9): modules.AccelerometerClient.onTiltUp"
modules_AccelerometerClient_onTiltUp__P3670_pre:
    .section code
    .balign 4
modules_AccelerometerClient_onTiltUp__P3670_args:
    cmp r4, #2
    bge modules_AccelerometerClient_onTiltUp__P3670_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_AccelerometerClient_onTiltUp__P3670_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_AccelerometerClient_onTiltUp__P3670:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_AccelerometerClient__C3660_validate_90
    mov lr, r7
modules_AccelerometerClient_onTiltUp__P3670_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_AccelerometerClient_onTiltUp__P3670_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_registerEvent__P4981_nochk
_proccall1807:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3670:
    @stackempty locals
    movs r0, #0
.final_0_404:
modules_AccelerometerClient_onTiltUp__P3670_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-accelerometer/client.g.ts(168,9): modules.AccelerometerClient.onTiltRight
    ;
    .object modules_AccelerometerClient_onTiltRight__P3673 "jacdac-accelerometer/client.g.ts(168,9): modules.AccelerometerClient.onTiltRight"
modules_AccelerometerClient_onTiltRight__P3673_pre:
    .section code
    .balign 4
modules_AccelerometerClient_onTiltRight__P3673_args:
    cmp r4, #2
    bge modules_AccelerometerClient_onTiltRight__P3673_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_AccelerometerClient_onTiltRight__P3673_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_AccelerometerClient_onTiltRight__P3673:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_AccelerometerClient__C3660_validate_90
    mov lr, r7
modules_AccelerometerClient_onTiltRight__P3673_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_AccelerometerClient_onTiltRight__P3673_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_registerEvent__P4981_nochk
_proccall1808:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3673:
    @stackempty locals
    movs r0, #0
.final_0_405:
modules_AccelerometerClient_onTiltRight__P3673_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/icons.ts(205,5): basic.showArrow
    ;
    .object basic_showArrow__P2282 "core/icons.ts(205,5): basic.showArrow"
basic_showArrow__P2282_pre:
    .section code
    .balign 4
    .section code
basic_showArrow__P2282:
basic_showArrow__P2282_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
basic_showArrow__P2282_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl images_arrowImage__P2284
_proccall1809:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_91
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::showImage
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2282:
    @stackempty locals
    movs r0, #0
.final_0_406:
    add sp, #4*1 ; pop locals 1
basic_showArrow__P2282_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/icons.ts(217,5): images.arrowImage
    ;
    .object images_arrowImage__P2284 "core/icons.ts(217,5): images.arrowImage"
images_arrowImage__P2284_pre:
    .section code
    .balign 4
    .section code
images_arrowImage__P2284:
images_arrowImage__P2284_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
images_arrowImage__P2284_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1810
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_407      
.jmpz1810:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1811
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_407      
.jmpz1811:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1812
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_407      
.jmpz1812:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1813
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_407      
.jmpz1813:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1814
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_407      
.jmpz1814:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1815
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_407      
.jmpz1815:
    movs r0, #13
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1816
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_407      
.jmpz1816:
    movs r0, #15
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1817
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_407      
.jmpz1817:
    pop {r0} ; tmpref @1
    b .switch_8_407      
.object PUSH
.balign 4
_ldlit_449:
 .word _str6
_ldlit_450:
 .word 1008925141
.object POP
.switch_0_407:
    ldr r0, _ldlit_452 ; _img7      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2284      
.switch_1_407:
    ldr r0, _ldlit_453 ; _img8      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2284      
.switch_2_407:
    ldr r0, _ldlit_454 ; _img9      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2284      
.switch_3_407:
    ldr r0, _ldlit_455 ; _img10      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2284      
.switch_4_407:
    ldr r0, _ldlit_456 ; _img11      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2284      
.switch_5_407:
    ldr r0, _ldlit_457 ; _img12      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2284      
.switch_6_407:
    ldr r0, _ldlit_458 ; _img13      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2284      
.switch_7_407:
    ldr r0, _ldlit_459 ; _img14      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2284      
.switch_8_407:
    ldr r0, _ldlit_460 ; _img15      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2284      
.brk.13865:
    movs r0, #0
.ret.2284:
    @stackempty locals
.final_9_407:
images_arrowImage__P2284_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-accelerometer/client.g.ts(160,9): modules.AccelerometerClient.onTiltLeft
    ;
    .object modules_AccelerometerClient_onTiltLeft__P3672 "jacdac-accelerometer/client.g.ts(160,9): modules.AccelerometerClient.onTiltLeft"
modules_AccelerometerClient_onTiltLeft__P3672_pre:
    .section code
    .balign 4
modules_AccelerometerClient_onTiltLeft__P3672_args:
    cmp r4, #2
    bge modules_AccelerometerClient_onTiltLeft__P3672_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_AccelerometerClient_onTiltLeft__P3672_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_AccelerometerClient_onTiltLeft__P3672:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_AccelerometerClient__C3660_validate_90
    mov lr, r7
modules_AccelerometerClient_onTiltLeft__P3672_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_AccelerometerClient_onTiltLeft__P3672_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_registerEvent__P4981_nochk
_proccall1818:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3672:
    @stackempty locals
    movs r0, #0
.final_0_408:
modules_AccelerometerClient_onTiltLeft__P3672_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-accelerometer/client.g.ts(176,9): modules.AccelerometerClient.onFaceUp
    ;
    .object modules_AccelerometerClient_onFaceUp__P3674 "jacdac-accelerometer/client.g.ts(176,9): modules.AccelerometerClient.onFaceUp"
modules_AccelerometerClient_onFaceUp__P3674_pre:
    .section code
    .balign 4
modules_AccelerometerClient_onFaceUp__P3674_args:
    cmp r4, #2
    bge modules_AccelerometerClient_onFaceUp__P3674_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_AccelerometerClient_onFaceUp__P3674_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_AccelerometerClient_onFaceUp__P3674:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_AccelerometerClient__C3660_validate_90
    mov lr, r7
modules_AccelerometerClient_onFaceUp__P3674_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_AccelerometerClient_onFaceUp__P3674_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_registerEvent__P4981_nochk
_proccall1819:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3674:
    @stackempty locals
    movs r0, #0
.final_0_409:
modules_AccelerometerClient_onFaceUp__P3674_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/icons.ts(190,5): basic.showIcon
    ;
    .object basic_showIcon__P2281 "core/icons.ts(190,5): basic.showIcon"
basic_showIcon__P2281_pre:
    .section code
    .balign 4
    .section code
basic_showIcon__P2281:
basic_showIcon__P2281_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
basic_showIcon__P2281_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl images_iconImage__P2285
_proccall1820:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_91
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::showImage
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2281:
    @stackempty locals
    movs r0, #0
.final_0_410:
    add sp, #4*1 ; pop locals 1
basic_showIcon__P2281_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/icons.ts(285,5): images.iconImage
    ;
    .object images_iconImage__P2285 "core/icons.ts(285,5): images.iconImage"
images_iconImage__P2285_pre:
    .section code
    .balign 4
    .section code
images_iconImage__P2285:
images_iconImage__P2285_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
images_iconImage__P2285_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1821
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_411      
.jmpz1821:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1822
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_411      
.jmpz1822:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1823
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_411      
.jmpz1823:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1824
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_411      
.jmpz1824:
    movs r0, #13
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1825
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_411      
.jmpz1825:
    movs r0, #15
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1826
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_411      
.jmpz1826:
    movs r0, #17
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1827
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_411      
.jmpz1827:
    movs r0, #19
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1828
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_411      
.jmpz1828:
    movs r0, #21
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1829
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_8_411      
.jmpz1829:
    movs r0, #23
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1830
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_9_411      
.jmpz1830:
    movs r0, #25
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1831
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_10_411      
.jmpz1831:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1832
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_11_411      
.jmpz1832:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1833
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_12_411      
.jmpz1833:
    movs r0, #67
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1834
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_411      
.jmpz1834:
    movs r0, #69
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1835
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_14_411      
.jmpz1835:
    movs r0, #71
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1836
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_15_411      
.jmpz1836:
    movs r0, #73
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1837
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_16_411      
.jmpz1837:
    movs r0, #75
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1838
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_17_411      
.jmpz1838:
    movs r0, #77
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1839
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_18_411      
.jmpz1839:
    movs r0, #79
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1840
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_19_411      
.jmpz1840:
    movs r0, #81
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1841
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_20_411      
.jmpz1841:
    movs r0, #27
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1842
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_21_411      
.jmpz1842:
    movs r0, #29
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1843
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_22_411      
.jmpz1843:
    movs r0, #31
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1844
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_23_411      
.jmpz1844:
    movs r0, #33
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1845
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_24_411      
.jmpz1845:
    movs r0, #35
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1846
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_25_411      
.object PUSH
.balign 4
_ldlit_452:
 .word _img7
_ldlit_453:
 .word _img8
_ldlit_454:
 .word _img9
_ldlit_455:
 .word _img10
_ldlit_456:
 .word _img11
_ldlit_457:
 .word _img12
_ldlit_458:
 .word _img13
_ldlit_459:
 .word _img14
_ldlit_460:
 .word _img15
.object POP
.jmpz1846:
    movs r0, #37
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1847
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_26_411      
.jmpz1847:
    movs r0, #39
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1848
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_27_411      
.jmpz1848:
    movs r0, #41
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1849
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_28_411      
.jmpz1849:
    movs r0, #43
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1850
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_29_411      
.jmpz1850:
    movs r0, #45
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1851
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_30_411      
.jmpz1851:
    movs r0, #47
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1852
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_31_411      
.jmpz1852:
    movs r0, #49
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1853
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_32_411      
.jmpz1853:
    movs r0, #51
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1854
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_33_411      
.jmpz1854:
    movs r0, #53
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1855
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_34_411      
.jmpz1855:
    movs r0, #55
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1856
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_35_411      
.jmpz1856:
    movs r0, #57
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1857
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_36_411      
.jmpz1857:
    movs r0, #61
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1858
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_37_411      
.jmpz1858:
    movs r0, #59
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1859
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_38_411      
.jmpz1859:
    movs r0, #63
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1860
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_39_411      
.jmpz1860:
    movs r0, #65
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1861
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_40_411      
.jmpz1861:
    pop {r0} ; tmpref @1
    b .switch_41_411      
.switch_0_411:
    ldr r0, _ldlit_462 ; _img16      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_1_411:
    ldr r0, _ldlit_463 ; _img17      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_2_411:
    ldr r0, _ldlit_464 ; _img18      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_3_411:
    ldr r0, _ldlit_465 ; _img19      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_4_411:
    ldr r0, _ldlit_466 ; _img20      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_5_411:
    ldr r0, _ldlit_467 ; _img21      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_6_411:
    ldr r0, _ldlit_468 ; _img22      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_7_411:
    ldr r0, _ldlit_469 ; _img23      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_8_411:
    ldr r0, _ldlit_470 ; _img24      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_9_411:
    ldr r0, _ldlit_471 ; _img25      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_10_411:
    ldr r0, _ldlit_472 ; _img26      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_11_411:
    ldr r0, _ldlit_473 ; _img27      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_12_411:
    ldr r0, _ldlit_474 ; _img28      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_13_411:
    ldr r0, _ldlit_475 ; _img29      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_14_411:
    ldr r0, _ldlit_476 ; _img30      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_15_411:
    ldr r0, _ldlit_477 ; _img31      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_16_411:
    ldr r0, _ldlit_478 ; _img32      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_17_411:
    ldr r0, _ldlit_479 ; _img33      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_18_411:
    ldr r0, _ldlit_480 ; _img34      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_19_411:
    ldr r0, _ldlit_481 ; _img35      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_20_411:
    ldr r0, _ldlit_482 ; _img36      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_21_411:
    ldr r0, _ldlit_483 ; _img37      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_22_411:
    ldr r0, _ldlit_484 ; _img38      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_23_411:
    ldr r0, _ldlit_485 ; _img39      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_24_411:
    ldr r0, _ldlit_486 ; _img40      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_25_411:
    ldr r0, _ldlit_487 ; _img41      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_26_411:
    ldr r0, _ldlit_488 ; _img42      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_27_411:
    ldr r0, _ldlit_489 ; _img43      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_28_411:
    ldr r0, _ldlit_490 ; _img44      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_29_411:
    ldr r0, _ldlit_491 ; _img45      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_30_411:
    ldr r0, _ldlit_492 ; _img46      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_31_411:
    ldr r0, _ldlit_493 ; _img47      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_32_411:
    ldr r0, _ldlit_494 ; _img48      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_33_411:
    ldr r0, _ldlit_495 ; _img49      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_34_411:
    ldr r0, _ldlit_496 ; _img50      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_35_411:
    ldr r0, _ldlit_497 ; _img51      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_36_411:
    ldr r0, _ldlit_498 ; _img52      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_37_411:
    ldr r0, _ldlit_499 ; _img53      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_38_411:
    ldr r0, _ldlit_500 ; _img54      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_39_411:
    ldr r0, _ldlit_501 ; _img55      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_40_411:
    ldr r0, _ldlit_502 ; _img56      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.switch_41_411:
    ldr r0, _ldlit_503 ; _img57      
    mov r7, sp
    str r7, [r6, #4]
    bl images::createImage
    b .ret.2285      
.brk.13913:
    movs r0, #0
.ret.2285:
    @stackempty locals
.final_42_411:
images_iconImage__P2285_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-accelerometer/client.g.ts(184,9): modules.AccelerometerClient.onFaceDown
    ;
    .object modules_AccelerometerClient_onFaceDown__P3675 "jacdac-accelerometer/client.g.ts(184,9): modules.AccelerometerClient.onFaceDown"
modules_AccelerometerClient_onFaceDown__P3675_pre:
    .section code
    .balign 4
modules_AccelerometerClient_onFaceDown__P3675_args:
    cmp r4, #2
    bge modules_AccelerometerClient_onFaceDown__P3675_nochk
    push {lr}
    bl _expand_args_2_1
    bl modules_AccelerometerClient_onFaceDown__P3675_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_AccelerometerClient_onFaceDown__P3675:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_AccelerometerClient__C3660_validate_90
    mov lr, r7
modules_AccelerometerClient_onFaceDown__P3675_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_AccelerometerClient_onFaceDown__P3675_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #13
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_registerEvent__P4981_nochk
_proccall1862:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3675:
    @stackempty locals
    movs r0, #0
.final_0_412:
modules_AccelerometerClient_onFaceDown__P3675_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_462:
 .word _img16
_ldlit_463:
 .word _img17
_ldlit_464:
 .word _img18
_ldlit_465:
 .word _img19
_ldlit_466:
 .word _img20
_ldlit_467:
 .word _img21
_ldlit_468:
 .word _img22
_ldlit_469:
 .word _img23
_ldlit_470:
 .word _img24
_ldlit_471:
 .word _img25
_ldlit_472:
 .word _img26
_ldlit_473:
 .word _img27
_ldlit_474:
 .word _img28
_ldlit_475:
 .word _img29
_ldlit_476:
 .word _img30
_ldlit_477:
 .word _img31
_ldlit_478:
 .word _img32
_ldlit_479:
 .word _img33
_ldlit_480:
 .word _img34
_ldlit_481:
 .word _img35
_ldlit_482:
 .word _img36
_ldlit_483:
 .word _img37
_ldlit_484:
 .word _img38
_ldlit_485:
 .word _img39
_ldlit_486:
 .word _img40
_ldlit_487:
 .word _img41
_ldlit_488:
 .word _img42
_ldlit_489:
 .word _img43
_ldlit_490:
 .word _img44
_ldlit_491:
 .word _img45
_ldlit_492:
 .word _img46
_ldlit_493:
 .word _img47
_ldlit_494:
 .word _img48
_ldlit_495:
 .word _img49
_ldlit_496:
 .word _img50
_ldlit_497:
 .word _img51
_ldlit_498:
 .word _img52
_ldlit_499:
 .word _img53
_ldlit_500:
 .word _img54
_ldlit_501:
 .word _img55
_ldlit_502:
 .word _img56
_ldlit_503:
 .word _img57
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-accelerometer/client.g.ts(11,9): modules.AccelerometerClient.constructor
    ;
    .object modules_AccelerometerClient_constructor__P3661 "jacdac-accelerometer/client.g.ts(11,9): modules.AccelerometerClient.constructor"
modules_AccelerometerClient_constructor__P3661_pre:
    .section code
    .balign 4
    .section code
modules_AccelerometerClient_constructor__P3661:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_AccelerometerClient__C3660_validate_90
    mov lr, r7
modules_AccelerometerClient_constructor__P3661_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_AccelerometerClient_constructor__P3661_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #61
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_505 ; 1042810899      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_constructor__P3266
_proccall1863:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #123
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #13
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1864:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #92]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #31
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #17
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1865:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #125
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #21
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4978_nochk
_proccall1866:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #100]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3661:
    @stackempty locals
.final_0_413:
modules_AccelerometerClient_constructor__P3661_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(162,5): machine.addClientFactory
    ;
    .object machine_addClientFactory__P4677 "runtime.ts(162,5): machine.addClientFactory"
machine_addClientFactory__P4677_pre:
    .section code
    .balign 4
    .section code
machine_addClientFactory__P4677:
machine_addClientFactory__P4677_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
machine_addClientFactory__P4677_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_506 ; _str248      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl console_log__P2383
_proccall1867:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_507 ; machine_ClientFactory__C5462_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl machine_ClientFactory_constructor__P5463
_proccall1868:
    add sp, #4*3 ; pop locals 3
    movs r0, #63
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_414      
.jmpz1869:
    ldr r0, _ldlit_508 ; machine_startClients__P5466_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayForEach__P2001
_proccall1870:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_414:
.afterif_1_414:
.ret.4677:
    @stackempty locals
    movs r0, #0
.final_2_414:
    add sp, #4*1 ; pop locals 1
machine_addClientFactory__P4677_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(194,5): machine.startClients
    ;
    .object machine_startClients__P5466 "runtime.ts(194,5): machine.startClients"
machine_startClients__P5466_pre:
    .section code
    .balign 4
machine_startClients__P5466_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_startClients__P5466_args@fn
machine_startClients__P5466_args:
    cmp r4, #1
    bge machine_startClients__P5466_nochk
    push {lr}
    bl _expand_args_1_5
    bl machine_startClients__P5466_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
machine_startClients__P5466:
machine_startClients__P5466_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
machine_startClients__P5466_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl machine_ignoreDevice__P4676
_proccall1872:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_415      
.jmpz1871:
    b .ret.5466      
.else_0_415:
.afterif_1_415:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_415      
.jmpz1873:
    movs r0, #3
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.14111:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassLength__P3586
_proccall1875:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.14111      
.jmpz1874:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl machine_startClient__P5465
_proccall1876:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.14111:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.14111      
.brk.14111:
.else_2_415:
.afterif_3_415:
.ret.5466:
    @stackempty locals
    movs r0, #0
.final_4_415:
    add sp, #4*1 ; pop locals 1
machine_startClients__P5466_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(178,5): machine.startClient
    ;
    .object machine_startClient__P5465 "runtime.ts(178,5): machine.startClient"
machine_startClient__P5465_pre:
    .section code
    .balign 4
    .section code
machine_startClient__P5465:
machine_startClient__P5465_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
machine_startClient__P5465_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassAt__P3588
_proccall1877:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_509 ; factory_inline__P14129_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #63
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl helpers_arrayFind__P2003
_proccall1878:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_416      
.jmpz1879:
    ldr r0, _ldlit_510 ; machine_SonifyOptions__C4685_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl machine_SonifyOptions_constructor__P4690
_proccall1880:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    movs r1, #164
    bl _ifacecall4__92
_proccall1881:
    add sp, #4*4 ; pop locals 4
    b .ret.5465      
.else_0_416:
.afterif_1_416:
    movs r0, #6
.ret.5465:
    @stackempty locals
.final_2_416:
    add sp, #4*3 ; pop locals 3
machine_startClient__P5465_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(183,40): factory.inline
    ;
    .object factory_inline__P14129 "runtime.ts(183,40): factory.inline"
factory_inline__P14129_pre:
    .section code
    .balign 4
factory_inline__P14129_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word factory_inline__P14129_args@fn
factory_inline__P14129_args:
    cmp r4, #1
    bge factory_inline__P14129_nochk
    push {lr}
    bl _expand_args_1_5
    bl factory_inline__P14129_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
factory_inline__P14129:
factory_inline__P14129_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
factory_inline__P14129_locals:
    ldr r0, [sp, args@0]
    bl _inst_machine_ClientFactory__C5462_validate_93
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.14129:
    @stackempty locals
.final_0_417:
factory_inline__P14129_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_505:
 .word 1042810899
_ldlit_506:
 .word _str248
_ldlit_507:
 .word machine_ClientFactory__C5462_VT
_ldlit_508:
 .word machine_startClients__P5466_Lit
_ldlit_509:
 .word factory_inline__P14129_Lit
_ldlit_510:
 .word machine_SonifyOptions__C4685_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function microbit.ts(10,9): machine.SonifyOptions.constructor
    ;
    .object machine_SonifyOptions_constructor__P4690 "microbit.ts(10,9): machine.SonifyOptions.constructor"
machine_SonifyOptions_constructor__P4690_pre:
    .section code
    .balign 4
    .section code
machine_SonifyOptions_constructor__P4690:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_machine_SonifyOptions__C4685_validate_81
    mov lr, r7
machine_SonifyOptions_constructor__P4690_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_SonifyOptions_constructor__P4690_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #9
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #1
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #201
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4690:
    @stackempty locals
.final_0_418:
machine_SonifyOptions_constructor__P4690_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(137,5): machine.ignoreDevice
    ;
    .object machine_ignoreDevice__P4676 "runtime.ts(137,5): machine.ignoreDevice"
machine_ignoreDevice__P4676_pre:
    .section code
    .balign 4
    .section code
machine_ignoreDevice__P4676:
machine_ignoreDevice__P4676_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_ignoreDevice__P4676_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465
_proccall1883:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_419      
.jmpz1882:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_419      
.lazySkip_1_419:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_512 ; 1009456087      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_hasService__P3594
_proccall1884:
    add sp, #4*2 ; pop locals 2
.lazy_0_419:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_419      
.jmpz1885:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_419      
.lazySkip_3_419:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, _ldlit_513 ; 769864339      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_hasService__P3594
_proccall1886:
    add sp, #4*2 ; pop locals 2
.lazy_2_419:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_5_419      
.jmpz1887:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_419      
.lazySkip_5_419:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
    ldr r1, _ldlit_514 ; machine_ignoreDevice_inline__P14186_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #44]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arraySome__P1999
_proccall1888:
    add sp, #4*2 ; pop locals 2
.lazy_4_419:
; jmp value (already in r0)
.ret.4676:
    @stackempty locals
.final_6_419:
machine_ignoreDevice__P4676_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(145,17): machine.ignoreDevice.inline
    ;
    .object machine_ignoreDevice_inline__P14186 "runtime.ts(145,17): machine.ignoreDevice.inline"
machine_ignoreDevice_inline__P14186_pre:
    .section code
    .balign 4
machine_ignoreDevice_inline__P14186_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_ignoreDevice_inline__P14186_args@fn
machine_ignoreDevice_inline__P14186_args:
    cmp r4, #1
    bge machine_ignoreDevice_inline__P14186_nochk
    push {lr}
    bl _expand_args_1_5
    bl machine_ignoreDevice_inline__P14186_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
machine_ignoreDevice_inline__P14186:
machine_ignoreDevice_inline__P14186_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_ignoreDevice_inline__P14186_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_roleName__P3552
_proccall1889:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    bl _conv_4
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.ret.14186:
    @stackempty locals
.final_0_420:
machine_ignoreDevice_inline__P14186_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(239,5): helpers.arraySome
    ;
    .object helpers_arraySome__P1999 "core/pxt-helpers.ts(239,5): helpers.arraySome"
helpers_arraySome__P1999_pre:
    .section code
    .balign 4
    .section code
helpers_arraySome__P1999:
helpers_arraySome__P1999_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySome__P1999_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.14202:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.14202      
.jmpz1890:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_15
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_421      
.jmpz1891:
    movs r0, #66
    b .ret.1999      
.else_0_421:
.afterif_1_421:
.cont.14202:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.14202      
.brk.14202:
    movs r0, #10
.ret.1999:
    @stackempty locals
.final_2_421:
    add sp, #4*2 ; pop locals 2
helpers_arraySome__P1999_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(151,9): machine.ClientFactory.constructor
    ;
    .object machine_ClientFactory_constructor__P5463 "runtime.ts(151,9): machine.ClientFactory.constructor"
machine_ClientFactory_constructor__P5463_pre:
    .section code
    .balign 4
    .section code
machine_ClientFactory_constructor__P5463:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_machine_ClientFactory__C5462_validate_93
    mov lr, r7
machine_ClientFactory_constructor__P5463_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_ClientFactory_constructor__P5463_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    movs r0, #0
.ret.5463:
    @stackempty locals
.final_0_422:
machine_ClientFactory_constructor__P5463_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(211,5): machine.start
    ;
    .object machine_start__P5468 "runtime.ts(211,5): machine.start"
machine_start__P5468_pre:
    .section code
    .balign 4
    .section code
machine_start__P5468:
machine_start__P5468_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_start__P5468_locals:
    ldr r0, _ldlit_515 ; machine_startClients__P5466_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624
_proccall1893:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, _ldlit_516 ; machine_destroyClients__P5467_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624
_proccall1894:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #4
    lsls r0, r0, #8
    adds r0, #177
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    bl basic_showIcon__P2281
_proccall1895:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5468:
    @stackempty locals
    movs r0, #0
.final_0_423:
machine_start__P5468_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(203,5): machine.destroyClients
    ;
    .object machine_destroyClients__P5467 "runtime.ts(203,5): machine.destroyClients"
machine_destroyClients__P5467_pre:
    .section code
    .balign 4
machine_destroyClients__P5467_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_destroyClients__P5467_args@fn
machine_destroyClients__P5467_args:
    cmp r4, #1
    bge machine_destroyClients__P5467_nochk
    push {lr}
    bl _expand_args_1_5
    bl machine_destroyClients__P5467_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
machine_destroyClients__P5467:
machine_destroyClients__P5467_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
machine_destroyClients__P5467_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #44]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySlice__P2007
_proccall1896:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_517 ; forEach_inline__P14237_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P2002
_proccall1897:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, _ldlit_518 ; machine_destroyClients_inline__P14243_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P2001
_proccall1898:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5467:
    @stackempty locals
    movs r0, #0
.final_0_424:
    add sp, #4*2 ; pop locals 2
machine_destroyClients__P5467_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(207,21): forEach.inline
    ;
    .object forEach_inline__P14237 "runtime.ts(207,21): forEach.inline"
forEach_inline__P14237_pre:
    .section code
    .balign 4
forEach_inline__P14237_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word forEach_inline__P14237_args@fn
forEach_inline__P14237_args:
    cmp r4, #1
    bge forEach_inline__P14237_nochk
    push {lr}
    bl _expand_args_1_5
    bl forEach_inline__P14237_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
forEach_inline__P14237:
forEach_inline__P14237_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
forEach_inline__P14237_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_roleName__P3552
_proccall1899:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.14237:
    @stackempty locals
.final_0_425:
forEach_inline__P14237_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(208,22): machine.destroyClients.inline
    ;
    .object machine_destroyClients_inline__P14243 "runtime.ts(208,22): machine.destroyClients.inline"
machine_destroyClients_inline__P14243_pre:
    .section code
    .balign 4
machine_destroyClients_inline__P14243_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_destroyClients_inline__P14243_args@fn
machine_destroyClients_inline__P14243_args:
    cmp r4, #1
    bge machine_destroyClients_inline__P14243_nochk
    push {lr}
    bl _expand_args_1_5
    bl machine_destroyClients_inline__P14243_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
machine_destroyClients_inline__P14243:
machine_destroyClients_inline__P14243_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_destroyClients_inline__P14243_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_destroy__P3569
_proccall1900:
    add sp, #4*1 ; pop locals 1
.ret.14243:
    @stackempty locals
    movs r0, #0
.final_0_426:
machine_destroyClients_inline__P14243_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1272,9): jacdac.Client.destroy
    ;
    .object jacdac_Client_destroy__P3569 "jacdac/routing.ts(1272,9): jacdac.Client.destroy"
jacdac_Client_destroy__P3569_pre:
    .section code
    .balign 4
jacdac_Client_destroy__P3569_args:
    cmp r4, #1
    bge jacdac_Client_destroy__P3569_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Client_destroy__P3569_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_destroy__P3569:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_destroy__P3569_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Client_destroy__P3569_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_427      
.jmpz1901:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    b .afterif_1_427      
.object PUSH
.balign 4
_ldlit_512:
 .word 1009456087
_ldlit_513:
 .word 769864339
_ldlit_514:
 .word machine_ignoreDevice_inline__P14186_Lit
_ldlit_515:
 .word machine_startClients__P5466_Lit
_ldlit_516:
 .word machine_destroyClients__P5467_Lit
_ldlit_517:
 .word forEach_inline__P14237_Lit
_ldlit_518:
 .word machine_destroyClients_inline__P14243_Lit
.object POP
.else_0_427:
.afterif_1_427:
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #20]
    @stackempty locals
    movs r0, #6
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_device__P3555_nochk
_proccall1902:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_427      
.jmpz1903:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #40]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.14264:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.14264      
.jmpz1904:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, _ldlit_520 ; 122881      
    ldr r1, [sp, locals@0]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, _ldlit_521 ; jacdac_unregisteredNoop__P5098_Lit      
    push {r0} ; proc-arg
    bl _conv_60
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.14264:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.14264      
.brk.14264:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #40]
    @stackempty locals
.else_2_427:
.afterif_3_427:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_destroyClient__P3473
_proccall1905:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3569:
    @stackempty locals
    movs r0, #0
.final_4_427:
    add sp, #4*3 ; pop locals 3
jacdac_Client_destroy__P3569_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(193,9): jacdac.Bus.destroyClient
    ;
    .object jacdac_Bus_destroyClient__P3473 "jacdac/routing.ts(193,9): jacdac.Bus.destroyClient"
jacdac_Bus_destroyClient__P3473_pre:
    .section code
    .balign 4
jacdac_Bus_destroyClient__P3473_args:
    cmp r4, #2
    bge jacdac_Bus_destroyClient__P3473_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Bus_destroyClient__P3473_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_destroyClient__P3473:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_destroyClient__P3473_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_destroyClient__P3473_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_clearAttachCache__P3467_nochk
_proccall1906:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3473:
    @stackempty locals
    movs r0, #0
.final_0_428:
jacdac_Bus_destroyClient__P3473_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1036,5): jacdac.unregisteredNoop
    ;
    .object jacdac_unregisteredNoop__P5098 "jacdac/routing.ts(1036,5): jacdac.unregisteredNoop"
jacdac_unregisteredNoop__P5098_pre:
    .section code
    .balign 4
jacdac_unregisteredNoop__P5098_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_unregisteredNoop__P5098_args@fn
jacdac_unregisteredNoop__P5098_args:
    .section code
jacdac_unregisteredNoop__P5098:
jacdac_unregisteredNoop__P5098_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_unregisteredNoop__P5098_locals:
.ret.5098:
    @stackempty locals
    movs r0, #0
.final_0_429:
jacdac_unregisteredNoop__P5098_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(109,5): machine.schedulePlayDeviceCount
    ;
    .object machine_schedulePlayDeviceCount__P5451 "runtime.ts(109,5): machine.schedulePlayDeviceCount"
machine_schedulePlayDeviceCount__P5451_pre:
    .section code
    .balign 4
machine_schedulePlayDeviceCount__P5451_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_schedulePlayDeviceCount__P5451_args@fn
machine_schedulePlayDeviceCount__P5451_args:
    .section code
machine_schedulePlayDeviceCount__P5451:
machine_schedulePlayDeviceCount__P5451_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_schedulePlayDeviceCount__P5451_locals:
    movs r0, #127
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_430      
.jmpz1907:
    b .ret.5451      
.else_0_430:
.afterif_1_430:
    movs r0, #66
    movs r1, #127
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_522 ; machine_schedulePlayDeviceCount_inline__P14295_Lit      
    push {r0} ; proc-arg
    bl control_runInBackground__P2298
_proccall1908:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5451:
    @stackempty locals
    movs r0, #0
.final_2_430:
machine_schedulePlayDeviceCount__P5451_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(112,33): machine.schedulePlayDeviceCount.inline
    ;
    .object machine_schedulePlayDeviceCount_inline__P14295 "runtime.ts(112,33): machine.schedulePlayDeviceCount.inline"
machine_schedulePlayDeviceCount_inline__P14295_pre:
    .section code
    .balign 4
machine_schedulePlayDeviceCount_inline__P14295_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_schedulePlayDeviceCount_inline__P14295_args@fn
machine_schedulePlayDeviceCount_inline__P14295_args:
    .section code
machine_schedulePlayDeviceCount_inline__P14295:
machine_schedulePlayDeviceCount_inline__P14295_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
machine_schedulePlayDeviceCount_inline__P14295_locals:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    bl pause__P2227
_proccall1909:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #10
    movs r1, #127
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, _ldlit_523 ; length_inline__P14304_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P2002
_proccall1910:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    lsls r1, r1, #9
    ldr r7, [r6, #0]
    ldr r1, [r7, r1]
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_431      
.jmpz1911:
    ldr r0, [sp, locals@0]
    movs r1, #1
    lsls r1, r1, #9
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl music_stopAllSounds__P2559
_proccall1912:
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl led::stopAnimation
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_gt
    beq .condexprz_1_431      
.jmpz1913:
    movs r0, #1
    b .condexprfin_2_431      
.condexprz_1_431:
    movs r0, #3
.condexprfin_2_431:
; jmp value (already in r0)
    push {r0} ; proc-arg
    bl machine_playSoundExpression__P4692
_proccall1914:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #45
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl basic_showNumber__P2226
_proccall1915:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_431:
.afterif_3_431:
.ret.14295:
    @stackempty locals
    movs r0, #0
.final_4_431:
    add sp, #4*2 ; pop locals 2
machine_schedulePlayDeviceCount_inline__P14295_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(118,17): length.inline
    ;
    .object length_inline__P14304 "runtime.ts(118,17): length.inline"
length_inline__P14304_pre:
    .section code
    .balign 4
length_inline__P14304_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word length_inline__P14304_args@fn
length_inline__P14304_args:
    cmp r4, #1
    bge length_inline__P14304_nochk
    push {lr}
    bl _expand_args_1_5
    bl length_inline__P14304_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
length_inline__P14304:
length_inline__P14304_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
length_inline__P14304_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl machine_ignoreDevice__P4676
_proccall1916:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.14304:
    @stackempty locals
.final_0_432:
length_inline__P14304_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function microbit.ts(35,5): machine.playSoundExpression
    ;
    .object machine_playSoundExpression__P4692 "microbit.ts(35,5): machine.playSoundExpression"
machine_playSoundExpression__P4692_pre:
    .section code
    .balign 4
    .section code
machine_playSoundExpression__P4692:
machine_playSoundExpression__P4692_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_playSoundExpression__P4692_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_eqq
    beq .else_0_433      
.jmpz1917:
    movs r0, #129
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl SoundExpression_play__P2702
_proccall1918:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_433      
.else_0_433:
    ldr r0, [sp, args@0]
    movs r1, #3
    bl _cmp_eqq
    beq .else_2_433      
.jmpz1919:
    movs r0, #65
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl SoundExpression_play__P2702
_proccall1920:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_433:
.afterif_3_433:
.afterif_1_433:
.ret.4692:
    @stackempty locals
    movs r0, #0
.final_4_433:
machine_playSoundExpression__P4692_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(22,9): jacdac.EventSource.on
    ;
    .object jacdac_EventSource_on__P3624 "jacdac/eventsource.ts(22,9): jacdac.EventSource.on"
jacdac_EventSource_on__P3624_pre:
    .section code
    .balign 4
jacdac_EventSource_on__P3624_args:
    cmp r4, #3
    bge jacdac_EventSource_on__P3624_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_EventSource_on__P3624_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_EventSource_on__P3624:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3622_validate_49
    mov lr, r7
jacdac_EventSource_on__P3624_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_EventSource_on__P3624_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_addListenerInternal__P4976_nochk
_proccall1921:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
.ret.3624:
    @stackempty locals
.final_0_434:
jacdac_EventSource_on__P3624_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_520:
 .word 122881
_ldlit_521:
 .word jacdac_unregisteredNoop__P5098_Lit
_ldlit_522:
 .word machine_schedulePlayDeviceCount_inline__P14295_Lit
_ldlit_523:
 .word length_inline__P14304_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(15,9): machine.MicrobitMachine.constructor
    ;
    .object machine_MicrobitMachine_constructor__P5440 "runtime.ts(15,9): machine.MicrobitMachine.constructor"
machine_MicrobitMachine_constructor__P5440_pre:
    .section code
    .balign 4
    .section code
machine_MicrobitMachine_constructor__P5440:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_machine_MicrobitMachine__C5435_validate_6
    mov lr, r7
machine_MicrobitMachine_constructor__P5440_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_MicrobitMachine_constructor__P5440_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_constructor__P3623
_proccall1922:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_525 ; machine_MicrobitMachine_inline__P14351_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_94
    movs r0, #1
    movs r1, #1
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_526 ; machine_MicrobitMachine_inline__P14360_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_94
    movs r0, #2
    movs r1, #1
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_527 ; machine_MicrobitMachine_inline__P14369_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl _conv_94
    movs r0, #3
    movs r1, #1
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
.ret.5440:
    @stackempty locals
.final_0_435:
machine_MicrobitMachine_constructor__P5440_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(20,17): machine.MicrobitMachine.inline
    ;
    .object machine_MicrobitMachine_inline__P14351 "runtime.ts(20,17): machine.MicrobitMachine.inline"
machine_MicrobitMachine_inline__P14351_pre:
    .section code
    .balign 4
machine_MicrobitMachine_inline__P14351_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_MicrobitMachine_inline__P14351_args@fn
machine_MicrobitMachine_inline__P14351_args:
    .section code
machine_MicrobitMachine_inline__P14351:
machine_MicrobitMachine_inline__P14351_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_MicrobitMachine_inline__P14351_locals:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall1923:
    add sp, #4*3 ; pop locals 3
.ret.14351:
    @stackempty locals
.final_0_436:
machine_MicrobitMachine_inline__P14351_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(25,17): machine.MicrobitMachine.inline
    ;
    .object machine_MicrobitMachine_inline__P14360 "runtime.ts(25,17): machine.MicrobitMachine.inline"
machine_MicrobitMachine_inline__P14360_pre:
    .section code
    .balign 4
machine_MicrobitMachine_inline__P14360_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_MicrobitMachine_inline__P14360_args@fn
machine_MicrobitMachine_inline__P14360_args:
    .section code
machine_MicrobitMachine_inline__P14360:
machine_MicrobitMachine_inline__P14360_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_MicrobitMachine_inline__P14360_locals:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #76]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall1924:
    add sp, #4*3 ; pop locals 3
.ret.14360:
    @stackempty locals
.final_0_437:
machine_MicrobitMachine_inline__P14360_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function runtime.ts(30,17): machine.MicrobitMachine.inline
    ;
    .object machine_MicrobitMachine_inline__P14369 "runtime.ts(30,17): machine.MicrobitMachine.inline"
machine_MicrobitMachine_inline__P14369_pre:
    .section code
    .balign 4
machine_MicrobitMachine_inline__P14369_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word machine_MicrobitMachine_inline__P14369_args@fn
machine_MicrobitMachine_inline__P14369_args:
    .section code
machine_MicrobitMachine_inline__P14369:
machine_MicrobitMachine_inline__P14369_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
machine_MicrobitMachine_inline__P14369_locals:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #80]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall1925:
    add sp, #4*3 ; pop locals 3
.ret.14369:
    @stackempty locals
.final_0_438:
machine_MicrobitMachine_inline__P14369_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1920,5): jacdac.start
    ;
    .object jacdac_start__P3607 "jacdac/routing.ts(1920,5): jacdac.start"
jacdac_start__P3607_pre:
    .section code
    .balign 4
    .section code
jacdac_start__P3607:
jacdac_start__P3607_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_start__P3607_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_running__P3462
_proccall1927:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_439      
.jmpz1926:
    b .ret.3607      
.else_0_439:
.afterif_1_439:
    ldr r7, [r6, #0]
    ldr r0, [r7, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_439      
.jmpz1928:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_439      
.jmpz1929:
    ldr r0, [sp, locals@0]
    ldr r1, _ldlit_528 ; 536870911      
    bl _numops_ands
    ldr r1, _ldlit_529 ; 1610612737      
    bl _numops_orrs
    ldr r7, [r6, #0]
    str r0, [r7, #24]
    @stackempty locals
.else_3_439:
.afterif_4_439:
.else_2_439:
.afterif_5_439:
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_start__P3463
_proccall1930:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_530 ; _str221      
    push {r0} ; proc-arg
    bl jacdac_log__P5087
_proccall1931:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_439      
.jmpz1932:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_439      
.lazySkip_7_439:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
.lazy_6_439:
; jmp value (already in r0)
    str r0, [sp, args@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #127
    bl _ifacecall1_get_50
_proccall1934:
    add sp, #4*1 ; pop locals 1
    movs r1, #0
    bl _cmp_eqq
    beq .else_8_439      
.jmpz1933:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #129
    bl _ifacecall1_get_50
_proccall1935:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #127
    bl _ifacecall2_set_95
_proccall1936:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_8_439:
.afterif_9_439:
    movs r0, #66
    push {r0} ; proc-arg
    bl jacdac_enablePower__P5129
_proccall1937:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl jacdac_enablePowerFaultPin__P5130
_proccall1938:
    @stackempty locals
    bl jacdac_enableIdentityLED__P5131
_proccall1939:
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #127
    bl _ifacecall1_get_50
_proccall1941:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_439      
.jmpz1940:
    ldr r0, _ldlit_531 ; jacdac_BrainServer__C5108_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_BrainServer_constructor__P5110
_proccall1942:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    bl jacdac_Server_start__P3515
_proccall1943:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_10_439:
.afterif_11_439:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #65
    lsls r1, r1, #2
    bl _ifacecall1_get_50
_proccall1945:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_439      
.jmpz1944:
    ldr r0, _ldlit_532 ; jacdac_ProxyServer__C5105_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_ProxyServer_constructor__P5107
_proccall1946:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    bl jacdac_Server_start__P3515
_proccall1947:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    movs r1, #66
    bl _inst_jacdac_Bus__C3455_validate_33
    str r1, [r0, #40]
    @stackempty locals
.else_12_439:
.afterif_13_439:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #128
    bl _ifacecall1_get_50
_proccall1949:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_439      
.jmpz1948:
    ldr r0, _ldlit_533 ; jacdac_start_inline__P14428_Lit      
    push {r0} ; proc-arg
    bl console_addListener__P2386
_proccall1950:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #131
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_Server_start__P3515
_proccall1951:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_15_439      
.object PUSH
.balign 4
_ldlit_525:
 .word machine_MicrobitMachine_inline__P14351_Lit
_ldlit_526:
 .word machine_MicrobitMachine_inline__P14360_Lit
_ldlit_527:
 .word machine_MicrobitMachine_inline__P14369_Lit
_ldlit_528:
 .word 536870911
_ldlit_529:
 .word 1610612737
_ldlit_530:
 .word _str221
_ldlit_531:
 .word jacdac_BrainServer__C5108_VT
_ldlit_532:
 .word jacdac_ProxyServer__C5105_VT
_ldlit_533:
 .word jacdac_start_inline__P14428_Lit
.object POP
.else_14_439:
.afterif_15_439:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #129
    bl _ifacecall1_get_50
_proccall1953:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_16_439      
.jmpz1952:
    movs r0, #33
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_Server_start__P3515
_proccall1954:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_16_439:
.afterif_17_439:
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physId
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, _ldlit_535 ; jacdac_consumePackets__P5135_Lit      
    push {r0} ; proc-arg
    bl _conv_96
    movs r1, #1
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physId
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, _ldlit_536 ; jacdac_start_inline__P14455_Lit      
    push {r0} ; proc-arg
    bl _conv_96
    movs r1, #100
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_537 ; _str222      
    push {r0} ; proc-arg
    bl jacdac_log__P5087
_proccall1955:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #215
    bl _ifacecall1_get_50
_proccall1957:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_20_439      
.jmpz1956:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_19_439      
.lazySkip_20_439:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #33
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_19_439:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_18_439      
.jmpz1958:
    ldr r0, _ldlit_538 ; _str223      
    push {r0} ; proc-arg
    bl jacdac_log__P5087
_proccall1959:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    bl pause__P2227
_proccall1960:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #33
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_21_439      
.jmpz1961:
    movs r0, #33
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_bindRoles__P3334
_proccall1962:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_21_439:
.afterif_22_439:
.else_18_439:
.afterif_23_439:
.ret.3607:
    @stackempty locals
    movs r0, #0
.final_24_439:
    add sp, #4*1 ; pop locals 1
jacdac_start__P3607_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1953,33): jacdac.start.inline
    ;
    .object jacdac_start_inline__P14428 "jacdac/routing.ts(1953,33): jacdac.start.inline"
jacdac_start_inline__P14428_pre:
    .section code
    .balign 4
jacdac_start_inline__P14428_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_start_inline__P14428_args@fn
jacdac_start_inline__P14428_args:
    cmp r4, #2
    bge jacdac_start_inline__P14428_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_start_inline__P14428_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_start_inline__P14428:
jacdac_start_inline__P14428_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_start_inline__P14428_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_3
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_539 ; _str89      
    bl _cmp_neq
    beq .else_0_440      
.jmpz1963:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #131
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_LoggerServer_add__P3215
_proccall1964:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_440:
.afterif_1_440:
.ret.14428:
    @stackempty locals
    movs r0, #0
.final_2_440:
jacdac_start_inline__P14428_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1968,72): jacdac.start.inline
    ;
    .object jacdac_start_inline__P14455 "jacdac/routing.ts(1968,72): jacdac.start.inline"
jacdac_start_inline__P14455_pre:
    .section code
    .balign 4
jacdac_start_inline__P14455_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_start_inline__P14455_args@fn
jacdac_start_inline__P14455_args:
    .section code
jacdac_start_inline__P14455:
jacdac_start_inline__P14455_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_start_inline__P14455_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_queueAnnounce__P3469
_proccall1965:
    add sp, #4*1 ; pop locals 1
.ret.14455:
    @stackempty locals
    movs r0, #0
.final_0_441:
jacdac_start_inline__P14455_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(258,9): jacdac._rolemgr.RoleManagerServer.bindRoles
    ;
    .object jacdac__rolemgr_RoleManagerServer_bindRoles__P3334 "jacdac/rolemgr.ts(258,9): jacdac._rolemgr.RoleManagerServer.bindRoles"
jacdac__rolemgr_RoleManagerServer_bindRoles__P3334_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_bindRoles__P3334_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_bindRoles__P3334_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac__rolemgr_RoleManagerServer_bindRoles__P3334_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_bindRoles__P3334:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
    mov lr, r7
jacdac__rolemgr_RoleManagerServer_bindRoles__P3334_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_bindRoles__P3334_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_442      
.jmpz1966:
    bb .ret.3334 ; with expression
.else_0_442:
.afterif_1_442:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #48]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.14479:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1967
    b .brk.14479      
.jmpz1967:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_442      
.jmpz1968:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_442      
.lazySkip_4_442:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #52]
.lazy_3_442:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_442      
.jmpz1969:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_442      
.lazySkip_6_442:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_5_442:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1970
    b .else_2_442      
.jmpz1970:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_Client_roleQuery__P3553
_proccall1971:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_442      
.jmpz1972:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_442      
.lazySkip_9_442:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r1, _ldlit_540 ; _str149      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    b .lazy_8_442      
.object PUSH
.balign 4
_ldlit_535:
 .word jacdac_consumePackets__P5135_Lit
_ldlit_536:
 .word jacdac_start_inline__P14455_Lit
_ldlit_537:
 .word _str222
_ldlit_538:
 .word _str223
_ldlit_539:
 .word _str89
_ldlit_540:
 .word _str149
.object POP
.lazy_8_442:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1973
    b .else_7_442      
.jmpz1973:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #56]
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_542 ; services_inline__P14504_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFilter__P2002
_proccall1974:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1975
    b .else_10_442      
.jmpz1975:
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465
_proccall1977:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_11_442      
.jmpz1976:
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac__rolemgr_setRole__P3329
_proccall1978:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_12_442      
.else_11_442:
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #16]
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl isNaN__P1985
_proccall1980:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_15_442      
.jmpz1979:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_14_442      
.lazySkip_15_442:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_17_442      
.jmpz1981:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_16_442      
.lazySkip_17_442:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac_Server__C3494_validate_34
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
.lazy_16_442:
; jmp value (already in r0)
.lazy_14_442:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_13_442      
.jmpz1982:
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac__rolemgr_setRole__P3329
_proccall1983:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_13_442:
.afterif_18_442:
.afterif_12_442:
.else_10_442:
.afterif_19_442:
.else_7_442:
.afterif_20_442:
.else_2_442:
.afterif_21_442:
.cont.14479:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.14479      
.brk.14479:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_eq
    beq .else_22_442      
.jmpz1984:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_checkChanges__P5069_nochk
_proccall1985:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .ret.3334      
.else_22_442:
.afterif_23_442:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_543 ; _str150      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_544 ; _str151      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_545 ; _str152      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #44
    bl _classCall_jacdac_Client__C3544_this_39
_proccall1986:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, _ldlit_546 ; wraps_inline__P14582_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayMap__P1998
_proccall1987:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #48]
    str r0, [sp, locals@10]
    movs r0, #1
    str r0, [sp, locals@11]
    @stackempty locals
.fortop.14593:
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1988
    b .brk.14593      
.object PUSH
.balign 4
_ldlit_542:
 .word services_inline__P14504_Lit
_ldlit_543:
 .word _str150
_ldlit_544:
 .word _str151
_ldlit_545:
 .word _str152
_ldlit_546:
 .word wraps_inline__P14582_Lit
.object POP
.jmpz1988:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    ldr r0, [sp, locals@9]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_26_442      
.jmpz1989:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_25_442      
.lazySkip_26_442:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@9]
    ldr r0, [r0, #52]
.lazy_25_442:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1990
    b .else_24_442      
.jmpz1990:
    ldr r0, _ldlit_548 ; jacdac__rolemgr_RoleBinding__C5058_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@9]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl jacdac_Client_roleQuery__P3553
_proccall1991:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleBinding_constructor__P5061
_proccall1992:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@9]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_27_442      
.jmpz1993:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@13]
    @stackempty locals
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@14]
    movs r0, #1
    str r0, [sp, locals@15]
    @stackempty locals
.fortop.14623:
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.14623      
.jmpz1994:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@13]
    ldr r0, [sp, locals@13]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .else_28_442      
.jmpz1995:
    ldr r0, [sp, locals@13]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .brk.14623      
.else_28_442:
.afterif_29_442:
.cont.14623:
    ldr r0, [sp, locals@15]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@15]
    b .fortop.14623      
.brk.14623:
    movs r0, #0
    str r0, [sp, locals@14]
.else_27_442:
.afterif_30_442:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_24_442:
.afterif_31_442:
.cont.14593:
    ldr r0, [sp, locals@11]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@11]
    b .fortop.14593      
.brk.14593:
    movs r0, #0
    str r0, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@16]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@17]
    @stackempty locals
    ldr r0, [sp, locals@7]
    str r0, [sp, locals@18]
    movs r0, #1
    str r0, [sp, locals@19]
    @stackempty locals
.fortop.14644:
    ldr r0, [sp, locals@19]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@18]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.14644      
.jmpz1996:
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@19]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@17]
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleBinding_host__P5059
_proccall1997:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@20]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_549 ; h_inline__P14652_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@20]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl helpers_arrayFind__P2003
_proccall1998:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@21]
    @stackempty locals
    ldr r0, [sp, locals@21]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_32_442      
.jmpz1999:
    ldr r0, _ldlit_550 ; jacdac__rolemgr_ServerBindings__C5062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac__rolemgr_ServerBindings_constructor__P5065
_proccall2000:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@21]
    @stackempty locals
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@21]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_32_442:
.afterif_33_442:
    ldr r0, [sp, locals@21]
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.14644:
    ldr r0, [sp, locals@19]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@19]
    b .fortop.14644      
.brk.14644:
    movs r0, #0
    str r0, [sp, locals@18]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_551 ; _str153      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_552 ; _str154      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #44
    bl _classCall_jacdac_Client__C3544_this_39
_proccall2001:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_553 ; jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P2002
_proccall2002:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@16]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_554 ; _str155      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_552 ; _str154      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #44
    bl _classCall_jacdac_Client__C3544_this_39
_proccall2003:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.14699:
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_gt
    bne .jmpz2004
    b .brk.14699      
.object PUSH
.balign 4
_ldlit_548:
 .word jacdac__rolemgr_RoleBinding__C5058_VT
_ldlit_549:
 .word h_inline__P14652_Lit
_ldlit_550:
 .word jacdac__rolemgr_ServerBindings__C5062_VT
_ldlit_551:
 .word _str153
_ldlit_552:
 .word _str154
_ldlit_553:
 .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686_Lit
_ldlit_554:
 .word _str155
.object POP
.jmpz2004:
    ldr r0, _ldlit_556 ; h_inline__P14716_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_557 ; h_inline__P14706_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_maxIn__P5066
_proccall2005:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@22]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@23]
    @stackempty locals
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@24]
    movs r0, #1
    str r0, [sp, locals@25]
    @stackempty locals
.fortop.14727:
    ldr r0, [sp, locals@25]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@24]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.14727      
.jmpz2006:
    ldr r0, [sp, locals@24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@25]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@23]
    ldr r0, [sp, locals@23]
    push {r0} ; proc-arg
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, locals@23]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_ServerBindings_scoreFor__P5064
_proccall2007:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.14727:
    ldr r0, [sp, locals@25]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@25]
    b .fortop.14727      
.brk.14727:
    movs r0, #0
    str r0, [sp, locals@24]
    ldr r0, _ldlit_558 ; dev_inline__P14746_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_559 ; dev_inline__P14738_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_maxIn__P5066
_proccall2008:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@26]
    @stackempty locals
    ldr r0, [sp, locals@26]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #8]
    movs r1, #1
    bl _cmp_eq
    beq .else_34_442      
.jmpz2009:
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    b .cont.14699      
.else_34_442:
.afterif_35_442:
    ldr r0, [sp, locals@22]
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_560 ; jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySort__P1997
_proccall2010:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, locals@26]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_ServerBindings_scoreFor__P5064
_proccall2011:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@27]
    @stackempty locals
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_ServerBindings_fullyBound__P5063
_proccall2013:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_36_442      
.jmpz2012:
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    b .afterif_37_442      
.else_36_442:
    movs r0, #1
    ldr r1, _ldlit_561 ; jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@26]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P2002
_proccall2014:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    str r1, [r0, #4]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_37_442:
    b .cont.14699      
.brk.14699:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_checkChanges__P5069_nochk
_proccall2015:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3334:
    @stackempty locals
    movs r0, #0
.final_38_442:
    add sp, #4*28 ; pop locals 28
jacdac__rolemgr_RoleManagerServer_bindRoles__P3334_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(270,29): services.inline
    ;
    .object services_inline__P14504 "jacdac/rolemgr.ts(270,29): services.inline"
services_inline__P14504_pre:
    .section code
    .balign 4
services_inline__P14504_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word services_inline__P14504_args@fn
services_inline__P14504_args:
    cmp r4, #1
    bge services_inline__P14504_nochk
    push {lr}
    bl _expand_args_1_5
    bl services_inline__P14504_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
services_inline__P14504:
services_inline__P14504_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
services_inline__P14504_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Server__C3494_validate_34
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.14504:
    @stackempty locals
.final_0_443:
services_inline__P14504_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(309,43): wraps.inline
    ;
    .object wraps_inline__P14582 "jacdac/rolemgr.ts(309,43): wraps.inline"
wraps_inline__P14582_pre:
    .section code
    .balign 4
wraps_inline__P14582_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word wraps_inline__P14582_args@fn
wraps_inline__P14582_args:
    cmp r4, #1
    bge wraps_inline__P14582_nochk
    push {lr}
    bl _expand_args_1_5
    bl wraps_inline__P14582_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
wraps_inline__P14582:
wraps_inline__P14582_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
wraps_inline__P14582_locals:
    ldr r0, _ldlit_562 ; jacdac__rolemgr_DeviceWrapper__C5056_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac__rolemgr_DeviceWrapper_constructor__P5057
_proccall2016:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
.ret.14582:
    @stackempty locals
.final_0_444:
wraps_inline__P14582_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(336,38): h.inline
    ;
    .object h_inline__P14652 "jacdac/rolemgr.ts(336,38): h.inline"
h_inline__P14652_pre:
    .section code
    .balign 4
h_inline__P14652_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word h_inline__P14652_args@fn
h_inline__P14652_args:
    cmp r4, #1
    bge h_inline__P14652_nochk
    push {lr}
    bl _expand_args_1_5
    bl h_inline__P14652_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
h_inline__P14652:
h_inline__P14652_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
h_inline__P14652_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.14652:
    @stackempty locals
.final_0_445:
h_inline__P14652_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(346,38): jacdac._rolemgr.RoleManagerServer.bindRoles.inline
    ;
    .object jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686 "jacdac/rolemgr.ts(346,38): jacdac._rolemgr.RoleManagerServer.bindRoles.inline"
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686_args@fn
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686:
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_ServerBindings_fullyBound__P5063
_proccall2017:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.14686:
    @stackempty locals
.final_0_446:
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14686_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(355,21): h.inline
    ;
    .object h_inline__P14706 "jacdac/rolemgr.ts(355,21): h.inline"
h_inline__P14706_pre:
    .section code
    .balign 4
h_inline__P14706_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word h_inline__P14706_args@fn
h_inline__P14706_args:
    cmp r4, #2
    bge h_inline__P14706_nochk
    push {lr}
    bl _expand_args_2_1
    bl h_inline__P14706_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
h_inline__P14706:
h_inline__P14706_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
h_inline__P14706_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
.ret.14706:
    @stackempty locals
.final_0_447:
h_inline__P14706_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(356,21): h.inline
    ;
    .object h_inline__P14716 "jacdac/rolemgr.ts(356,21): h.inline"
h_inline__P14716_pre:
    .section code
    .balign 4
h_inline__P14716_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word h_inline__P14716_args@fn
h_inline__P14716_args:
    cmp r4, #2
    bge h_inline__P14716_nochk
    push {lr}
    bl _expand_args_2_1
    bl h_inline__P14716_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_556:
 .word h_inline__P14716_Lit
_ldlit_557:
 .word h_inline__P14706_Lit
_ldlit_558:
 .word dev_inline__P14746_Lit
_ldlit_559:
 .word dev_inline__P14738_Lit
_ldlit_560:
 .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766_Lit
_ldlit_561:
 .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812_Lit
_ldlit_562:
 .word jacdac__rolemgr_DeviceWrapper__C5056_VT
.object POP
    .section code
h_inline__P14716:
h_inline__P14716_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
h_inline__P14716_locals:
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::compare
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.14716:
    @stackempty locals
.final_0_448:
h_inline__P14716_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(367,21): dev.inline
    ;
    .object dev_inline__P14738 "jacdac/rolemgr.ts(367,21): dev.inline"
dev_inline__P14738_pre:
    .section code
    .balign 4
dev_inline__P14738_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word dev_inline__P14738_args@fn
dev_inline__P14738_args:
    cmp r4, #2
    bge dev_inline__P14738_nochk
    push {lr}
    bl _expand_args_2_1
    bl dev_inline__P14738_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
dev_inline__P14738:
dev_inline__P14738_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
dev_inline__P14738_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
.ret.14738:
    @stackempty locals
.final_0_449:
dev_inline__P14738_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(368,21): dev.inline
    ;
    .object dev_inline__P14746 "jacdac/rolemgr.ts(368,21): dev.inline"
dev_inline__P14746_pre:
    .section code
    .balign 4
dev_inline__P14746_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word dev_inline__P14746_args@fn
dev_inline__P14746_args:
    cmp r4, #2
    bge dev_inline__P14746_nochk
    push {lr}
    bl _expand_args_2_1
    bl dev_inline__P14746_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
dev_inline__P14746:
dev_inline__P14746_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
dev_inline__P14746_locals:
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #12]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #12]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::compare
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.14746:
    @stackempty locals
.final_0_450:
dev_inline__P14746_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(379,33): jacdac._rolemgr.RoleManagerServer.bindRoles.inline
    ;
    .object jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766 "jacdac/rolemgr.ts(379,33): jacdac._rolemgr.RoleManagerServer.bindRoles.inline"
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766_args@fn
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766_args:
    cmp r4, #2
    bge jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766:
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_451      
.jmpz2018:
    ldr r0, [sp, locals@0]
    b .ret.14766      
.else_0_451:
.afterif_1_451:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_451      
.jmpz2019:
    ldr r0, [sp, locals@0]
    b .ret.14766      
.else_2_451:
.afterif_3_451:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::compare
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.14766:
    @stackempty locals
.final_4_451:
    add sp, #4*1 ; pop locals 1
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14766_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(397,25): jacdac._rolemgr.RoleManagerServer.bindRoles.inline
    ;
    .object jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812 "jacdac/rolemgr.ts(397,25): jacdac._rolemgr.RoleManagerServer.bindRoles.inline"
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812_args@fn
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812:
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
.ret.14812:
    @stackempty locals
.final_0_452:
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P14812_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(208,5): helpers.arraySort
    ;
    .object helpers_arraySort__P1997 "core/pxt-helpers.ts(208,5): helpers.arraySort"
helpers_arraySort__P1997_pre:
    .section code
    .balign 4
    .section code
helpers_arraySort__P1997:
helpers_arraySort__P1997_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_arraySort__P1997_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_453      
.jmpz2020:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_453      
.lazySkip_2_453:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_453:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_453      
.jmpz2021:
    ldr r0, _ldlit_564 ; helpers_arraySort_inline__P14829_Lit      
    str r0, [sp, args@1]
    @stackempty locals
.else_0_453:
.afterif_3_453:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_sortHelper__P4725
_proccall2022:
    add sp, #4*2 ; pop locals 2
.ret.1997:
    @stackempty locals
.final_4_453:
helpers_arraySort__P1997_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(210,26): helpers.arraySort.inline
    ;
    .object helpers_arraySort_inline__P14829 "core/pxt-helpers.ts(210,26): helpers.arraySort.inline"
helpers_arraySort_inline__P14829_pre:
    .section code
    .balign 4
helpers_arraySort_inline__P14829_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word helpers_arraySort_inline__P14829_args@fn
helpers_arraySort_inline__P14829_args:
    cmp r4, #2
    bge helpers_arraySort_inline__P14829_nochk
    push {lr}
    bl _expand_args_2_1
    bl helpers_arraySort_inline__P14829_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
helpers_arraySort_inline__P14829:
helpers_arraySort_inline__P14829_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySort_inline__P14829_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_454      
.jmpz2023:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_454      
.lazySkip_2_454:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
.lazy_1_454:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_454      
.jmpz2024:
    movs r0, #1
    b .ret.14829      
    b .afterif_3_454      
.else_0_454:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_454      
.jmpz2025:
    movs r0, #3
    b .ret.14829      
    b .afterif_5_454      
.else_4_454:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_454      
.jmpz2026:
    movs r0, #1
    negs r0, r0
    b .ret.14829      
.else_6_454:
.afterif_7_454:
.afterif_5_454:
.afterif_3_454:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_454      
.jmpz2027:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_454      
.lazySkip_10_454:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
.lazy_9_454:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_454      
.jmpz2028:
    movs r0, #1
    b .ret.14829      
    b .afterif_11_454      
.else_8_454:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_454      
.jmpz2029:
    movs r0, #3
    b .ret.14829      
    b .afterif_13_454      
.else_12_454:
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_454      
.jmpz2030:
    movs r0, #1
    negs r0, r0
    b .ret.14829      
.else_14_454:
.afterif_15_454:
.afterif_13_454:
.afterif_11_454:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_16
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_16
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::compare
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.14829:
    @stackempty locals
.final_16_454:
    add sp, #4*4 ; pop locals 4
helpers_arraySort_inline__P14829_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(192,5): helpers.sortHelper
    ;
    .object helpers_sortHelper__P4725 "core/pxt-helpers.ts(192,5): helpers.sortHelper"
helpers_sortHelper__P4725_pre:
    .section code
    .balign 4
    .section code
helpers_sortHelper__P4725:
helpers_sortHelper__P4725_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_sortHelper__P4725_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_455      
.jmpz2031:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_455      
.lazySkip_2_455:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_455:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_455      
.jmpz2032:
    ldr r0, [sp, args@0]
    b .ret.4725      
.else_0_455:
.afterif_3_455:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.14891:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.14891      
.jmpz2033:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.14899:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.14899      
.jmpz2034:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_15
    add sp, #4*3 ; pop locals 3
    movs r1, #1
    bl _cmp_gt
    beq .else_4_455      
.jmpz2035:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_swap__P4724
_proccall2037:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_455:
.afterif_5_455:
.cont.14899:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.14899      
.brk.14899:
.cont.14891:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.14891      
.brk.14891:
    ldr r0, [sp, args@0]
.ret.4725:
    @stackempty locals
.final_6_455:
    add sp, #4*3 ; pop locals 3
helpers_sortHelper__P4725_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_564:
 .word helpers_arraySort_inline__P14829_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(186,5): helpers.swap
    ;
    .object helpers_swap__P4724 "core/pxt-helpers.ts(186,5): helpers.swap"
helpers_swap__P4724_pre:
    .section code
    .balign 4
    .section code
helpers_swap__P4724:
helpers_swap__P4724_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_swap__P4724_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4724:
    @stackempty locals
    movs r0, #0
.final_0_456:
    add sp, #4*1 ; pop locals 1
helpers_swap__P4724_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(85,9): jacdac._rolemgr.ServerBindings.scoreFor
    ;
    .object jacdac__rolemgr_ServerBindings_scoreFor__P5064 "jacdac/rolemgr.ts(85,9): jacdac._rolemgr.ServerBindings.scoreFor"
jacdac__rolemgr_ServerBindings_scoreFor__P5064_pre:
    .section code
    .balign 4
jacdac__rolemgr_ServerBindings_scoreFor__P5064_args:
    cmp r4, #3
    bge jacdac__rolemgr_ServerBindings_scoreFor__P5064_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac__rolemgr_ServerBindings_scoreFor__P5064_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac__rolemgr_ServerBindings_scoreFor__P5064:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    mov lr, r7
jacdac__rolemgr_ServerBindings_scoreFor__P5064_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_ServerBindings_scoreFor__P5064_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #12]
    str r0, [sp, locals@2]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@5]
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.14947:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.14947      
.jmpz2038:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_457      
.jmpz2039:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #4]
    ldr r1, [sp, locals@2]
    bl _cmp_eq
    beq .else_1_457      
.jmpz2040:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.else_1_457:
.afterif_2_457:
    b .afterif_3_457      
.else_0_457:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_457:
.cont.14947:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    b .fortop.14947      
.brk.14947:
    movs r0, #0
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassLength__P3586
_proccall2041:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@7]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@8]
    @stackempty locals
.fortop.14963:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz2042
    b .brk.14963      
.jmpz2042:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@9]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #16]
    movs r1, #1
    bl _cmp_ge
    bne .jmpz2043
    b .else_4_457      
.jmpz2043:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_Device_serviceIndexAtOffset__P3587
_proccall2044:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_457      
.jmpz2045:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_457      
.lazySkip_7_457:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.lazy_6_457:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_457      
.jmpz2046:
    b .cont.14963      
.else_5_457:
.afterif_8_457:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz2047
    b .else_9_457      
.jmpz2047:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleBinding_select__P5060
_proccall2048:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_566 ; _str146      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_567 ; _str143      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3583
_proccall2049:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_568 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_567 ; _str143      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_568 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2379
_proccall2050:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_9_457:
.afterif_10_457:
.else_4_457:
.afterif_11_457:
.cont.14963:
    ldr r0, [sp, locals@8]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@8]
    @stackempty locals
    b .fortop.14963      
.brk.14963:
    ldr r0, _ldlit_569 ; jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P2002
_proccall2051:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@11]
    @stackempty locals
.fortop.15044:
    ldr r0, [sp, locals@11]
    ldr r1, [sp, locals@7]
    bl _cmp_lt
    bne .jmpz2052
    b .brk.15044      
.jmpz2052:
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_457      
.jmpz2053:
    b .cont.15044      
.else_12_457:
.afterif_13_457:
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassAt__P3588
_proccall2054:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@12]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@13]
    @stackempty locals
.fortop.15056:
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz2055
    b .brk.15056      
.jmpz2055:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@12]
    bl _cmp_eq
    bne .jmpz2056
    b .else_14_457      
.jmpz2056:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz2057
    b .else_15_457      
.jmpz2057:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac__rolemgr_RoleBinding_select__P5060
_proccall2058:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_570 ; _str147      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_567 ; _str143      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3583
_proccall2059:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_568 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_567 ; _str143      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_568 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2379
_proccall2060:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_15_457:
.afterif_16_457:
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl helpers_arraySplice__P1992
_proccall2061:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .brk.15056      
.else_14_457:
.afterif_17_457:
.cont.15056:
    ldr r0, [sp, locals@13]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@13]
    @stackempty locals
    b .fortop.15056      
.brk.15056:
.cont.15044:
    ldr r0, [sp, locals@11]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@11]
    @stackempty locals
    b .fortop.15044      
.brk.15044:
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_eq
    beq .else_18_457      
.jmpz2062:
    movs r0, #1
    b .ret.5064      
.else_18_457:
.afterif_19_457:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _numops_orrs
.ret.5064:
    @stackempty locals
.final_20_457:
    add sp, #4*14 ; pop locals 14
jacdac__rolemgr_ServerBindings_scoreFor__P5064_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_566:
 .word _str146
_ldlit_567:
 .word _str143
_ldlit_568:
 .word _str89
_ldlit_569:
 .word jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038_Lit
_ldlit_570:
 .word _str147
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(124,38): jacdac._rolemgr.ServerBindings.scoreFor.inline
    ;
    .object jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038 "jacdac/rolemgr.ts(124,38): jacdac._rolemgr.ServerBindings.scoreFor.inline"
jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038_pre:
    .section code
    .balign 4
jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038_args@fn
jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038_args:
    cmp r4, #1
    bge jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038:
jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.15038:
    @stackempty locals
.final_0_458:
jacdac__rolemgr_ServerBindings_scoreFor_inline__P15038_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(57,9): jacdac._rolemgr.RoleBinding.select
    ;
    .object jacdac__rolemgr_RoleBinding_select__P5060 "jacdac/rolemgr.ts(57,9): jacdac._rolemgr.RoleBinding.select"
jacdac__rolemgr_RoleBinding_select__P5060_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleBinding_select__P5060_args:
    cmp r4, #3
    bge jacdac__rolemgr_RoleBinding_select__P5060_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac__rolemgr_RoleBinding_select__P5060_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac__rolemgr_RoleBinding_select__P5060:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    mov lr, r7
jacdac__rolemgr_RoleBinding_select__P5060_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleBinding_select__P5060_locals:
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_459      
.jmpz2063:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_459      
.lazySkip_2_459:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_459:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_459      
.jmpz2064:
    b .ret.5060      
.else_0_459:
.afterif_3_459:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_459      
.jmpz2065:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #6
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac__rolemgr_setRole__P3329
_proccall2066:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_459:
.afterif_5_459:
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac__rolemgr_setRole__P3329
_proccall2067:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
.ret.5060:
    @stackempty locals
    movs r0, #0
.final_6_459:
    add sp, #4*1 ; pop locals 1
jacdac__rolemgr_RoleBinding_select__P5060_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1433,9): jacdac.Device.serviceIndexAtOffset
    ;
    .object jacdac_Device_serviceIndexAtOffset__P3587 "jacdac/routing.ts(1433,9): jacdac.Device.serviceIndexAtOffset"
jacdac_Device_serviceIndexAtOffset__P3587_pre:
    .section code
    .balign 4
jacdac_Device_serviceIndexAtOffset__P3587_args:
    cmp r4, #3
    bge jacdac_Device_serviceIndexAtOffset__P3587_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_Device_serviceIndexAtOffset__P3587_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_Device_serviceIndexAtOffset__P3587:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3572_validate_31
    mov lr, r7
jacdac_Device_serviceIndexAtOffset__P3587_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_serviceIndexAtOffset__P3587_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassLength__P3586_nochk
_proccall2068:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.15171:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.15171      
.jmpz2069:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassAt__P3588_nochk
_proccall2071:
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_0_460      
.jmpz2070:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _cmp_eqq
    beq .else_1_460      
.jmpz2072:
    ldr r0, [sp, locals@2]
    b .ret.3587      
.else_1_460:
.afterif_2_460:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.else_0_460:
.afterif_3_460:
.cont.15171:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.15171      
.brk.15171:
    movs r0, #1
    negs r0, r0
.ret.3587:
    @stackempty locals
.final_4_460:
    add sp, #4*3 ; pop locals 3
jacdac_Device_serviceIndexAtOffset__P3587_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(161,5): jacdac._rolemgr.maxIn
    ;
    .object jacdac__rolemgr_maxIn__P5066 "jacdac/rolemgr.ts(161,5): jacdac._rolemgr.maxIn"
jacdac__rolemgr_maxIn__P5066_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_maxIn__P5066:
jacdac__rolemgr_maxIn__P5066_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_maxIn__P5066_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.15193:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.15193      
.jmpz2073:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_15
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_461      
.jmpz2075:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_461      
.lazySkip_2_461:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_461      
.jmpz2076:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_461      
.lazySkip_4_461:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_15
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_3_461:
; jmp value (already in r0)
.lazy_1_461:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_461      
.jmpz2078:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.else_0_461:
.afterif_5_461:
.cont.15193:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.15193      
.brk.15193:
    ldr r0, [sp, locals@0]
.ret.5066:
    @stackempty locals
.final_6_461:
    add sp, #4*3 ; pop locals 3
jacdac__rolemgr_maxIn__P5066_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(78,9): jacdac._rolemgr.ServerBindings.fullyBound
    ;
    .object jacdac__rolemgr_ServerBindings_fullyBound__P5063 "jacdac/rolemgr.ts(78,9): jacdac._rolemgr.ServerBindings.fullyBound"
jacdac__rolemgr_ServerBindings_fullyBound__P5063_pre:
    .section code
    .balign 4
jacdac__rolemgr_ServerBindings_fullyBound__P5063_args:
    cmp r4, #1
    bge jacdac__rolemgr_ServerBindings_fullyBound__P5063_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac__rolemgr_ServerBindings_fullyBound__P5063_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_ServerBindings_fullyBound__P5063:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    mov lr, r7
jacdac__rolemgr_ServerBindings_fullyBound__P5063_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_ServerBindings_fullyBound__P5063_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_572 ; jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayEvery__P2000
_proccall2079:
    add sp, #4*2 ; pop locals 2
.ret.5063:
    @stackempty locals
.final_0_462:
jacdac__rolemgr_ServerBindings_fullyBound__P5063_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(79,40): jacdac._rolemgr.ServerBindings.fullyBound.inline
    ;
    .object jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226 "jacdac/rolemgr.ts(79,40): jacdac._rolemgr.ServerBindings.fullyBound.inline"
jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226_pre:
    .section code
    .balign 4
jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226_args@fn
jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226_args:
    cmp r4, #1
    bge jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226:
jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.ret.15226:
    @stackempty locals
.final_0_463:
jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(247,5): helpers.arrayEvery
    ;
    .object helpers_arrayEvery__P2000 "core/pxt-helpers.ts(247,5): helpers.arrayEvery"
helpers_arrayEvery__P2000_pre:
    .section code
    .balign 4
    .section code
helpers_arrayEvery__P2000:
helpers_arrayEvery__P2000_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayEvery__P2000_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.15238:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.15238      
.jmpz2080:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_15
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_464      
.jmpz2081:
    movs r0, #10
    b .ret.2000      
.else_0_464:
.afterif_1_464:
.cont.15238:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.15238      
.brk.15238:
    movs r0, #66
.ret.2000:
    @stackempty locals
.final_2_464:
    add sp, #4*2 ; pop locals 2
helpers_arrayEvery__P2000_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(76,9): jacdac._rolemgr.ServerBindings.constructor
    ;
    .object jacdac__rolemgr_ServerBindings_constructor__P5065 "jacdac/rolemgr.ts(76,9): jacdac._rolemgr.ServerBindings.constructor"
jacdac__rolemgr_ServerBindings_constructor__P5065_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_ServerBindings_constructor__P5065:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
    mov lr, r7
jacdac__rolemgr_ServerBindings_constructor__P5065_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_ServerBindings_constructor__P5065_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    movs r0, #0
.ret.5065:
    @stackempty locals
.final_0_465:
jacdac__rolemgr_ServerBindings_constructor__P5065_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(50,9): jacdac._rolemgr.RoleBinding.host
    ;
    .object jacdac__rolemgr_RoleBinding_host__P5059 "jacdac/rolemgr.ts(50,9): jacdac._rolemgr.RoleBinding.host"
jacdac__rolemgr_RoleBinding_host__P5059_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleBinding_host__P5059_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleBinding_host__P5059_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac__rolemgr_RoleBinding_host__P5059_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleBinding_host__P5059:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    mov lr, r7
jacdac__rolemgr_RoleBinding_host__P5059_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleBinding_host__P5059_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_466      
.jmpz2083:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3536_validate_46
    ldr r0, [r0, #8]
    b .ret.5059      
.else_0_466:
.afterif_1_466:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_573 ; _str145      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_466      
.jmpz2084:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    b .ret.5059      
    b .afterif_3_466      
.else_2_466:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_stringSlice__P2011
_proccall2085:
    add sp, #4*3 ; pop locals 3
    b .ret.5059      
.afterif_3_466:
    movs r0, #0
.ret.5059:
    @stackempty locals
.final_4_466:
    add sp, #4*1 ; pop locals 1
jacdac__rolemgr_RoleBinding_host__P5059_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(44,9): jacdac._rolemgr.RoleBinding.constructor
    ;
    .object jacdac__rolemgr_RoleBinding_constructor__P5061 "jacdac/rolemgr.ts(44,9): jacdac._rolemgr.RoleBinding.constructor"
jacdac__rolemgr_RoleBinding_constructor__P5061_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_RoleBinding_constructor__P5061:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
    mov lr, r7
jacdac__rolemgr_RoleBinding_constructor__P5061_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleBinding_constructor__P5061_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #16]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #20]
    movs r0, #0
.ret.5061:
    @stackempty locals
.final_0_467:
jacdac__rolemgr_RoleBinding_constructor__P5061_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(37,9): jacdac._rolemgr.DeviceWrapper.constructor
    ;
    .object jacdac__rolemgr_DeviceWrapper_constructor__P5057 "jacdac/rolemgr.ts(37,9): jacdac._rolemgr.DeviceWrapper.constructor"
jacdac__rolemgr_DeviceWrapper_constructor__P5057_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_DeviceWrapper_constructor__P5057:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
    mov lr, r7
jacdac__rolemgr_DeviceWrapper_constructor__P5057_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_DeviceWrapper_constructor__P5057_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #8]
    movs r0, #0
.ret.5057:
    @stackempty locals
.final_0_468:
jacdac__rolemgr_DeviceWrapper_constructor__P5057_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(230,5): helpers.arrayMap
    ;
    .object helpers_arrayMap__P1998 "core/pxt-helpers.ts(230,5): helpers.arrayMap"
helpers_arrayMap__P1998_pre:
    .section code
    .balign 4
    .section code
helpers_arrayMap__P1998:
helpers_arrayMap__P1998_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayMap__P1998_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.15287:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.15287      
.jmpz2086:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_15
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.15287:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.15287      
.brk.15287:
    ldr r0, [sp, locals@0]
.ret.1998:
    @stackempty locals
.final_0_469:
    add sp, #4*3 ; pop locals 3
helpers_arrayMap__P1998_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(809,9): jacdac.Server.log
    ;
    .object jacdac_Server_log__P4999 "jacdac/routing.ts(809,9): jacdac.Server.log"
jacdac_Server_log__P4999_pre:
    .section code
    .balign 4
jacdac_Server_log__P4999_args:
    cmp r4, #2
    bge jacdac_Server_log__P4999_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Server_log__P4999_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_log__P4999:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_log__P4999_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_log__P4999_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_470      
.jmpz2088:
    b .ret.4999      
.else_0_470:
.afterif_1_470:
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    ldr r7, [r6, #0]
    ldr r1, [r7, #96]
    bl _cmp_lt
    beq .else_2_470      
.jmpz2089:
    b .ret.4999      
.else_2_470:
.afterif_3_470:
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465
_proccall2090:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_Device_toString__P3584
_proccall2091:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz2092
    b .condexprz_4_470      
.object PUSH
.balign 4
_ldlit_572:
 .word jacdac__rolemgr_ServerBindings_fullyBound_inline__P15226_Lit
_ldlit_573:
 .word _str145
.object POP
.jmpz2092:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_575 ; _str122      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .condexprfin_5_470      
.condexprz_4_470:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_576 ; _str107      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_577 ; _str191      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.condexprfin_5_470:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_578 ; _str192      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2379
_proccall2093:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4999:
    @stackempty locals
    movs r0, #0
.final_6_470:
    add sp, #4*1 ; pop locals 1
jacdac_Server_log__P4999_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(404,9): jacdac._rolemgr.RoleManagerServer.checkChanges
    ;
    .object jacdac__rolemgr_RoleManagerServer_checkChanges__P5069 "jacdac/rolemgr.ts(404,9): jacdac._rolemgr.RoleManagerServer.checkChanges"
jacdac__rolemgr_RoleManagerServer_checkChanges__P5069_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_checkChanges__P5069_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_checkChanges__P5069_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac__rolemgr_RoleManagerServer_checkChanges__P5069_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_checkChanges__P5069:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
    mov lr, r7
jacdac__rolemgr_RoleManagerServer_checkChanges__P5069_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_checkChanges__P5069_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_bindingHash__P5068_nochk
_proccall2094:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #68]
    ldr r1, [sp, locals@0]
    bl _cmp_neqq
    beq .else_0_471      
.jmpz2095:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #68]
    @stackempty locals
    ldr r0, _ldlit_579 ; _str156      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_jacdac_Client__C3544_this_39
_proccall2096:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_sendChangeEvent__P3513_nochk
_proccall2097:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_471:
.afterif_1_471:
.ret.5069:
    @stackempty locals
    movs r0, #0
.final_2_471:
    add sp, #4*1 ; pop locals 1
jacdac__rolemgr_RoleManagerServer_checkChanges__P5069_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(243,9): jacdac._rolemgr.RoleManagerServer.bindingHash
    ;
    .object jacdac__rolemgr_RoleManagerServer_bindingHash__P5068 "jacdac/rolemgr.ts(243,9): jacdac._rolemgr.RoleManagerServer.bindingHash"
jacdac__rolemgr_RoleManagerServer_bindingHash__P5068_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_bindingHash__P5068_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_bindingHash__P5068_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac__rolemgr_RoleManagerServer_bindingHash__P5068_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_bindingHash__P5068:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
    mov lr, r7
jacdac__rolemgr_RoleManagerServer_bindingHash__P5068_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_bindingHash__P5068_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.15361:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    bne .jmpz2098
    b .brk.15361      
.jmpz2098:
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    ldr r0, [r0, #52]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_472      
.jmpz2099:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_472      
.lazySkip_1_472:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.lazy_0_472:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_472      
.jmpz2100:
    ldr r0, [sp, #4*0] ; tmpref @2
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_472      
.lazySkip_3_472:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    ldr r0, [r0, #8]
    push {r0}; tmpstore @2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_472      
.jmpz2101:
    ldr r0, [sp, #4*0] ; tmpref @2
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_472      
.lazySkip_5_472:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
.lazy_4_472:
; jmp value (already in r0)
.lazy_2_472:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_472      
.jmpz2102:
    ldr r0, [sp, #4*0] ; tmpref @2
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_472      
.lazySkip_7_472:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.lazy_6_472:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_580 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_580 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
.cont.15361:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.15361      
.brk.15361:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #32
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::hash
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.ret.5068:
    @stackempty locals
.final_8_472:
    add sp, #4*5 ; pop locals 5
jacdac__rolemgr_RoleManagerServer_bindingHash__P5068_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_575:
 .word _str122
_ldlit_576:
 .word _str107
_ldlit_577:
 .word _str191
_ldlit_578:
 .word _str192
_ldlit_579:
 .word _str156
_ldlit_580:
 .word _str89
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(13,5): jacdac._rolemgr.setRole
    ;
    .object jacdac__rolemgr_setRole__P3329 "jacdac/rolemgr.ts(13,5): jacdac._rolemgr.setRole"
jacdac__rolemgr_setRole__P3329_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_setRole__P3329:
jacdac__rolemgr_setRole__P3329_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_setRole__P3329_locals:
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_582 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_473      
.jmpz2103:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_583 ; _str6      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_1_473      
.jmpz2104:
    ldr r0, [sp, args@2]
    b .condexprfin_2_473      
.condexprz_1_473:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl helpers_stringSubstr__P2010
_proccall2105:
    add sp, #4*3 ; pop locals 3
.condexprfin_2_473:
; jmp value (already in r0)
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl settings_writeString__P2823
_proccall2106:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_584 ; _str142      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_585 ; _str143      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_582 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2379
_proccall2107:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_473      
.else_0_473:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl settings_remove__P2833
_proccall2108:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_586 ; _str144      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_582 ; _str89      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2379
_proccall2109:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_473:
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_clearAttachCache__P3467
_proccall2110:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3329:
    @stackempty locals
    movs r0, #0
.final_4_473:
    add sp, #4*3 ; pop locals 3
jacdac__rolemgr_setRole__P3329_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(166,5): settings.remove
    ;
    .object settings_remove__P2833 "settings/settings.ts(166,5): settings.remove"
settings_remove__P2833_pre:
    .section code
    .balign 4
settings_remove__P2833_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word settings_remove__P2833_args@fn
settings_remove__P2833_args:
    cmp r4, #1
    bge settings_remove__P2833_nochk
    push {lr}
    bl _expand_args_1_5
    bl settings_remove__P2833_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
settings_remove__P2833:
settings_remove__P2833_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_remove__P2833_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_remove
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    @stackempty locals
.ret.2833:
    @stackempty locals
    movs r0, #0
.final_0_474:
settings_remove__P2833_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(76,5): settings.writeString
    ;
    .object settings_writeString__P2823 "settings/settings.ts(76,5): settings.writeString"
settings_writeString__P2823_pre:
    .section code
    .balign 4
    .section code
settings_writeString__P2823:
settings_writeString__P2823_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeString__P2823_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl settings_writeBuffer__P2822
_proccall2111:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2823:
    @stackempty locals
    movs r0, #0
.final_0_475:
settings_writeString__P2823_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(139,9): jacdac.Bus.queueAnnounce
    ;
    .object jacdac_Bus_queueAnnounce__P3469 "jacdac/routing.ts(139,9): jacdac.Bus.queueAnnounce"
jacdac_Bus_queueAnnounce__P3469_pre:
    .section code
    .balign 4
jacdac_Bus_queueAnnounce__P3469_args:
    cmp r4, #1
    bge jacdac_Bus_queueAnnounce__P3469_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Bus_queueAnnounce__P3469_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_queueAnnounce__P3469:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_queueAnnounce__P3469_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Bus_queueAnnounce__P3469_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, _ldlit_587 ; ids_inline__P15492_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayMap__P1998
_proccall2112:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    movs r1, #31
    bl _cmp_lt
    beq .else_0_476      
.jmpz2113:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #20]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_476:
.afterif_1_476:
    movs r0, #33
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_476      
.jmpz2114:
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_3_476      
.condexprz_2_476:
    movs r0, #1
.condexprfin_3_476:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    ldr r1, [sp, #4*1] ; tmpref @1
    bl _numops_orrs
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    movs r1, #8
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #9
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.15529:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.15529      
.jmpz2115:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #9
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_101
    movs r1, #11
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.15529:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.15529      
.object PUSH
.balign 4
_ldlit_582:
 .word _str89
_ldlit_583:
 .word _str6
_ldlit_584:
 .word _str142
_ldlit_585:
 .word _str143
_ldlit_586:
 .word _str144
_ldlit_587:
 .word ids_inline__P15492_Lit
.object POP
.brk.15529:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_from__P2916
_proccall2116:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465_nochk
_proccall2117:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendReport__P2957
_proccall2118:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #133
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall2119:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    str r0, [sp, locals@4]
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.15557:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.15557      
.jmpz2120:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #40
    bl _classCall_jacdac_Client__C3544_102
_proccall2121:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.15557:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    b .fortop.15557      
.brk.15557:
    movs r0, #0
    str r0, [sp, locals@4]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_gcDevices__P5081_nochk
_proccall2122:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #33
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
    ldr r0, [r0, #32]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_476      
.jmpz2123:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_476      
.lazySkip_6_476:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
.lazy_5_476:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_476      
.jmpz2124:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, #0]      
    ldr r0, _ldlit_589 ; _str116      
    push {r0} ; proc-arg
    bl jacdac_jdpack__P2967
_proccall2125:
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r0, #65
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_from__P2916
_proccall2126:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_sendAsMultiCommand__P2960
_proccall2127:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_476:
.afterif_7_476:
    movs r0, #33
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
    ldr r0, [r0, #72]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_476      
.jmpz2128:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_476      
.lazySkip_10_476:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #33
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
    ldr r0, [r0, #32]
.lazy_9_476:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_476      
.jmpz2129:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #28]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #5
    bl _cmp_ge
    beq .else_11_476      
.jmpz2130:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    movs r0, #33
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_bindRoles__P3334
_proccall2131:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_11_476:
.afterif_12_476:
.else_8_476:
.afterif_13_476:
.ret.3469:
    @stackempty locals
    movs r0, #0
.final_14_476:
    add sp, #4*6 ; pop locals 6
jacdac_Bus_queueAnnounce__P3469_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(140,42): ids.inline
    ;
    .object ids_inline__P15492 "jacdac/routing.ts(140,42): ids.inline"
ids_inline__P15492_pre:
    .section code
    .balign 4
ids_inline__P15492_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ids_inline__P15492_args@fn
ids_inline__P15492_args:
    cmp r4, #1
    bge ids_inline__P15492_nochk
    push {lr}
    bl _expand_args_1_5
    bl ids_inline__P15492_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ids_inline__P15492:
ids_inline__P15492_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ids_inline__P15492_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Server__C3494_validate_34
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_477      
.jmpz2132:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Server__C3494_validate_34
    ldr r0, [r0, #64]
    b .condexprfin_1_477      
.condexprz_0_477:
    movs r0, #1
    negs r0, r0
.condexprfin_1_477:
; jmp value (already in r0)
.ret.15492:
    @stackempty locals
.final_2_477:
ids_inline__P15492_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(318,9): jacdac.JDPacket.sendAsMultiCommand
    ;
    .object jacdac_JDPacket_sendAsMultiCommand__P2960 "jacdac/packet.ts(318,9): jacdac.JDPacket.sendAsMultiCommand"
jacdac_JDPacket_sendAsMultiCommand__P2960_pre:
    .section code
    .balign 4
jacdac_JDPacket_sendAsMultiCommand__P2960_args:
    cmp r4, #2
    bge jacdac_JDPacket_sendAsMultiCommand__P2960_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket_sendAsMultiCommand__P2960_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_sendAsMultiCommand__P2960:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_sendAsMultiCommand__P2960_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_sendAsMultiCommand__P2960_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    movs r1, #11
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_29
    movs r1, #7
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_28
    movs r1, #11
    movs r2, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #11
    movs r2, #8
    ldr r3, _ldlit_590 ; _dbl113      
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #123
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2932_nochk
_proccall2133:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket__sendCore__P2956_nochk
_proccall2134:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2960:
    @stackempty locals
    movs r0, #0
.final_0_478:
jacdac_JDPacket_sendAsMultiCommand__P2960_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(81,9): jacdac.Bus.gcDevices
    ;
    .object jacdac_Bus_gcDevices__P5081 "jacdac/routing.ts(81,9): jacdac.Bus.gcDevices"
jacdac_Bus_gcDevices__P5081_pre:
    .section code
    .balign 4
jacdac_Bus_gcDevices__P5081_args:
    cmp r4, #1
    bge jacdac_Bus_gcDevices__P5081_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Bus_gcDevices__P5081_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_gcDevices__P5081:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_gcDevices__P5081_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Bus_gcDevices__P5081_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #15
    lsls r1, r1, #8
    adds r1, #161
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3465_nochk
_proccall2135:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _inst_jacdac_Device__C3572_validate_31
    str r1, [r0, #8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.15628:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.15628      
.jmpz2136:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #8]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .else_0_479      
.jmpz2137:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySplice__P1992
_proccall2138:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl jacdac_Device__destroy__P3597
_proccall2139:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.else_0_479:
.afterif_1_479:
.cont.15628:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    @stackempty locals
    b .fortop.15628      
.brk.15628:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_479      
.jmpz2140:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #67
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall2141:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626_nochk
_proccall2142:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_479:
.afterif_3_479:
.ret.5081:
    @stackempty locals
    movs r0, #0
.final_4_479:
    add sp, #4*5 ; pop locals 5
jacdac_Bus_gcDevices__P5081_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1292,9): jacdac.Client.announceCallback
    ;
    .object jacdac_Client_announceCallback__P3570 "jacdac/routing.ts(1292,9): jacdac.Client.announceCallback"
jacdac_Client_announceCallback__P3570_pre:
    .section code
    .balign 4
jacdac_Client_announceCallback__P3570_args:
    cmp r4, #1
    bge jacdac_Client_announceCallback__P3570_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Client_announceCallback__P3570_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_announceCallback__P3570:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3544_validate_30
    mov lr, r7
jacdac_Client_announceCallback__P3570_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_announceCallback__P3570_locals:
.ret.3570:
    @stackempty locals
    movs r0, #0
.final_0_480:
jacdac_Client_announceCallback__P3570_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(135,9): jacdac.Bus.isClient
    ;
    .object jacdac_Bus_isClient__P3468 "jacdac/routing.ts(135,9): jacdac.Bus.isClient"
jacdac_Bus_isClient__P3468_pre:
    .section code
    .balign 4
jacdac_Bus_isClient__P3468_args:
    cmp r4, #1
    bge jacdac_Bus_isClient__P3468_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Bus_isClient__P3468_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_isClient__P3468:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_isClient__P3468_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_isClient__P3468_locals:
    movs r0, #33
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
    ldr r0, [r0, #32]
.ret.3468:
    @stackempty locals
.final_0_481:
jacdac_Bus_isClient__P3468_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_589:
 .word _str116
_ldlit_590:
 .word _dbl113
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1908,5): jacdac.consumePackets
    ;
    .object jacdac_consumePackets__P5135 "jacdac/routing.ts(1908,5): jacdac.consumePackets"
jacdac_consumePackets__P5135_pre:
    .section code
    .balign 4
jacdac_consumePackets__P5135_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_consumePackets__P5135_args@fn
jacdac_consumePackets__P5135_args:
    .section code
jacdac_consumePackets__P5135:
jacdac_consumePackets__P5135_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_consumePackets__P5135_locals:
.cont.15667:
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physGetPacket
    push {r0}; tmpstore @1
    str r0, [sp, locals@0]
    movs r0, #6
    pop {r1} ; tmpref @1
    bl _cmp_neq
    beq .brk.15667      
.jmpz2143:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_fromBinary__P2915
_proccall2144:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physGetTimestamp
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C2910_validate_27
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_processPacket__P3475
_proccall2145:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .cont.15667      
.brk.15667:
.ret.5135:
    @stackempty locals
    movs r0, #0
.final_0_482:
    add sp, #4*2 ; pop locals 2
jacdac_consumePackets__P5135_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(50,9): jacdac.JDPacket.fromBinary
    ;
    .object jacdac_JDPacket_fromBinary__P2915 "jacdac/packet.ts(50,9): jacdac.JDPacket.fromBinary"
jacdac_JDPacket_fromBinary__P2915_pre:
    .section code
    .balign 4
jacdac_JDPacket_fromBinary__P2915_args:
    cmp r4, #1
    bge jacdac_JDPacket_fromBinary__P2915_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_fromBinary__P2915_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_fromBinary__P2915:
jacdac_JDPacket_fromBinary__P2915_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_fromBinary__P2915_locals:
    ldr r0, _ldlit_592 ; jacdac_JDPacket__C2910_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_constructor__P4936
_proccall2146:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #0
    movs r2, #16
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C2910_validate_27
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #25
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_42
    movs r1, #16
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C2910_validate_27
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2915:
    @stackempty locals
.final_0_483:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_fromBinary__P2915_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(178,9): jacdac._rolemgr.RoleManagerServer.constructor
    ;
    .object jacdac__rolemgr_RoleManagerServer_constructor__P3332 "jacdac/rolemgr.ts(178,9): jacdac._rolemgr.RoleManagerServer.constructor"
jacdac__rolemgr_RoleManagerServer_constructor__P3332_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_RoleManagerServer_constructor__P3332:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
    mov lr, r7
jacdac__rolemgr_RoleManagerServer_constructor__P3332_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_constructor__P3332_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #72]
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_593 ; 1016528077      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_constructor__P3498
_proccall2147:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3332:
    @stackempty locals
.final_0_484:
jacdac__rolemgr_RoleManagerServer_constructor__P3332_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(429,9): jacdac.Server.constructor
    ;
    .object jacdac_Server_constructor__P3498 "jacdac/routing.ts(429,9): jacdac.Server.constructor"
jacdac_Server_constructor__P3498_pre:
    .section code
    .balign 4
    .section code
jacdac_Server_constructor__P3498:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_constructor__P3498_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_constructor__P3498_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #64]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_constructor__P3623
_proccall2148:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz2149
    b .else_0_485      
.jmpz2149:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #172
    bl _ifacecall1_get_50
_proccall2150:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #179
    lsls r1, r1, #1
    bl _ifacecall1_get_50
_proccall2151:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #83
    bl _ifacecall1_get_50
_proccall2153:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_485      
.jmpz2152:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #83
    bl _ifacecall1_get_50
_proccall2154:
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_594 ; 131071      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #44]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_485:
.afterif_2_485:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #175
    bl _ifacecall1_get_50
_proccall2155:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #89
    lsls r1, r1, #2
    bl _ifacecall1_get_50
_proccall2156:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_3_485      
.jmpz2157:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #174
    bl _ifacecall1_get_50
_proccall2159:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_485      
.jmpz2158:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_485      
.lazySkip_6_485:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_5_485:
; jmp value (already in r0)
    b .condexprfin_4_485      
.condexprz_3_485:
    movs r0, #0
.condexprfin_4_485:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #56]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_7_485      
.jmpz2160:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #99
    bl _ifacecall1_get_50
_proccall2162:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_485      
.jmpz2161:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_485      
.lazySkip_10_485:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_9_485:
; jmp value (already in r0)
    b .condexprfin_8_485      
.condexprz_7_485:
    movs r0, #0
.condexprfin_8_485:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #52]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #102
    bl _ifacecall1_get_50
_proccall2163:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #111
    bl _ifacecall1_get_50
_proccall2164:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_485:
.afterif_11_485:
    movs r0, #0
.ret.3498:
    @stackempty locals
.final_12_485:
jacdac_Server_constructor__P3498_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/logger-server/server.ts(6,9): jacdac.LoggerServer.constructor
    ;
    .object jacdac_LoggerServer_constructor__P3209 "jacdac/logger-server/server.ts(6,9): jacdac.LoggerServer.constructor"
jacdac_LoggerServer_constructor__P3209_pre:
    .section code
    .balign 4
    .section code
jacdac_LoggerServer_constructor__P3209:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_LoggerServer__C3207_validate_103
    mov lr, r7
jacdac_LoggerServer_constructor__P3209_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_LoggerServer_constructor__P3209_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #68]
    ldr r0, [sp, args@0]
    movs r1, #9
    str r1, [r0, #72]
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_595 ; 632831893      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_constructor__P3498
_proccall2165:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #68]
    @stackempty locals
    movs r0, #0
.ret.3209:
    @stackempty locals
.final_0_486:
jacdac_LoggerServer_constructor__P3209_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/logger-server/server.ts(58,9): jacdac.LoggerServer.add
    ;
    .object jacdac_LoggerServer_add__P3215 "jacdac/logger-server/server.ts(58,9): jacdac.LoggerServer.add"
jacdac_LoggerServer_add__P3215_pre:
    .section code
    .balign 4
jacdac_LoggerServer_add__P3215_args:
    cmp r4, #3
    bge jacdac_LoggerServer_add__P3215_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_LoggerServer_add__P3215_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
.object PUSH
.balign 4
_ldlit_592:
 .word jacdac_JDPacket__C2910_VT
_ldlit_593:
 .word 1016528077
_ldlit_594:
 .word 131071
_ldlit_595:
 .word 632831893
.object POP
    .section code
jacdac_LoggerServer_add__P3215:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_LoggerServer__C3207_validate_103
    mov lr, r7
jacdac_LoggerServer_add__P3215_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_LoggerServer_add__P3215_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_487      
.jmpz2166:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_487      
.lazySkip_2_487:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_487:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_487      
.jmpz2167:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_487      
.lazySkip_4_487:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_3_487:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_487      
.jmpz2168:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_487      
.lazySkip_6_487:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_running__P3462
_proccall2169:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_5_487:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_487      
.jmpz2170:
    b .ret.3215      
.else_0_487:
.afterif_7_487:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_487      
.jmpz2171:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_487      
.lazySkip_10_487:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #68]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_9_487:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_487      
.jmpz2172:
    b .ret.3215      
.else_8_487:
.afterif_11_487:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #68]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    movs r1, #23
    lsls r1, r1, #8
    adds r1, #113
    bl _cmp_gt
    beq .else_12_487      
.jmpz2173:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #68]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #9
    str r1, [r0, #72]
    @stackempty locals
    b .ret.3215      
.else_12_487:
.afterif_13_487:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #217
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Buffer_chunkedFromUTF8__P2648
_proccall2174:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.15813:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.15813      
.jmpz2175:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_from__P2916
_proccall2176:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4985_nochk
_proccall2177:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.15813:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.15813      
.brk.15813:
    movs r0, #0
    str r0, [sp, locals@1]
.ret.3215:
    @stackempty locals
    movs r0, #0
.final_14_487:
    add sp, #4*3 ; pop locals 3
jacdac_LoggerServer_add__P3215_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(380,5): Buffer.chunkedFromUTF8
    ;
    .object Buffer_chunkedFromUTF8__P2648 "core/buffer.ts(380,5): Buffer.chunkedFromUTF8"
Buffer_chunkedFromUTF8__P2648_pre:
    .section code
    .balign 4
    .section code
Buffer_chunkedFromUTF8__P2648:
Buffer_chunkedFromUTF8__P2648_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Buffer_chunkedFromUTF8__P2648_locals:
    ldr r0, [sp, args@1]
    movs r1, #7
    bl _cmp_lt
    beq .else_0_488      
.jmpz2178:
    ldr r0, _ldlit_597 ; _str92      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.else_0_488:
.afterif_1_488:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.cont.15826:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.15826      
.jmpz2179:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Buffer_chunkLen__P4826
_proccall2180:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl helpers_stringSlice__P2011
_proccall2181:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .cont.15826      
.brk.15826:
    ldr r0, [sp, locals@0]
.ret.2648:
    @stackempty locals
.final_2_488:
    add sp, #4*3 ; pop locals 3
Buffer_chunkedFromUTF8__P2648_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(359,5): Buffer.chunkLen
    ;
    .object Buffer_chunkLen__P4826 "core/buffer.ts(359,5): Buffer.chunkLen"
Buffer_chunkLen__P4826_pre:
    .section code
    .balign 4
    .section code
Buffer_chunkLen__P4826:
Buffer_chunkLen__P4826_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Buffer_chunkLen__P4826_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_13
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl helpers_stringSlice__P2011
_proccall2183:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_0_489      
.jmpz2182:
    ldr r0, [sp, locals@1]
    b .ret.4826      
.else_0_489:
.afterif_1_489:
.cont.15874:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.15874      
.jmpz2184:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_eq
    beq .else_2_489      
.jmpz2185:
    b .brk.15874      
.else_2_489:
.afterif_3_489:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl helpers_stringSlice__P2011
_proccall2186:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_4_489      
.jmpz2187:
    ldr r0, [sp, locals@2]
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_5_489      
.else_4_489:
    ldr r0, [sp, locals@2]
    str r0, [sp, locals@1]
    @stackempty locals
.afterif_5_489:
    b .cont.15874      
.brk.15874:
    ldr r0, [sp, locals@0]
.ret.4826:
    @stackempty locals
.final_6_489:
    add sp, #4*4 ; pop locals 4
Buffer_chunkLen__P4826_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(115,5): console.addListener
    ;
    .object console_addListener__P2386 "core/console.ts(115,5): console.addListener"
console_addListener__P2386_pre:
    .section code
    .balign 4
    .section code
console_addListener__P2386:
console_addListener__P2386_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_addListener__P2386_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_490      
.jmpz2188:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #100]
    @stackempty locals
.else_0_490:
.afterif_1_490:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_490      
.jmpz2189:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_490      
.lazySkip_4_490:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_12
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_3_490:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_490      
.jmpz2190:
    b .ret.2386      
.else_2_490:
.afterif_5_490:
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2386:
    @stackempty locals
    movs r0, #0
.final_6_490:
console_addListener__P2386_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1617,9): jacdac.ProxyServer.constructor
    ;
    .object jacdac_ProxyServer_constructor__P5107 "jacdac/routing.ts(1617,9): jacdac.ProxyServer.constructor"
jacdac_ProxyServer_constructor__P5107_pre:
    .section code
    .balign 4
    .section code
jacdac_ProxyServer_constructor__P5107:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ProxyServer__C5105_validate_104
    mov lr, r7
jacdac_ProxyServer_constructor__P5107_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ProxyServer_constructor__P5107_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_598 ; 769864339      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_constructor__P3498
_proccall2191:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.5107:
    @stackempty locals
.final_0_491:
jacdac_ProxyServer_constructor__P5107_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1623,9): jacdac.BrainServer.constructor
    ;
    .object jacdac_BrainServer_constructor__P5110 "jacdac/routing.ts(1623,9): jacdac.BrainServer.constructor"
jacdac_BrainServer_constructor__P5110_pre:
    .section code
    .balign 4
    .section code
jacdac_BrainServer_constructor__P5110:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_BrainServer__C5108_validate_105
    mov lr, r7
jacdac_BrainServer_constructor__P5110_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_BrainServer_constructor__P5110_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_599 ; 544775627      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_constructor__P3498
_proccall2192:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.5110:
    @stackempty locals
.final_0_492:
jacdac_BrainServer_constructor__P5110_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(792,9): jacdac.Server.start
    ;
    .object jacdac_Server_start__P3515 "jacdac/routing.ts(792,9): jacdac.Server.start"
jacdac_Server_start__P3515_pre:
    .section code
    .balign 4
jacdac_Server_start__P3515_args:
    cmp r4, #1
    bge jacdac_Server_start__P3515_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Server_start__P3515_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_597:
 .word _str92
_ldlit_598:
 .word 769864339
_ldlit_599:
 .word 544775627
.object POP
    .section code
jacdac_Server_start__P3515:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_start__P3515_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_start__P3515_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_493      
.jmpz2193:
    b .ret.3515      
.else_0_493:
.afterif_1_493:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #32]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    bl jacdac_start__P3607
_proccall2194:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_addServer__P3464
_proccall2195:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_601 ; _str190      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_jacdac_Client__C3544_this_39
_proccall2196:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3515:
    @stackempty locals
    movs r0, #0
.final_2_493:
jacdac_Server_start__P3515_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(76,9): jacdac.Bus.addServer
    ;
    .object jacdac_Bus_addServer__P3464 "jacdac/routing.ts(76,9): jacdac.Bus.addServer"
jacdac_Bus_addServer__P3464_pre:
    .section code
    .balign 4
jacdac_Bus_addServer__P3464_args:
    cmp r4, #2
    bge jacdac_Bus_addServer__P3464_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_Bus_addServer__P3464_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_addServer__P3464:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_addServer__P3464_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_addServer__P3464_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_Server__C3494_validate_34
    str r1, [r0, #36]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3464:
    @stackempty locals
    movs r0, #0
.final_0_494:
jacdac_Bus_addServer__P3464_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1808,5): jacdac.enableIdentityLED
    ;
    .object jacdac_enableIdentityLED__P5131 "jacdac/routing.ts(1808,5): jacdac.enableIdentityLED"
jacdac_enableIdentityLED__P5131_pre:
    .section code
    .balign 4
    .section code
jacdac_enableIdentityLED__P5131:
jacdac_enableIdentityLED__P5131_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_enableIdentityLED__P5131_locals:
    movs r0, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_495      
.jmpz2197:
    ldr r0, _ldlit_602 ; _str214      
    push {r0} ; proc-arg
    bl jacdac_log__P5087
_proccall2198:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_603 ; jacdac_enableIdentityLED_inline__P15960_Lit      
    push {r0} ; proc-arg
    movs r0, #135
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624
_proccall2199:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_495:
.afterif_1_495:
.ret.5131:
    @stackempty locals
    movs r0, #0
.final_2_495:
jacdac_enableIdentityLED__P5131_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1811,30): jacdac.enableIdentityLED.inline
    ;
    .object jacdac_enableIdentityLED_inline__P15960 "jacdac/routing.ts(1811,30): jacdac.enableIdentityLED.inline"
jacdac_enableIdentityLED_inline__P15960_pre:
    .section code
    .balign 4
jacdac_enableIdentityLED_inline__P15960_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_enableIdentityLED_inline__P15960_args@fn
jacdac_enableIdentityLED_inline__P15960_args:
    .section code
jacdac_enableIdentityLED_inline__P15960:
jacdac_enableIdentityLED_inline__P15960_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_enableIdentityLED_inline__P15960_locals:
    ldr r0, _ldlit_604 ; jacdac_enableIdentityLED_inline__P15962_Lit      
    push {r0} ; proc-arg
    bl control_runInBackground__P2298
_proccall2200:
    add sp, #4*1 ; pop locals 1
.ret.15960:
    @stackempty locals
    movs r0, #0
.final_0_496:
jacdac_enableIdentityLED_inline__P15960_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1812,41): jacdac.enableIdentityLED.inline
    ;
    .object jacdac_enableIdentityLED_inline__P15962 "jacdac/routing.ts(1812,41): jacdac.enableIdentityLED.inline"
jacdac_enableIdentityLED_inline__P15962_pre:
    .section code
    .balign 4
jacdac_enableIdentityLED_inline__P15962_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_enableIdentityLED_inline__P15962_args@fn
jacdac_enableIdentityLED_inline__P15962_args:
    .section code
jacdac_enableIdentityLED_inline__P15962:
jacdac_enableIdentityLED_inline__P15962_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_enableIdentityLED_inline__P15962_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.15964:
    ldr r0, [sp, locals@0]
    movs r1, #15
    bl _cmp_lt
    beq .brk.15964      
.jmpz2201:
    movs r0, #66
    push {r0} ; proc-arg
    movs r0, #27
    push {r0} ; proc-arg
    bl jacdac_setPinByCfg__P5128
_proccall2202:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #101
    push {r0} ; proc-arg
    bl pause__P2227
_proccall2203:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #10
    push {r0} ; proc-arg
    movs r0, #27
    push {r0} ; proc-arg
    bl jacdac_setPinByCfg__P5128
_proccall2204:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #45
    push {r0} ; proc-arg
    bl pause__P2227
_proccall2205:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.15964:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.15964      
.brk.15964:
.ret.15962:
    @stackempty locals
    movs r0, #0
.final_0_497:
    add sp, #4*1 ; pop locals 1
jacdac_enableIdentityLED_inline__P15962_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1771,5): jacdac.setPinByCfg
    ;
    .object jacdac_setPinByCfg__P5128 "jacdac/routing.ts(1771,5): jacdac.setPinByCfg"
jacdac_setPinByCfg__P5128_pre:
    .section code
    .balign 4
    .section code
jacdac_setPinByCfg__P5128:
jacdac_setPinByCfg__P5128_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_setPinByCfg__P5128_locals:
    movs r0, #6
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_498      
.jmpz2206:
    b .ret.5128      
.else_0_498:
.afterif_1_498:
    movs r0, #1
    ldr r1, _ldlit_605 ; 131073      
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_498      
.jmpz2207:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    str r0, [sp, args@1]
    @stackempty locals
.else_2_498:
.afterif_3_498:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #126
    bl _ifacecall2__106
_proccall2208:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5128:
    @stackempty locals
    movs r0, #0
.final_4_498:
    add sp, #4*1 ; pop locals 1
jacdac_setPinByCfg__P5128_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1785,5): jacdac.enablePowerFaultPin
    ;
    .object jacdac_enablePowerFaultPin__P5130 "jacdac/routing.ts(1785,5): jacdac.enablePowerFaultPin"
jacdac_enablePowerFaultPin__P5130_pre:
    .section code
    .balign 4
    .section code
jacdac_enablePowerFaultPin__P5130:
jacdac_enablePowerFaultPin__P5130_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_enablePowerFaultPin__P5130_locals:
    movs r0, #6
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_500      
.jmpz2209:
    ldr r0, _ldlit_606 ; _str212      
    push {r0} ; proc-arg
    bl jacdac_log__P5087
_proccall2210:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #65
    bl _ifacecall2__106
_proccall2211:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #125
    bl _ifacecall1__52
_proccall2212:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_607 ; jacdac_enablePowerFaultPin_inline__P16010_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #133
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624
_proccall2213:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_500:
.afterif_1_500:
.ret.5130:
    @stackempty locals
    movs r0, #0
.final_2_500:
    add sp, #4*1 ; pop locals 1
jacdac_enablePowerFaultPin__P5130_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1793,42): jacdac.enablePowerFaultPin.inline
    ;
    .object jacdac_enablePowerFaultPin_inline__P16010 "jacdac/routing.ts(1793,42): jacdac.enablePowerFaultPin.inline"
jacdac_enablePowerFaultPin_inline__P16010_pre:
    .section code
    .balign 4
jacdac_enablePowerFaultPin_inline__P16010_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_enablePowerFaultPin_inline__P16010_args@fn
jacdac_enablePowerFaultPin_inline__P16010_args:
    .section code
jacdac_enablePowerFaultPin_inline__P16010:
jacdac_enablePowerFaultPin_inline__P16010_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_enablePowerFaultPin_inline__P16010_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    movs r1, #125
    bl _ifacecall1__52
_proccall2215:
    add sp, #4*1 ; pop locals 1
    movs r1, #10
    bl _cmp_eq
    beq .else_0_501      
.jmpz2214:
    ldr r0, _ldlit_608 ; jacdac_enablePowerFaultPin_inline__P16014_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2297
_proccall2216:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_501:
.afterif_1_501:
.ret.16010:
    @stackempty locals
    movs r0, #0
.final_2_501:
jacdac_enablePowerFaultPin_inline__P16010_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1795,43): jacdac.enablePowerFaultPin.inline
    ;
    .object jacdac_enablePowerFaultPin_inline__P16014 "jacdac/routing.ts(1795,43): jacdac.enablePowerFaultPin.inline"
jacdac_enablePowerFaultPin_inline__P16014_pre:
    .section code
    .balign 4
jacdac_enablePowerFaultPin_inline__P16014_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_enablePowerFaultPin_inline__P16014_args@fn
jacdac_enablePowerFaultPin_inline__P16014_args:
    .section code
jacdac_enablePowerFaultPin_inline__P16014:
jacdac_enablePowerFaultPin_inline__P16014_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_enablePowerFaultPin_inline__P16014_locals:
    ldr r0, _ldlit_609 ; _str213      
    mov r7, sp
    str r7, [r6, #4]
    bl control::dmesg
    @stackempty locals
    movs r0, #10
    push {r0} ; proc-arg
    bl jacdac_enablePower__P5129
_proccall2217:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #159
    push {r0} ; proc-arg
    bl jacdac_setPinByCfg__P5128
_proccall2218:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    bl pause__P2227
_proccall2219:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #10
    push {r0} ; proc-arg
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #159
    push {r0} ; proc-arg
    bl jacdac_setPinByCfg__P5128
_proccall2220:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    bl jacdac_enablePower__P5129
_proccall2221:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.16014:
    @stackempty locals
    movs r0, #0
.final_0_502:
jacdac_enablePowerFaultPin_inline__P16014_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1779,5): jacdac.enablePower
    ;
    .object jacdac_enablePower__P5129 "jacdac/routing.ts(1779,5): jacdac.enablePower"
jacdac_enablePower__P5129_pre:
    .section code
    .balign 4
    .section code
jacdac_enablePower__P5129:
jacdac_enablePower__P5129_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_enablePower__P5129_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #161
    push {r0} ; proc-arg
    bl jacdac_setPinByCfg__P5128
_proccall2222:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.5129:
    @stackempty locals
    movs r0, #0
.final_0_503:
jacdac_enablePower__P5129_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(69,9): jacdac.Bus.start
    ;
    .object jacdac_Bus_start__P3463 "jacdac/routing.ts(69,9): jacdac.Bus.start"
jacdac_Bus_start__P3463_pre:
    .section code
    .balign 4
jacdac_Bus_start__P3463_args:
    cmp r4, #1
    bge jacdac_Bus_start__P3463_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Bus_start__P3463_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_start__P3463:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_start__P3463_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_start__P3463_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_running__P3462_nochk
_proccall2224:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_504      
.jmpz2223:
    b .ret.3463      
    b .afterif_1_504      
.object PUSH
.balign 4
_ldlit_601:
 .word _str190
_ldlit_602:
 .word _str214
_ldlit_603:
 .word jacdac_enableIdentityLED_inline__P15960_Lit
_ldlit_604:
 .word jacdac_enableIdentityLED_inline__P15962_Lit
_ldlit_605:
 .word 131073
_ldlit_606:
 .word _str212
_ldlit_607:
 .word jacdac_enablePowerFaultPin_inline__P16010_Lit
_ldlit_608:
 .word jacdac_enablePowerFaultPin_inline__P16014_Lit
_ldlit_609:
 .word _str213
.object POP
.else_0_504:
.afterif_1_504:
    ldr r0, _ldlit_611 ; jacdac_ControlServer__C3598_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_ControlServer_constructor__P3599
_proccall2225:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #36]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; the one arg
    bl jacdac_Server_start__P3515
_proccall2226:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3463:
    @stackempty locals
    movs r0, #0
.final_2_504:
jacdac_Bus_start__P3463_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1629,9): jacdac.ControlServer.constructor
    ;
    .object jacdac_ControlServer_constructor__P3599 "jacdac/routing.ts(1629,9): jacdac.ControlServer.constructor"
jacdac_ControlServer_constructor__P3599_pre:
    .section code
    .balign 4
    .section code
jacdac_ControlServer_constructor__P3599:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ControlServer__C3598_validate_107
    mov lr, r7
jacdac_ControlServer_constructor__P3599_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ControlServer_constructor__P3599_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_constructor__P3498
_proccall2227:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3599:
    @stackempty locals
.final_0_505:
jacdac_ControlServer_constructor__P3599_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(65,9): jacdac.Bus.running
    ;
    .object jacdac_Bus_running__P3462 "jacdac/routing.ts(65,9): jacdac.Bus.running"
jacdac_Bus_running__P3462_pre:
    .section code
    .balign 4
jacdac_Bus_running__P3462_args:
    cmp r4, #1
    bge jacdac_Bus_running__P3462_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Bus_running__P3462_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_running__P3462:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_running__P3462_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_running__P3462_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3462:
    @stackempty locals
.final_0_507:
jacdac_Bus_running__P3462_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/control.ts(11,5): control.runInParallel
    ;
    .object control_runInParallel__P2297 "core/control.ts(11,5): control.runInParallel"
control_runInParallel__P2297_pre:
    .section code
    .balign 4
    .section code
control_runInParallel__P2297:
control_runInParallel__P2297_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_runInParallel__P2297_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_71
    mov r7, sp
    str r7, [r6, #4]
    bl control::inBackground
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2297:
    @stackempty locals
    movs r0, #0
.final_0_508:
control_runInParallel__P2297_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1881,5): jacdac.startProxy
    ;
    .object jacdac_startProxy__P5133 "jacdac/routing.ts(1881,5): jacdac.startProxy"
jacdac_startProxy__P5133_pre:
    .section code
    .balign 4
    .section code
jacdac_startProxy__P5133:
jacdac_startProxy__P5133_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_startProxy__P5133_locals:
    movs r0, #17
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_exists__P2834
_proccall2228:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_509      
.jmpz2229:
    movs r0, #17
    lsls r0, r0, #5
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_remove__P2833
_proccall2230:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_509:
.afterif_1_509:
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_exists__P2834
_proccall2232:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_509      
.jmpz2231:
    b .ret.5133      
.else_2_509:
.afterif_3_509:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_509      
.jmpz2233:
    ldr r0, _ldlit_612 ; _str218      
    b .condexprfin_5_509      
.condexprz_4_509:
    ldr r0, _ldlit_613 ; _str219      
.condexprfin_5_509:
; jmp value (already in r0)
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_614 ; _str217      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_615 ; _str184      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl control::dmesg
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_remove__P2833
_proccall2234:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #128
    movs r2, #10
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #129
    movs r2, #66
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #215
    movs r2, #66
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #65
    lsls r1, r1, #2
    movs r2, #66
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #0]      
    bl jacdac_start__P3607
_proccall2235:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_509      
.jmpz2236:
    bl jacdac_proxyLoop__P5132
_proccall2237:
    @stackempty locals
.else_6_509:
.afterif_7_509:
.ret.5133:
    @stackempty locals
    movs r0, #0
.final_8_509:
    add sp, #4*1 ; pop locals 1
jacdac_startProxy__P5133_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1829,5): jacdac.proxyLoop
    ;
    .object jacdac_proxyLoop__P5132 "jacdac/routing.ts(1829,5): jacdac.proxyLoop"
jacdac_proxyLoop__P5132_pre:
    .section code
    .balign 4
    .section code
jacdac_proxyLoop__P5132:
jacdac_proxyLoop__P5132_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_proxyLoop__P5132_locals:
    ldr r0, _ldlit_616 ; jacdac_proxyLoop_inline__P16085_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #104]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624
_proccall2238:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    movs r0, #137
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626
_proccall2239:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    bl jacdac_isSimulator__P3602
_proccall2240:
    str r0, [sp, locals@1]
    @stackempty locals
.cont.16099:
    movs r0, #66
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz2241
    b .brk.16099      
.jmpz2241:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_510      
.jmpz2242:
    ldr r0, _ldlit_617 ; 122881      
    b .condexprfin_1_510      
.condexprz_0_510:
    movs r0, #44
    lsls r0, r0, #8
    adds r0, #1
.condexprfin_1_510:
; jmp value (already in r0)
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_510      
.jmpz2243:
    ldr r0, _ldlit_617 ; 122881      
    b .condexprfin_3_510      
.condexprz_2_510:
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #1
.condexprfin_3_510:
; jmp value (already in r0)
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #63
    bl _numops_ands
    movs r1, #33
    bl _numops_subs
    push {r0} ; the one arg
    bl Math_abs__P2020
_proccall2244:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #31
    bl _cmp_gt
    beq .else_4_510      
.jmpz2245:
    movs r0, #31
    str r0, [sp, locals@2]
    @stackempty locals
    b .afterif_5_510      
.object PUSH
.balign 4
_ldlit_611:
 .word jacdac_ControlServer__C3598_VT
_ldlit_612:
 .word _str218
_ldlit_613:
 .word _str219
_ldlit_614:
 .word _str217
_ldlit_615:
 .word _str184
_ldlit_616:
 .word jacdac_proxyLoop_inline__P16085_Lit
_ldlit_617:
 .word 122881
.object POP
.else_4_510:
.afterif_5_510:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl jacdac_setLed__P3613
_proccall2246:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #201
    push {r0} ; proc-arg
    bl pause__P2227
_proccall2247:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.16099      
.brk.16099:
.ret.5132:
    @stackempty locals
    movs r0, #0
.final_6_510:
    add sp, #4*6 ; pop locals 6
jacdac_proxyLoop__P5132_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1830,39): jacdac.proxyLoop.inline
    ;
    .object jacdac_proxyLoop_inline__P16085 "jacdac/routing.ts(1830,39): jacdac.proxyLoop.inline"
jacdac_proxyLoop_inline__P16085_pre:
    .section code
    .balign 4
jacdac_proxyLoop_inline__P16085_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_proxyLoop_inline__P16085_args@fn
jacdac_proxyLoop_inline__P16085_args:
    .section code
jacdac_proxyLoop_inline__P16085:
jacdac_proxyLoop_inline__P16085_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_proxyLoop_inline__P16085_locals:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #147
    push {r0} ; proc-arg
    movs r0, #137
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626
_proccall2248:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.16085:
    @stackempty locals
    movs r0, #0
.final_0_511:
jacdac_proxyLoop_inline__P16085_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(173,5): settings.exists
    ;
    .object settings_exists__P2834 "settings/settings.ts(173,5): settings.exists"
settings_exists__P2834_pre:
    .section code
    .balign 4
    .section code
settings_exists__P2834:
settings_exists__P2834_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_exists__P2834_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_exists
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2834:
    @stackempty locals
.final_0_512:
settings_exists__P2834_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1992,5): jacdac.setLed
    ;
    .object jacdac_setLed__P3613 "jacdac/routing.ts(1992,5): jacdac.setLed"
jacdac_setLed__P3613_pre:
    .section code
    .balign 4
    .section code
jacdac_setLed__P3613:
jacdac_setLed__P3613_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_setLed__P3613_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #0
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::_setLedChannel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::_setLedChannel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #2
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::_setLedChannel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3613:
    @stackempty locals
    movs r0, #0
.final_0_513:
jacdac_setLed__P3613_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(61,9): jacdac.Bus.constructor
    ;
    .object jacdac_Bus_constructor__P3461 "jacdac/routing.ts(61,9): jacdac.Bus.constructor"
jacdac_Bus_constructor__P3461_pre:
    .section code
    .balign 4
    .section code
jacdac_Bus_constructor__P3461:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3455_validate_33
    mov lr, r7
jacdac_Bus_constructor__P3461_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_constructor__P3461_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_619 ; 4000001      
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #32]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #40]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #44]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #52]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_constructor__P3623
_proccall2249:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
.ret.3461:
    @stackempty locals
.final_0_514:
jacdac_Bus_constructor__P3461_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(97,1): initPlatform
    ;
    .object initPlatform__P2867 "jacdac/mbcompat.ts(97,1): initPlatform"
initPlatform__P2867_pre:
    .section code
    .balign 4
    .section code
initPlatform__P2867:
initPlatform__P2867_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
initPlatform__P2867_locals:
    ldr r0, _ldlit_620 ; initPlatform_inline__P16166_Lit      
    ldr r7, [r6, #0]
    str r0, [r7, #16]
    @stackempty locals
.ret.2867:
    @stackempty locals
    movs r0, #0
.final_0_515:
initPlatform__P2867_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(99,30): initPlatform.inline
    ;
    .object initPlatform_inline__P16166 "jacdac/mbcompat.ts(99,30): initPlatform.inline"
initPlatform_inline__P16166_pre:
    .section code
    .balign 4
initPlatform_inline__P16166_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word initPlatform_inline__P16166_args@fn
initPlatform_inline__P16166_args:
    .section code
initPlatform_inline__P16166:
initPlatform_inline__P16166_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
initPlatform_inline__P16166_locals:
    ldr r0, _ldlit_621 ; 1709984379      
    ldr r7, [r6, #0]
    str r0, [r7, #24]
    @stackempty locals
    ldr r0, _ldlit_622 ; handleStatusEvent__P2866_Lit      
    push {r0} ; proc-arg
    movs r0, #137
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3624
_proccall2250:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_exists__P2834
_proccall2252:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_516      
.jmpz2251:
    ldr r0, _ldlit_623 ; reset_inline__P16176_Lit      
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_108
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl input::onButtonPressed
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_108
    movs r0, #2
    mov r7, sp
    str r7, [r6, #4]
    bl input::onButtonPressed
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_516:
.afterif_1_516:
.ret.16166:
    @stackempty locals
    movs r0, #0
.final_2_516:
    add sp, #4*1 ; pop locals 1
initPlatform_inline__P16166_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(103,27): reset.inline
    ;
    .object reset_inline__P16176 "jacdac/mbcompat.ts(103,27): reset.inline"
reset_inline__P16176_pre:
    .section code
    .balign 4
reset_inline__P16176_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word reset_inline__P16176_args@fn
reset_inline__P16176_args:
    .section code
reset_inline__P16176:
reset_inline__P16176_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
reset_inline__P16176_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::reset
.ret.16176:
    @stackempty locals
    movs r0, #0
.final_0_517:
reset_inline__P16176_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(77,1): handleStatusEvent
    ;
    .object handleStatusEvent__P2866 "jacdac/mbcompat.ts(77,1): handleStatusEvent"
handleStatusEvent__P2866_pre:
    .section code
    .balign 4
handleStatusEvent__P2866_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word handleStatusEvent__P2866_args@fn
handleStatusEvent__P2866_args:
    cmp r4, #1
    bge handleStatusEvent__P2866_nochk
    push {lr}
    bl _expand_args_1_5
    bl handleStatusEvent__P2866_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
handleStatusEvent__P2866:
handleStatusEvent__P2866_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
handleStatusEvent__P2866_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2253
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_518      
.jmpz2253:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #147
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2254
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_518      
.jmpz2254:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #149
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2255
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_518      
.jmpz2255:
    pop {r0} ; tmpref @1
    b .brk.16190      
.switch_0_518:
    ldr r0, _ldlit_624 ; _str102      
    mov r7, sp
    str r7, [r6, #4]
    bl control::dmesg
    @stackempty locals
    movs r0, #66
    movs r1, #69
    lsls r1, r1, #3
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl proxyAnimation__P2864
_proccall2256:
    @stackempty locals
    b .brk.16190      
.switch_1_518:
    b .brk.16190      
.switch_2_518:
    movs r0, #69
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_518      
.jmpz2257:
    bl identifyAnimation__P2863
_proccall2258:
    @stackempty locals
.else_3_518:
.afterif_4_518:
.brk.16190:
.ret.2866:
    @stackempty locals
    movs r0, #0
.final_5_518:
handleStatusEvent__P2866_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(29,1): identifyAnimation
    ;
    .object identifyAnimation__P2863 "jacdac/mbcompat.ts(29,1): identifyAnimation"
identifyAnimation__P2863_pre:
    .section code
    .balign 4
    .section code
identifyAnimation__P2863:
identifyAnimation__P2863_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
identifyAnimation__P2863_locals:
    movs r0, #139
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_519      
.jmpz2259:
    b .ret.2863      
.else_0_519:
.afterif_1_519:
    movs r0, #66
    movs r1, #139
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl led::screenshot
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_625 ; identifyAnimation_inline__P16209_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control_runInParallel__P2297
_proccall2260:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2863:
    @stackempty locals
    movs r0, #0
.final_2_519:
    add sp, #4*1 ; pop locals 1
identifyAnimation__P2863_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(34,27): identifyAnimation.inline
    ;
    .object identifyAnimation_inline__P16209 "jacdac/mbcompat.ts(34,27): identifyAnimation.inline"
identifyAnimation_inline__P16209_pre:
    .section code
    .balign 4
identifyAnimation_inline__P16209_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word identifyAnimation_inline__P16209_args@fn
identifyAnimation_inline__P16209_args:
    .section code
identifyAnimation_inline__P16209:
identifyAnimation_inline__P16209_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
identifyAnimation_inline__P16209_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl led::stopAnimation
    @stackempty locals
    ldr r0, _ldlit_626 ; _img101      
    movs r1, #250
    mov r7, sp
    str r7, [r6, #4]
    bl basic::showAnimation
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl _conv_88
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::plotFrame
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #10
    movs r1, #139
    lsls r1, r1, #2
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.16209:
    @stackempty locals
    movs r0, #0
.final_0_520:
identifyAnimation_inline__P16209_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(48,1): proxyAnimation
    ;
    .object proxyAnimation__P2864 "jacdac/mbcompat.ts(48,1): proxyAnimation"
proxyAnimation__P2864_pre:
    .section code
    .balign 4
    .section code
proxyAnimation__P2864:
proxyAnimation__P2864_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
proxyAnimation__P2864_locals:
    ldr r0, _ldlit_627 ; proxyAnimation_inline__P16221_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2297
_proccall2261:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2864:
    @stackempty locals
    movs r0, #0
.final_0_521:
proxyAnimation__P2864_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(49,27): proxyAnimation.inline
    ;
    .object proxyAnimation_inline__P16221 "jacdac/mbcompat.ts(49,27): proxyAnimation.inline"
proxyAnimation_inline__P16221_pre:
    .section code
    .balign 4
proxyAnimation_inline__P16221_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word proxyAnimation_inline__P16221_args@fn
proxyAnimation_inline__P16221_args:
    .section code
proxyAnimation_inline__P16221:
proxyAnimation_inline__P16221_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
proxyAnimation_inline__P16221_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl led::stopAnimation
    @stackempty locals
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl led::setDisplayMode
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl basic::clearScreen
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.cont.16230:
    movs r0, #66
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz2262
    b .brk.16230      
.jmpz2262:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #9
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #3
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    str r0, [sp, locals@1]
    @stackempty locals
.cont.16240:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_522      
.jmpz2263:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_522      
.lazySkip_1_522:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    b .lazy_0_522      
.object PUSH
.balign 4
_ldlit_619:
 .word 4000001
_ldlit_620:
 .word initPlatform_inline__P16166_Lit
_ldlit_621:
 .word 1709984379
_ldlit_622:
 .word handleStatusEvent__P2866_Lit
_ldlit_623:
 .word reset_inline__P16176_Lit
_ldlit_624:
 .word _str102
_ldlit_625:
 .word identifyAnimation_inline__P16209_Lit
_ldlit_626:
 .word _img101
_ldlit_627:
 .word proxyAnimation_inline__P16221_Lit
.object POP
.lazy_0_522:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.16240      
.jmpz2264:
    movs r0, #3
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    str r0, [sp, locals@1]
    @stackempty locals
    b .cont.16240      
.brk.16240:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.16250:
    ldr r0, [sp, locals@2]
    movs r1, #9
    bl _cmp_lt
    beq .brk.16250      
.jmpz2265:
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.16253:
    ldr r0, [sp, locals@3]
    movs r1, #11
    bl _cmp_lt
    beq .brk.16253      
.jmpz2266:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_522      
.jmpz2267:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_522      
.lazySkip_4_522:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_3_522:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_522      
.jmpz2268:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_41
    movs r2, #255
    mov r7, sp
    str r7, [r6, #4]
    bl led::plotBrightness
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_5_522      
.else_2_522:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_41
    mov r7, sp
    str r7, [r6, #4]
    bl led::pointBrightness
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #17
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P2022
_proccall2269:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_109
    mov r7, sp
    str r7, [r6, #4]
    bl led::plotBrightness
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_5_522:
.cont.16253:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    @stackempty locals
    b .fortop.16253      
.brk.16253:
.cont.16250:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.16250      
.brk.16250:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    bl pause__P2227
_proccall2270:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.16230      
.brk.16230:
    movs r0, #0
.ret.16221:
    @stackempty locals
.final_6_522:
    add sp, #4*4 ; pop locals 4
proxyAnimation_inline__P16221_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(42,5): settings.initScopes
    ;
    .object settings_initScopes__P4896 "settings/settings.ts(42,5): settings.initScopes"
settings_initScopes__P4896_pre:
    .section code
    .balign 4
    .section code
settings_initScopes__P4896:
settings_initScopes__P4896_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_initScopes__P4896_locals:
    bl settings_runNumber__P2820
_proccall2271:
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #35
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_writeNumber__P2825
_proccall2272:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::deviceSerialNumber
    bl _numops_fromInt
    ldr r1, _ldlit_629 ; _dbl98      
    bl _numops_ands
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::seedAddRandom
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::seedAddRandom
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::programName
    push {r0} ; the one arg
    bl settings_setScope__P4895
_proccall2273:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4896:
    @stackempty locals
    movs r0, #0
.final_0_523:
    add sp, #4*1 ; pop locals 1
settings_initScopes__P4896_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(32,5): settings.setScope
    ;
    .object settings_setScope__P4895 "settings/settings.ts(32,5): settings.setScope"
settings_setScope__P4895_pre:
    .section code
    .balign 4
    .section code
settings_setScope__P4895:
settings_setScope__P4895_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_setScope__P4895_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_524      
.jmpz2274:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_524      
.lazySkip_2_524:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_524:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_524      
.jmpz2275:
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #154
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::panic
    @stackempty locals
.else_0_524:
.afterif_3_524:
    movs r0, #141
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_readString__P2828
_proccall2276:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@0]
    bl _cmp_neq
    beq .else_4_524      
.jmpz2277:
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_userClean
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #141
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_writeString__P2823
_proccall2278:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_524:
.afterif_5_524:
.ret.4895:
    @stackempty locals
    movs r0, #0
.final_6_524:
    add sp, #4*1 ; pop locals 1
settings_setScope__P4895_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(28,5): settings.runNumber
    ;
    .object settings_runNumber__P2820 "settings/settings.ts(28,5): settings.runNumber"
settings_runNumber__P2820_pre:
    .section code
    .balign 4
    .section code
settings_runNumber__P2820:
settings_runNumber__P2820_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_runNumber__P2820_locals:
    movs r0, #35
    lsls r0, r0, #4
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_readNumber__P2830
_proccall2280:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_525      
.jmpz2279:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_525      
.lazySkip_1_525:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_525:
; jmp value (already in r0)
.ret.2820:
    @stackempty locals
.final_2_525:
settings_runNumber__P2820_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(132,5): settings.readNumber
    ;
    .object settings_readNumber__P2830 "settings/settings.ts(132,5): settings.readNumber"
settings_readNumber__P2830_pre:
    .section code
    .balign 4
    .section code
settings_readNumber__P2830:
settings_readNumber__P2830_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
settings_readNumber__P2830_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_526      
.jmpz2281:
    movs r0, #0
    b .ret.2830      
    b .afterif_1_526      
.else_0_526:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl msgpack_unpackNumberArray__P2622
_proccall2282:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_526      
.jmpz2283:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_526      
.lazySkip_4_526:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
.lazy_3_526:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_526      
.jmpz2284:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    b .ret.2830      
.else_2_526:
.afterif_5_526:
    movs r0, #0
    b .ret.2830      
.afterif_1_526:
    movs r0, #0
.ret.2830:
    @stackempty locals
.final_6_526:
    add sp, #4*2 ; pop locals 2
settings_readNumber__P2830_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(92,5): msgpack.unpackNumberArray
    ;
    .object msgpack_unpackNumberArray__P2622 "core/buffer.ts(92,5): msgpack.unpackNumberArray"
msgpack_unpackNumberArray__P2622_pre:
    .section code
    .balign 4
    .section code
msgpack_unpackNumberArray__P2622:
msgpack_unpackNumberArray__P2622_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_unpackNumberArray__P2622_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
.cont.16359:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz2285
    b .brk.16359      
.jmpz2285:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*3 ; pop locals 3
    push {r0} ; the one arg
    bl msgpack_tagFormat__P4822
_proccall2286:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #6
    bl _cmp_eqq
    beq .else_0_527      
.jmpz2287:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_42
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #61
    negs r0, r0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_527      
.jmpz2288:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_527      
.lazySkip_3_527:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_2_527:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_527      
.jmpz2289:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_4_527      
.else_1_527:
    movs r0, #6
    b .ret.2622      
.afterif_4_527:
    b .afterif_5_527      
.object PUSH
.balign 4
_ldlit_629:
 .word _dbl98
.object POP
.else_0_527:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_24
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl pins_sizeOf__P2614
_proccall2290:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.afterif_5_527:
.cont.16404:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #131
    bl _cmp_eqq
    beq .brk.16404      
.jmpz2291:
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    @stackempty locals
    b .cont.16404      
.brk.16404:
    b .cont.16359      
.brk.16359:
    ldr r0, [sp, locals@0]
.ret.2622:
    @stackempty locals
.final_6_527:
    add sp, #4*3 ; pop locals 3
msgpack_unpackNumberArray__P2622_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1664,9): jacdac.ControlServer.handlePacketOuter
    ;
    .object jacdac_ControlServer_handlePacketOuter__P3601 "jacdac/routing.ts(1664,9): jacdac.ControlServer.handlePacketOuter"
jacdac_ControlServer_handlePacketOuter__P3601_pre:
    .section code
    .balign 4
jacdac_ControlServer_handlePacketOuter__P3601_args:
    cmp r4, #2
    bge jacdac_ControlServer_handlePacketOuter__P3601_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_ControlServer_handlePacketOuter__P3601_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_ControlServer_handlePacketOuter__P3601:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ControlServer__C3598_validate_107
    mov lr, r7
jacdac_ControlServer_handlePacketOuter__P3601_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ControlServer_handlePacketOuter__P3601_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isRegGet__P2940
_proccall2293:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz2292
    b .else_0_528      
.jmpz2292:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_regCode__P2941
_proccall2295:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2294
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_528      
.jmpz2294:
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #13
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2296
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_528      
.jmpz2296:
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2297
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_528      
.jmpz2297:
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #1
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2298
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_528      
.jmpz2298:
    pop {r0} ; tmpref @1
    b .switch_5_528      
.switch_1_528:
    ldr r7, [r6, #0]
    ldr r0, [r7, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_528      
.jmpz2299:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall2300:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #71
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P2967
_proccall2301:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_from__P2916
_proccall2302:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4985_nochk
_proccall2303:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P2922
_proccall2304:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_6_528:
.afterif_7_528:
    b .brk.16414      
.switch_2_528:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_ControlServer_sendUptime__P3600_nochk
_proccall2305:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P2922
_proccall2306:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.16414      
.switch_3_528:
    ldr r7, [r6, #0]
    ldr r0, [r7, #28]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_528      
.jmpz2307:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #28]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall2308:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #143
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P2967
_proccall2309:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_from__P2916
_proccall2310:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4985_nochk
_proccall2311:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P2922
_proccall2312:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_8_528:
.afterif_9_528:
    b .brk.16414      
.switch_4_528:
    movs r0, #145
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_11_528      
.jmpz2313:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_528      
.lazySkip_11_528:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::programName
.lazy_10_528:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall2314:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @2
    push {r0} ; proc-arg
    movs r0, #9
    lsls r0, r0, #6
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P2967
_proccall2315:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_from__P2916
_proccall2316:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4985_nochk
_proccall2317:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P2922
_proccall2318:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.16414      
.switch_5_528:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P2923
_proccall2319:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.brk.16414:
    b .afterif_12_528      
.else_0_528:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall2321:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2320
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_528      
.jmpz2320:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2322
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_14_528      
.jmpz2322:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2323
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_15_528      
.jmpz2323:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2324
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_16_528      
.jmpz2324:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2325
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_17_528      
.jmpz2325:
    pop {r0} ; tmpref @1
    b .switch_18_528      
.switch_13_528:
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_queueAnnounce__P3469
_proccall2326:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P2922
_proccall2327:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.16464      
.switch_14_528:
    ldr r0, _ldlit_631 ; _str172      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_jacdac_Client__C3544_this_39
_proccall2328:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #135
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626
_proccall2329:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #149
    push {r0} ; proc-arg
    movs r0, #137
    lsls r0, r0, #2
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3626
_proccall2330:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P2922
_proccall2331:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.16464      
.switch_15_528:
    ldr r0, _ldlit_632 ; _str210      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_jacdac_Client__C3544_this_39
_proccall2332:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::reset
    @stackempty locals
    b .brk.16464      
.switch_16_528:
    ldr r0, _ldlit_633 ; _str211      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_jacdac_Client__C3544_this_39
_proccall2333:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_ControlServer_handleFloodPing__P5112_nochk
_proccall2334:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P2922
_proccall2335:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.16464      
.switch_17_528:
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_19_528      
.jmpz2336:
    bl jacdac_resetToProxy__P5134
_proccall2337:
    @stackempty locals
.else_19_528:
.afterif_20_528:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P2922
_proccall2338:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.16464      
.switch_18_528:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P2923
_proccall2339:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.brk.16464:
.afterif_12_528:
.ret.3601:
    @stackempty locals
    movs r0, #0
.final_21_528:
jacdac_ControlServer_handlePacketOuter__P3601_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1639,9): jacdac.ControlServer.handleFloodPing
    ;
    .object jacdac_ControlServer_handleFloodPing__P5112 "jacdac/routing.ts(1639,9): jacdac.ControlServer.handleFloodPing"
jacdac_ControlServer_handleFloodPing__P5112_pre:
    .section code
    .balign 4
jacdac_ControlServer_handleFloodPing__P5112_args:
    cmp r4, #2
    bge jacdac_ControlServer_handleFloodPing__P5112_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_ControlServer_handleFloodPing__P5112_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_ControlServer_handleFloodPing__P5112:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ControlServer__C3598_validate_107
    mov lr, r7
jacdac_ControlServer_handleFloodPing__P5112_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_ControlServer_handleFloodPing__P5112_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, _ldlit_634 ; _str209      
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdunpack__P2947
_proccall2340:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #9
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.16518:
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@2]
    bl _cmp_lt
    beq .brk.16518      
.jmpz2341:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r0, #9
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_47
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.16518:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    b .fortop.16518      
.brk.16518:
    movs r0, #4
    ldr r1, _ldlit_635 ; queuePing_inline__P16531_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    pop {r0} ; tmpref @1
    str r0, [sp, locals@5]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physId
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_96
    movs r1, #101
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _lambda_call0_0
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.5112:
    @stackempty locals
    movs r0, #0
.final_0_529:
    add sp, #4*6 ; pop locals 6
jacdac_ControlServer_handleFloodPing__P5112_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1644,31): queuePing.inline
    ;
    .object queuePing_inline__P16531 "jacdac/routing.ts(1644,31): queuePing.inline"
queuePing_inline__P16531_pre:
    .section code
    .balign 4
queuePing_inline__P16531_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word queuePing_inline__P16531_args@fn
queuePing_inline__P16531_args:
    .section code
queuePing_inline__P16531:
queuePing_inline__P16531_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
queuePing_inline__P16531_locals:
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #1
    bl _cmp_le
    beq .else_0_530      
.jmpz2343:
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physId
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, _ldlit_636 ; jacdac_doNothing__P5104_Lit      
    push {r0} ; proc-arg
    bl _conv_96
    movs r1, #101
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_1_530      
.else_0_530:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    bl _conv_28
    movs r1, #11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*6]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #7
    push {r0} ; proc-arg
    bl jacdac_JDPacket_from__P2916
_proccall2344:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4985_nochk
_proccall2345:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_530:
.ret.16531:
    @stackempty locals
    movs r0, #0
.final_2_530:
queuePing_inline__P16531_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1614,5): jacdac.doNothing
    ;
    .object jacdac_doNothing__P5104 "jacdac/routing.ts(1614,5): jacdac.doNothing"
jacdac_doNothing__P5104_pre:
    .section code
    .balign 4
jacdac_doNothing__P5104_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_doNothing__P5104_args@fn
jacdac_doNothing__P5104_args:
    .section code
jacdac_doNothing__P5104:
jacdac_doNothing__P5104_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_doNothing__P5104_locals:
.ret.5104:
    @stackempty locals
    movs r0, #0
.final_0_531:
jacdac_doNothing__P5104_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_631:
 .word _str172
_ldlit_632:
 .word _str210
_ldlit_633:
 .word _str211
_ldlit_634:
 .word _str209
_ldlit_635:
 .word queuePing_inline__P16531_Lit
_ldlit_636:
 .word jacdac_doNothing__P5104_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1633,9): jacdac.ControlServer.sendUptime
    ;
    .object jacdac_ControlServer_sendUptime__P3600 "jacdac/routing.ts(1633,9): jacdac.ControlServer.sendUptime"
jacdac_ControlServer_sendUptime__P3600_pre:
    .section code
    .balign 4
jacdac_ControlServer_sendUptime__P3600_args:
    cmp r4, #1
    bge jacdac_ControlServer_sendUptime__P3600_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_ControlServer_sendUptime__P3600_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_ControlServer_sendUptime__P3600:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ControlServer__C3598_validate_107
    mov lr, r7
jacdac_ControlServer_sendUptime__P3600_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_ControlServer_sendUptime__P3600_locals:
    movs r0, #4
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::micros
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_28
    movs r1, #11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #35
    lsls r0, r0, #8
    adds r0, #13
    push {r0} ; proc-arg
    bl jacdac_JDPacket_from__P2916
_proccall2346:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4985_nochk
_proccall2347:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3600:
    @stackempty locals
    movs r0, #0
.final_0_532:
    add sp, #4*1 ; pop locals 1
jacdac_ControlServer_sendUptime__P3600_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(182,9): jacdac._rolemgr.RoleManagerServer.handlePacket
    ;
    .object jacdac__rolemgr_RoleManagerServer_handlePacket__P3333 "jacdac/rolemgr.ts(182,9): jacdac._rolemgr.RoleManagerServer.handlePacket"
jacdac__rolemgr_RoleManagerServer_handlePacket__P3333_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_handlePacket__P3333_args:
    cmp r4, #2
    bge jacdac__rolemgr_RoleManagerServer_handlePacket__P3333_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac__rolemgr_RoleManagerServer_handlePacket__P3333_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_handlePacket__P3333:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
    mov lr, r7
jacdac__rolemgr_RoleManagerServer_handlePacket__P3333_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_handlePacket__P3333_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl jacdac_Server_handleRegBool__P4995_nochk
_proccall2348:
    add sp, #4*4 ; pop locals 4
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall2350:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #35
    lsls r0, r0, #8
    adds r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2349
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_533      
.jmpz2349:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2351
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_533      
.jmpz2351:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2352
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_533      
.jmpz2352:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2353
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_533      
.jmpz2353:
    pop {r0} ; tmpref @1
    b .switch_4_533      
.switch_0_533:
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #48]
    mov r3, r0
    ldr r0, _ldlit_638 ; jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayEvery__P2000
_proccall2355:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_5_533      
.jmpz2354:
    movs r0, #3
    b .condexprfin_6_533      
.condexprz_5_533:
    movs r0, #1
.condexprfin_6_533:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    movs r0, #73
    lsls r0, r0, #3
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #35
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdpacked__P2919
_proccall2356:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4985_nochk
_proccall2357:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .brk.16587      
.switch_1_533:
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #19
    bl _cmp_ge
    beq .else_7_533      
.jmpz2358:
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #0
    movs r2, #8
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #17
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #9
    movs r2, #1
    negs r2, r2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toString
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac__rolemgr_setRole__P3329
_proccall2359:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_7_533:
.afterif_8_533:
    b .brk.16587      
.switch_2_533:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    bl _inst_jacdac_Bus__C3455_validate_33
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, _ldlit_639 ; packName__P16640_Lit      
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_OutPipe_respondForEach__P2990
_proccall2360:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .brk.16587      
.switch_3_533:
    bl jacdac__rolemgr_clearRoles__P3327
_proccall2361:
    @stackempty locals
    b .brk.16587      
.switch_4_533:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P2923
_proccall2362:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.brk.16587:
.ret.3333:
    @stackempty locals
    movs r0, #0
.final_9_533:
jacdac__rolemgr_RoleManagerServer_handlePacket__P3333_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(198,37): jacdac._rolemgr.RoleManagerServer.handlePacket.inline
    ;
    .object jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607 "jacdac/rolemgr.ts(198,37): jacdac._rolemgr.RoleManagerServer.handlePacket.inline"
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607_args@fn
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607:
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_534      
.jmpz2363:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_534      
.lazySkip_1_534:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_0_534:
; jmp value (already in r0)
.ret.16607:
    @stackempty locals
.final_2_534:
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(229,13): packName
    ;
    .object packName__P16640 "jacdac/rolemgr.ts(229,13): packName"
packName__P16640_pre:
    .section code
    .balign 4
packName__P16640_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word packName__P16640_args@fn
packName__P16640_args:
    cmp r4, #1
    bge packName__P16640_nochk
    push {lr}
    bl _expand_args_1_5
    bl packName__P16640_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
packName__P16640:
packName__P16640_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
packName__P16640_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_535      
.jmpz2364:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Device__C3572_validate_31
    ldr r0, [r0, #32]
    push {r0} ; the one arg
    bl Buffer_fromHex__P2645
_proccall2365:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_535      
.condexprz_0_535:
    movs r0, #8
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
.condexprfin_1_535:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_535      
.jmpz2366:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #20]
    b .condexprfin_3_535      
.condexprz_2_535:
    movs r0, #1
.condexprfin_3_535:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3544_validate_30
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    ldr r0, _ldlit_640 ; _str148      
    push {r0} ; proc-arg
    bl jacdac_jdpack__P2967
_proccall2367:
    add sp, #4*2 ; pop locals 2
.ret.16640:
    @stackempty locals
.final_4_535:
    add sp, #4*2 ; pop locals 2
packName__P16640_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(4,5): jacdac._rolemgr.clearRoles
    ;
    .object jacdac__rolemgr_clearRoles__P3327 "jacdac/rolemgr.ts(4,5): jacdac._rolemgr.clearRoles"
jacdac__rolemgr_clearRoles__P3327_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_clearRoles__P3327:
jacdac__rolemgr_clearRoles__P3327_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_clearRoles__P3327_locals:
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_list__P2832
_proccall2368:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, _ldlit_641 ; settings_remove__P2833_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P2001
_proccall2369:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #12]
    push {r0} ; proc-arg
    bl jacdac_Bus_clearAttachCache__P3467
_proccall2370:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3327:
    @stackempty locals
    movs r0, #0
.final_0_536:
jacdac__rolemgr_clearRoles__P3327_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(158,5): settings.list
    ;
    .object settings_list__P2832 "settings/settings.ts(158,5): settings.list"
settings_list__P2832_pre:
    .section code
    .balign 4
    .section code
settings_list__P2832:
settings_list__P2832_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_list__P2832_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_537      
.jmpz2371:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, args@0]
    @stackempty locals
.else_0_537:
.afterif_1_537:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_3
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_list
    add sp, #4*1 ; pop locals 1
.ret.2832:
    @stackempty locals
    b .final_2_537      
.object PUSH
.balign 4
_ldlit_638:
 .word jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P16607_Lit
_ldlit_639:
 .word packName__P16640_Lit
_ldlit_640:
 .word _str148
_ldlit_641:
 .word settings_remove__P2833_Lit
.object POP
.final_2_537:
settings_list__P2832_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(114,9): jacdac.OutPipe.respondForEach
    ;
    .object jacdac_OutPipe_respondForEach__P2990 "jacdac/pipes.ts(114,9): jacdac.OutPipe.respondForEach"
jacdac_OutPipe_respondForEach__P2990_pre:
    .section code
    .balign 4
jacdac_OutPipe_respondForEach__P2990_args:
    cmp r4, #3
    bge jacdac_OutPipe_respondForEach__P2990_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_OutPipe_respondForEach__P2990_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_OutPipe_respondForEach__P2990:
jacdac_OutPipe_respondForEach__P2990_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_OutPipe_respondForEach__P2990_locals:
    movs r0, #3
    ldr r1, _ldlit_643 ; jacdac_OutPipe_respondForEach_inline__P16687_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control_runInParallel__P2297
_proccall2372:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2990:
    @stackempty locals
    movs r0, #0
.final_0_538:
jacdac_OutPipe_respondForEach__P2990_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(115,35): jacdac.OutPipe.respondForEach.inline
    ;
    .object jacdac_OutPipe_respondForEach_inline__P16687 "jacdac/pipes.ts(115,35): jacdac.OutPipe.respondForEach.inline"
jacdac_OutPipe_respondForEach_inline__P16687_pre:
    .section code
    .balign 4
jacdac_OutPipe_respondForEach_inline__P16687_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_OutPipe_respondForEach_inline__P16687_args@fn
jacdac_OutPipe_respondForEach_inline__P16687_args:
    .section code
jacdac_OutPipe_respondForEach_inline__P16687:
jacdac_OutPipe_respondForEach_inline__P16687_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_OutPipe_respondForEach_inline__P16687_locals:
    ldr r0, _ldlit_644 ; _catch_16688      
    bl _pxt_save_exception_state
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_OutPipe_from__P5011
_proccall2373:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [r5, #4*4]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.16695:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.16695      
.jmpz2374:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_63
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_OutPipe_write__P2992
_proccall2376:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.16695:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.16695      
.brk.16695:
    movs r0, #0
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_OutPipe_close__P2994
_proccall2377:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    b .catchend_2_539      
_catch_16688:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getThrownValue
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl console_error__P2382
_proccall2378:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.catchend_2_539:
.ret.16687:
    @stackempty locals
    movs r0, #0
.final_3_539:
    add sp, #4*5 ; pop locals 5
jacdac_OutPipe_respondForEach_inline__P16687_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(155,9): jacdac.OutPipe.close
    ;
    .object jacdac_OutPipe_close__P2994 "jacdac/pipes.ts(155,9): jacdac.OutPipe.close"
jacdac_OutPipe_close__P2994_pre:
    .section code
    .balign 4
jacdac_OutPipe_close__P2994_args:
    cmp r4, #1
    bge jacdac_OutPipe_close__P2994_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_OutPipe_close__P2994_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_OutPipe_close__P2994:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_OutPipe__C2988_validate_110
    mov lr, r7
jacdac_OutPipe_close__P2994_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_OutPipe_close__P2994_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_OutPipe_writeAndClose__P2993_nochk
_proccall2379:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2994:
    @stackempty locals
    movs r0, #0
.final_0_540:
jacdac_OutPipe_close__P2994_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(151,9): jacdac.OutPipe.writeAndClose
    ;
    .object jacdac_OutPipe_writeAndClose__P2993 "jacdac/pipes.ts(151,9): jacdac.OutPipe.writeAndClose"
jacdac_OutPipe_writeAndClose__P2993_pre:
    .section code
    .balign 4
jacdac_OutPipe_writeAndClose__P2993_args:
    cmp r4, #2
    bge jacdac_OutPipe_writeAndClose__P2993_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_OutPipe_writeAndClose__P2993_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_OutPipe_writeAndClose__P2993:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_OutPipe__C2988_validate_110
    mov lr, r7
jacdac_OutPipe_writeAndClose__P2993_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_OutPipe_writeAndClose__P2993_locals:
    movs r0, #65
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_OutPipe_writeEx__P5012_nochk
_proccall2380:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2993:
    @stackempty locals
    movs r0, #0
.final_0_541:
jacdac_OutPipe_writeAndClose__P2993_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(130,9): jacdac.OutPipe.writeEx
    ;
    .object jacdac_OutPipe_writeEx__P5012 "jacdac/pipes.ts(130,9): jacdac.OutPipe.writeEx"
jacdac_OutPipe_writeEx__P5012_pre:
    .section code
    .balign 4
jacdac_OutPipe_writeEx__P5012_args:
    cmp r4, #3
    bge jacdac_OutPipe_writeEx__P5012_nochk
    push {lr}
    bl _expand_args_3_7
    bl jacdac_OutPipe_writeEx__P5012_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_OutPipe_writeEx__P5012:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_OutPipe__C2988_validate_110
    mov lr, r7
jacdac_OutPipe_writeEx__P5012_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_OutPipe_writeEx__P5012_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_542      
.jmpz2381:
    b .ret.5012      
.else_0_542:
.afterif_1_542:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    movs r1, #63
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #15
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_orrs
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@2]
    bl _numops_orrs
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_from__P2916
_proccall2382:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #4]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #65
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_542      
.jmpz2383:
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #12]
    @stackempty locals
.else_2_542:
.afterif_3_542:
    movs r0, #125
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2932
_proccall2384:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendWithAck__P2961
_proccall2386:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_542      
.jmpz2385:
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, _ldlit_645 ; _str138      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.else_4_542:
.afterif_5_542:
.ret.5012:
    @stackempty locals
    movs r0, #0
.final_6_542:
    add sp, #4*1 ; pop locals 1
jacdac_OutPipe_writeEx__P5012_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(333,9): jacdac.JDPacket._sendWithAck
    ;
    .object jacdac_JDPacket__sendWithAck__P2961 "jacdac/packet.ts(333,9): jacdac.JDPacket._sendWithAck"
jacdac_JDPacket__sendWithAck__P2961_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendWithAck__P2961_args:
    cmp r4, #2
    bge jacdac_JDPacket__sendWithAck__P2961_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_JDPacket__sendWithAck__P2961_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket__sendWithAck__P2961:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket__sendWithAck__P2961_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket__sendWithAck__P2961_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_543      
.jmpz2387:
    movs r0, #10
    b .ret.2961      
.else_0_543:
.afterif_1_543:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_requiresAck__P2930_nochk
_proccall2388:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket__sendCmdId__P2959_nochk
_proccall2389:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz2390
    b .else_2_543      
.object PUSH
.balign 4
_ldlit_643:
 .word jacdac_OutPipe_respondForEach_inline__P16687_Lit
_ldlit_644:
 .word _catch_16688
_ldlit_645:
 .word _str138
.object POP
.jmpz2390:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #116]
    @stackempty locals
    ldr r0, _ldlit_647 ; jacdac_JDPacket__sendWithAck_inline__P16772_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2297
_proccall2391:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_543:
.afterif_3_543:
    ldr r0, _ldlit_648 ; jacdac_AckAwaiter__C4937_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_AckAwaiter_constructor__P4938
_proccall2392:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.16786:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #4]
    movs r1, #1
    bl _cmp_gt
    beq .brk.16786      
.jmpz2393:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #255
    mov r7, sp
    str r7, [r6, #4]
    bl control::waitForEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.16786      
.brk.16786:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.ret.2961:
    @stackempty locals
.final_4_543:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket__sendWithAck__P2961_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(340,39): jacdac.JDPacket._sendWithAck.inline
    ;
    .object jacdac_JDPacket__sendWithAck_inline__P16772 "jacdac/packet.ts(340,39): jacdac.JDPacket._sendWithAck.inline"
jacdac_JDPacket__sendWithAck_inline__P16772_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendWithAck_inline__P16772_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_JDPacket__sendWithAck_inline__P16772_args@fn
jacdac_JDPacket__sendWithAck_inline__P16772_args:
    .section code
jacdac_JDPacket__sendWithAck_inline__P16772:
jacdac_JDPacket__sendWithAck_inline__P16772_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket__sendWithAck_inline__P16772_locals:
.cont.16773:
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.16773      
.jmpz2394:
    movs r0, #41
    movs r1, #101
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; the one arg
    bl pause__P2227
_proccall2395:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl jacdac_checkAckAwaiters__P4939
_proccall2396:
    @stackempty locals
    b .cont.16773      
.brk.16773:
.ret.16772:
    @stackempty locals
    movs r0, #0
.final_0_544:
jacdac_JDPacket__sendWithAck_inline__P16772_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(361,9): jacdac.AckAwaiter.constructor
    ;
    .object jacdac_AckAwaiter_constructor__P4938 "jacdac/packet.ts(361,9): jacdac.AckAwaiter.constructor"
jacdac_AckAwaiter_constructor__P4938_pre:
    .section code
    .balign 4
    .section code
jacdac_AckAwaiter_constructor__P4938:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    mov lr, r7
jacdac_AckAwaiter_constructor__P4938_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_AckAwaiter_constructor__P4938_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_crc__P2933
_proccall2397:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    movs r1, #81
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::allocateNotifyEvent
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4938:
    @stackempty locals
.final_0_545:
jacdac_AckAwaiter_constructor__P4938_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(371,5): jacdac.checkAckAwaiters
    ;
    .object jacdac_checkAckAwaiters__P4939 "jacdac/packet.ts(371,5): jacdac.checkAckAwaiters"
jacdac_checkAckAwaiters__P4939_pre:
    .section code
    .balign 4
    .section code
jacdac_checkAckAwaiters__P4939:
jacdac_checkAckAwaiters__P4939_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_checkAckAwaiters__P4939_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_649 ; toRetry_inline__P16819_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P2002
_proccall2398:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_9
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_546      
.jmpz2399:
    b .ret.4939      
.else_0_546:
.afterif_1_546:
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.16832:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.16832      
.jmpz2400:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #4]
    movs r1, #1
    bl _cmp_eq
    beq .else_2_546      
.jmpz2401:
    b .cont.16832      
.else_2_546:
.afterif_3_546:
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #8]
    movs r1, #9
    bl _cmp_ge
    beq .else_4_546      
.jmpz2402:
    ldr r0, [sp, locals@2]
    movs r1, #1
    negs r1, r1
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_37
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #255
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_5_546      
.else_4_546:
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #8]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    str r1, [r0, #8]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #81
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl jacdac_JDPacket__sendCore__P2956
_proccall2403:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_5_546:
.cont.16832:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.16832      
.brk.16832:
    movs r0, #0
    str r0, [sp, locals@3]
    ldr r0, _ldlit_650 ; jacdac_checkAckAwaiters_inline__P16865_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P2002
_proccall2404:
    add sp, #4*2 ; pop locals 2
    ldr r7, [r6, #0]
    str r0, [r7, #116]
    @stackempty locals
.ret.4939:
    @stackempty locals
    movs r0, #0
.final_6_546:
    add sp, #4*5 ; pop locals 5
jacdac_checkAckAwaiters__P4939_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(373,44): toRetry.inline
    ;
    .object toRetry_inline__P16819 "jacdac/packet.ts(373,44): toRetry.inline"
toRetry_inline__P16819_pre:
    .section code
    .balign 4
toRetry_inline__P16819_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word toRetry_inline__P16819_args@fn
toRetry_inline__P16819_args:
    cmp r4, #1
    bge toRetry_inline__P16819_nochk
    push {lr}
    bl _expand_args_1_5
    bl toRetry_inline__P16819_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
toRetry_inline__P16819:
toRetry_inline__P16819_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
toRetry_inline__P16819_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.ret.16819:
    @stackempty locals
.final_0_547:
toRetry_inline__P16819_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_647:
 .word jacdac_JDPacket__sendWithAck_inline__P16772_Lit
_ldlit_648:
 .word jacdac_AckAwaiter__C4937_VT
_ldlit_649:
 .word toRetry_inline__P16819_Lit
_ldlit_650:
 .word jacdac_checkAckAwaiters_inline__P16865_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(386,42): jacdac.checkAckAwaiters.inline
    ;
    .object jacdac_checkAckAwaiters_inline__P16865 "jacdac/packet.ts(386,42): jacdac.checkAckAwaiters.inline"
jacdac_checkAckAwaiters_inline__P16865_pre:
    .section code
    .balign 4
jacdac_checkAckAwaiters_inline__P16865_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_checkAckAwaiters_inline__P16865_args@fn
jacdac_checkAckAwaiters_inline__P16865_args:
    cmp r4, #1
    bge jacdac_checkAckAwaiters_inline__P16865_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_checkAckAwaiters_inline__P16865_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_checkAckAwaiters_inline__P16865:
jacdac_checkAckAwaiters_inline__P16865_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_checkAckAwaiters_inline__P16865_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_AckAwaiter__C4937_validate_36
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.ret.16865:
    @stackempty locals
.final_0_548:
jacdac_checkAckAwaiters_inline__P16865_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(147,9): jacdac.OutPipe.write
    ;
    .object jacdac_OutPipe_write__P2992 "jacdac/pipes.ts(147,9): jacdac.OutPipe.write"
jacdac_OutPipe_write__P2992_pre:
    .section code
    .balign 4
jacdac_OutPipe_write__P2992_args:
    cmp r4, #2
    bge jacdac_OutPipe_write__P2992_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_OutPipe_write__P2992_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_OutPipe_write__P2992:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_OutPipe__C2988_validate_110
    mov lr, r7
jacdac_OutPipe_write__P2992_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_OutPipe_write__P2992_locals:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_OutPipe_writeEx__P5012_nochk
_proccall2405:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2992:
    @stackempty locals
    movs r0, #0
.final_0_549:
jacdac_OutPipe_write__P2992_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(105,9): jacdac.OutPipe.from
    ;
    .object jacdac_OutPipe_from__P5011 "jacdac/pipes.ts(105,9): jacdac.OutPipe.from"
jacdac_OutPipe_from__P5011_pre:
    .section code
    .balign 4
jacdac_OutPipe_from__P5011_args:
    cmp r4, #1
    bge jacdac_OutPipe_from__P5011_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_OutPipe_from__P5011_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_OutPipe_from__P5011:
jacdac_OutPipe_from__P5011_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_OutPipe_from__P5011_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, _ldlit_652 ; _str137      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_jdunpack__P2966
_proccall2406:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, _ldlit_653 ; jacdac_OutPipe__C2988_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_OutPipe_constructor__P2989
_proccall2407:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
.ret.5011:
    @stackempty locals
.final_0_550:
    add sp, #4*3 ; pop locals 3
jacdac_OutPipe_from__P5011_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(103,9): jacdac.OutPipe.constructor
    ;
    .object jacdac_OutPipe_constructor__P2989 "jacdac/pipes.ts(103,9): jacdac.OutPipe.constructor"
jacdac_OutPipe_constructor__P2989_pre:
    .section code
    .balign 4
    .section code
jacdac_OutPipe_constructor__P2989:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_OutPipe__C2988_validate_110
    mov lr, r7
jacdac_OutPipe_constructor__P2989_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_OutPipe_constructor__P2989_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    movs r0, #0
.ret.2989:
    @stackempty locals
.final_0_551:
jacdac_OutPipe_constructor__P2989_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(727,9): jacdac.Server.handleRegBool
    ;
    .object jacdac_Server_handleRegBool__P4995 "jacdac/routing.ts(727,9): jacdac.Server.handleRegBool"
jacdac_Server_handleRegBool__P4995_pre:
    .section code
    .balign 4
jacdac_Server_handleRegBool__P4995_args:
    cmp r4, #4
    bge jacdac_Server_handleRegBool__P4995_nochk
    push {lr}
    bl _expand_args_4_43
    bl jacdac_Server_handleRegBool__P4995_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
jacdac_Server_handleRegBool__P4995:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_handleRegBool__P4995_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handleRegBool__P4995_locals:
    ldr r0, [sp, args@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_552      
.jmpz2408:
    movs r0, #3
    b .condexprfin_1_552      
.condexprz_0_552:
    movs r0, #1
.condexprfin_1_552:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, _ldlit_654 ; _str114      
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleRegValue__P4994_nochk
_proccall2409:
    add sp, #4*5 ; pop locals 5
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.4995:
    @stackempty locals
.final_2_552:
    add sp, #4*1 ; pop locals 1
jacdac_Server_handleRegBool__P4995_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/logger-server/server.ts(48,9): jacdac.LoggerServer.log
    ;
    .object jacdac_LoggerServer_log__P3212 "jacdac/logger-server/server.ts(48,9): jacdac.LoggerServer.log"
jacdac_LoggerServer_log__P3212_pre:
    .section code
    .balign 4
jacdac_LoggerServer_log__P3212_args:
    cmp r4, #2
    bge jacdac_LoggerServer_log__P3212_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_LoggerServer_log__P3212_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_LoggerServer_log__P3212:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_LoggerServer__C3207_validate_103
    mov lr, r7
jacdac_LoggerServer_log__P3212_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_LoggerServer_log__P3212_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_LoggerServer_add__P3215_nochk
_proccall2410:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3212:
    @stackempty locals
    movs r0, #0
.final_0_553:
jacdac_LoggerServer_log__P3212_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/logger-server/server.ts(11,9): jacdac.LoggerServer.handlePacket
    ;
    .object jacdac_LoggerServer_handlePacket__P3210 "jacdac/logger-server/server.ts(11,9): jacdac.LoggerServer.handlePacket"
jacdac_LoggerServer_handlePacket__P3210_pre:
    .section code
    .balign 4
jacdac_LoggerServer_handlePacket__P3210_args:
    cmp r4, #2
    bge jacdac_LoggerServer_handlePacket__P3210_nochk
    push {lr}
    bl _expand_args_2_1
    bl jacdac_LoggerServer_handlePacket__P3210_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_LoggerServer_handlePacket__P3210:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_LoggerServer__C3207_validate_103
    mov lr, r7
jacdac_LoggerServer_handlePacket__P3210_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_LoggerServer_handlePacket__P3210_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    ldr r0, _ldlit_654 ; _str114      
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl jacdac_Server_handleRegValue__P4994_nochk
_proccall2411:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934
_proccall2413:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #65
    lsls r0, r0, #8
    adds r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz2412
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_554      
.jmpz2412:
    pop {r0} ; tmpref @1
    b .switch_1_554      
.switch_0_554:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_654 ; _str114      
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdunpack__P2947
_proccall2414:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #68]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_554      
.jmpz2415:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_554      
.lazySkip_4_554:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_3_554:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_554      
.jmpz2416:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@1]
    str r1, [r0, #72]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #68]
    @stackempty locals
.else_2_554:
.afterif_5_554:
    ldr r7, [r6, #0]
    ldr r0, [r7, #96]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_6_554      
.jmpz2417:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    ldr r7, [r6, #0]
    str r0, [r7, #96]
    @stackempty locals
.else_6_554:
.afterif_7_554:
    b .brk.16921      
.switch_1_554:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P2923
_proccall2418:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.brk.16921:
.ret.3210:
    @stackempty locals
    movs r0, #0
.final_8_554:
    add sp, #4*3 ; pop locals 3
jacdac_LoggerServer_handlePacket__P3210_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(721,9): jacdac.Server.toString
    ;
    .object jacdac_Server_toString__P3514 "jacdac/routing.ts(721,9): jacdac.Server.toString"
jacdac_Server_toString__P3514_pre:
    .section code
    .balign 4
jacdac_Server_toString__P3514_args:
    cmp r4, #1
    bge jacdac_Server_toString__P3514_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_Server_toString__P3514_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_toString__P3514:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3494_validate_34
    mov lr, r7
jacdac_Server_toString__P3514_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_toString__P3514_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_555      
.jmpz2419:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_555      
.lazySkip_1_555:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    mov r3, r0
    movs r0, #17
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_hexNum__P2909
_proccall2420:
    add sp, #4*2 ; pop locals 2
    b .lazy_0_555      
.object PUSH
.balign 4
_ldlit_652:
 .word _str137
_ldlit_653:
 .word jacdac_OutPipe__C2988_VT
_ldlit_654:
 .word _str114
.object POP
.lazy_0_555:
; jmp value (already in r0)
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_656 ; _str189      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_657 ; _str122      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
.ret.3514:
    @stackempty locals
.final_2_555:
jacdac_Server_toString__P3514_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(31,5): jacdac.hexNum
    ;
    .object jacdac_hexNum__P2909 "jacdac/packet.ts(31,5): jacdac.hexNum"
jacdac_hexNum__P2909_pre:
    .section code
    .balign 4
    .section code
jacdac_hexNum__P2909:
jacdac_hexNum__P2909_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_hexNum__P2909_locals:
    ldr r0, _ldlit_658 ; _str90      
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_659 ; _str103      
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.16981:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@1]
    bl _cmp_lt
    beq .brk.16981      
.jmpz2421:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_subs
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #9
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsrs
    add sp, #4*2 ; pop locals 2
    movs r1, #31
    bl _numops_ands
    push {r0} ; proc-arg
    bl _conv_26
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
.cont.16981:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.16981      
.brk.16981:
    ldr r0, [sp, locals@1]
.ret.2909:
    @stackempty locals
.final_0_556:
    add sp, #4*3 ; pop locals 3
jacdac_hexNum__P2909_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(272,9): jacdac.JDPacket.toString
    ;
    .object jacdac_JDPacket_toString__P2954 "jacdac/packet.ts(272,9): jacdac.JDPacket.toString"
jacdac_JDPacket_toString__P2954_pre:
    .section code
    .balign 4
jacdac_JDPacket_toString__P2954_args:
    cmp r4, #1
    bge jacdac_JDPacket_toString__P2954_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_toString__P2954_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_toString__P2954:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_toString__P2954_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_toString__P2954_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_557      
.jmpz2422:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_557      
.condexprz_0_557:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.condexprfin_1_557:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_2
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_660 ; _str106      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P2924_nochk
_proccall2423:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_shortDeviceId__P3571
_proccall2424:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_661 ; _str107      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P2931_nochk
_proccall2425:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_662 ; _str108      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P2934_nochk
_proccall2426:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    movs r0, #9
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_hexNum__P2909
_proccall2427:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_663 ; _str109      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_crc__P2933_nochk
_proccall2428:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    movs r0, #5
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_hexNum__P2909
_proccall2429:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_664 ; _str110      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_hexNum__P2909
_proccall2430:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_665 ; _str111      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #25
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #25
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #41
    bl _cmp_lt
    beq .else_2_557      
.jmpz2431:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_666 ; _str59      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_3_557      
.else_2_557:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_22
    movs r1, #0
    movs r2, #20
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    ldr r0, _ldlit_666 ; _str59      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_3
    ldr r1, _ldlit_667 ; _str62      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_4
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_3_557:
    ldr r0, [sp, locals@0]
.ret.2954:
    @stackempty locals
.final_4_557:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_toString__P2954_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_656:
 .word _str189
_ldlit_657:
 .word _str122
_ldlit_658:
 .word _str90
_ldlit_659:
 .word _str103
_ldlit_660:
 .word _str106
_ldlit_661:
 .word _str107
_ldlit_662:
 .word _str108
_ldlit_663:
 .word _str109
_ldlit_664:
 .word _str110
_ldlit_665:
 .word _str111
_ldlit_666:
 .word _str59
_ldlit_667:
 .word _str62
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(132,9): jacdac.JDPacket.size
    ;
    .object jacdac_JDPacket_size__P2928 "jacdac/packet.ts(132,9): jacdac.JDPacket.size"
jacdac_JDPacket_size__P2928_pre:
    .section code
    .balign 4
jacdac_JDPacket_size__P2928_args:
    cmp r4, #1
    bge jacdac_JDPacket_size__P2928_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_JDPacket_size__P2928_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_size__P2928:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C2910_validate_27
    mov lr, r7
jacdac_JDPacket_size__P2928_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_size__P2928_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #25
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
.ret.2928:
    @stackempty locals
.final_0_558:
jacdac_JDPacket_size__P2928_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-distance/client.ts(97,9): modules.DistanceClient.variant
    ;
    .object modules_DistanceClient_variant__P3803 "jacdac-distance/client.ts(97,9): modules.DistanceClient.variant"
modules_DistanceClient_variant__P3803_pre:
    .section code
    .balign 4
modules_DistanceClient_variant__P3803_args:
    cmp r4, #1
    bge modules_DistanceClient_variant__P3803_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_DistanceClient_variant__P3803_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_DistanceClient_variant__P3803:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_DistanceClient__C3797_validate_56
    mov lr, r7
modules_DistanceClient_variant__P3803_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_DistanceClient_variant__P3803_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall2432:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #108]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall2433:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.3803:
    @stackempty locals
.final_0_559:
    add sp, #4*1 ; pop locals 1
modules_DistanceClient_variant__P3803_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-temperature/client.ts(98,9): modules.TemperatureClient.variant
    ;
    .object modules_TemperatureClient_variant__P4557 "jacdac-temperature/client.ts(98,9): modules.TemperatureClient.variant"
modules_TemperatureClient_variant__P4557_pre:
    .section code
    .balign 4
modules_TemperatureClient_variant__P4557_args:
    cmp r4, #1
    bge modules_TemperatureClient_variant__P4557_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_TemperatureClient_variant__P4557_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_TemperatureClient_variant__P4557:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_TemperatureClient__C4551_validate_64
    mov lr, r7
modules_TemperatureClient_variant__P4557_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_TemperatureClient_variant__P4557_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall2434:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #108]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall2435:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.4557:
    @stackempty locals
.final_0_560:
    add sp, #4*1 ; pop locals 1
modules_TemperatureClient_variant__P4557_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-switch/client.g.ts(40,9): modules.SwitchClient.variant
    ;
    .object modules_SwitchClient_variant__P4526 "jacdac-switch/client.g.ts(40,9): modules.SwitchClient.variant"
modules_SwitchClient_variant__P4526_pre:
    .section code
    .balign 4
modules_SwitchClient_variant__P4526_args:
    cmp r4, #1
    bge modules_SwitchClient_variant__P4526_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_SwitchClient_variant__P4526_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_SwitchClient_variant__P4526:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_SwitchClient__C4523_validate_65
    mov lr, r7
modules_SwitchClient_variant__P4526_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_SwitchClient_variant__P4526_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall2436:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #92]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall2437:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.4526:
    @stackempty locals
.final_0_561:
    add sp, #4*1 ; pop locals 1
modules_SwitchClient_variant__P4526_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-relay/client.g.ts(72,9): modules.RelayClient.variant
    ;
    .object modules_RelayClient_variant__P4429 "jacdac-relay/client.g.ts(72,9): modules.RelayClient.variant"
modules_RelayClient_variant__P4429_pre:
    .section code
    .balign 4
modules_RelayClient_variant__P4429_args:
    cmp r4, #1
    bge modules_RelayClient_variant__P4429_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_RelayClient_variant__P4429_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_RelayClient_variant__P4429:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_RelayClient__C4425_validate_72
    mov lr, r7
modules_RelayClient_variant__P4429_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_RelayClient_variant__P4429_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall2438:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall2439:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.4429:
    @stackempty locals
.final_0_562:
    add sp, #4*1 ; pop locals 1
modules_RelayClient_variant__P4429_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-light-level/client.g.ts(62,9): modules.LightLevelClient.variant
    ;
    .object modules_LightLevelClient_variant__P4354 "jacdac-light-level/client.g.ts(62,9): modules.LightLevelClient.variant"
modules_LightLevelClient_variant__P4354_pre:
    .section code
    .balign 4
modules_LightLevelClient_variant__P4354_args:
    cmp r4, #1
    bge modules_LightLevelClient_variant__P4354_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_LightLevelClient_variant__P4354_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_LightLevelClient_variant__P4354:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LightLevelClient__C4350_validate_73
    mov lr, r7
modules_LightLevelClient_variant__P4354_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_LightLevelClient_variant__P4354_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall2440:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall2441:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.4354:
    @stackempty locals
.final_0_563:
    add sp, #4*1 ; pop locals 1
modules_LightLevelClient_variant__P4354_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-magnetic-field-level/client.g.ts(65,9): modules.MagneticFieldLevelClient.variant
    ;
    .object modules_MagneticFieldLevelClient_variant__P4383 "jacdac-magnetic-field-level/client.g.ts(65,9): modules.MagneticFieldLevelClient.variant"
modules_MagneticFieldLevelClient_variant__P4383_pre:
    .section code
    .balign 4
modules_MagneticFieldLevelClient_variant__P4383_args:
    cmp r4, #1
    bge modules_MagneticFieldLevelClient_variant__P4383_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_MagneticFieldLevelClient_variant__P4383_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_MagneticFieldLevelClient_variant__P4383:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_MagneticFieldLevelClient__C4379_validate_74
    mov lr, r7
modules_MagneticFieldLevelClient_variant__P4383_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_MagneticFieldLevelClient_variant__P4383_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall2442:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall2443:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.4383:
    @stackempty locals
.final_0_564:
    add sp, #4*1 ; pop locals 1
modules_MagneticFieldLevelClient_variant__P4383_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-potentiometer/client.g.ts(44,9): modules.PotentiometerClient.variant
    ;
    .object modules_PotentiometerClient_variant__P4406 "jacdac-potentiometer/client.g.ts(44,9): modules.PotentiometerClient.variant"
modules_PotentiometerClient_variant__P4406_pre:
    .section code
    .balign 4
modules_PotentiometerClient_variant__P4406_args:
    cmp r4, #1
    bge modules_PotentiometerClient_variant__P4406_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_PotentiometerClient_variant__P4406_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_PotentiometerClient_variant__P4406:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_PotentiometerClient__C4403_validate_75
    mov lr, r7
modules_PotentiometerClient_variant__P4406_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_PotentiometerClient_variant__P4406_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall2444:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall2445:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.4406:
    @stackempty locals
.final_0_565:
    add sp, #4*1 ; pop locals 1
modules_PotentiometerClient_variant__P4406_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-led/client.ts(230,9): modules.LedClient.variant
    ;
    .object modules_LedClient_variant__P4249 "jacdac-led/client.ts(230,9): modules.LedClient.variant"
modules_LedClient_variant__P4249_pre:
    .section code
    .balign 4
modules_LedClient_variant__P4249_args:
    cmp r4, #1
    bge modules_LedClient_variant__P4249_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_LedClient_variant__P4249_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_LedClient_variant__P4249:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_LedClient__C4237_validate_76
    mov lr, r7
modules_LedClient_variant__P4249_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_LedClient_variant__P4249_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall2446:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #112]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall2447:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.4249:
    @stackempty locals
.final_0_566:
    add sp, #4*1 ; pop locals 1
modules_LedClient_variant__P4249_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-gamepad/client.ts(100,9): modules.GamepadClient.variant
    ;
    .object modules_GamepadClient_variant__P3862 "jacdac-gamepad/client.ts(100,9): modules.GamepadClient.variant"
modules_GamepadClient_variant__P3862_pre:
    .section code
    .balign 4
modules_GamepadClient_variant__P3862_args:
    cmp r4, #1
    bge modules_GamepadClient_variant__P3862_nochk
    push {lr}
    bl _expand_args_1_5
    bl modules_GamepadClient_variant__P3862_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_GamepadClient_variant__P3862:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_GamepadClient__C3856_validate_79
    mov lr, r7
modules_GamepadClient_variant__P3862_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_GamepadClient_variant__P3862_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3568_nochk
_proccall2448:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #92]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3530
_proccall2449:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.3862:
    @stackempty locals
.final_0_567:
    add sp, #4*1 ; pop locals 1
modules_GamepadClient_variant__P3862_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(70,9): jacdac.SensorClient.announceCallback
    ;
    .object jacdac_SensorClient_announceCallback__P3267 "jacdac/sensor/client.ts(70,9): jacdac.SensorClient.announceCallback"
jacdac_SensorClient_announceCallback__P3267_pre:
    .section code
    .balign 4
jacdac_SensorClient_announceCallback__P3267_args:
    cmp r4, #1
    bge jacdac_SensorClient_announceCallback__P3267_nochk
    push {lr}
    bl _expand_args_1_5
    bl jacdac_SensorClient_announceCallback__P3267_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_SensorClient_announceCallback__P3267:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SensorClient__C3264_validate_62
    mov lr, r7
jacdac_SensorClient_announceCallback__P3267_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SensorClient_announceCallback__P3267_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_checkSamples__P5040_nochk
_proccall2450:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3267:
    @stackempty locals
    movs r0, #0
.final_0_568:
jacdac_SensorClient_announceCallback__P3267_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    .object _pxt_helper_trampoline "helper: trampoline"
    .section code
_pxt_lambda_trampoline:
    push { r4, r5, r6, r7, lr}
    mov r4, r8
    mov r5, r9
    mov r6, r10
    mov r7, r11
    push {r4, r5, r6, r7} ; save high registers
    mov r4, r1
    mov r5, r2
    mov r6, r3
    mov r7, r0
    bl _inst_builtin4_validate_59
    mov r0, sp
    push {r4, r5, r6, r7} ; push args and the lambda
    mov r1, sp
    bl pxt::pushThreadContext
    mov r6, r0          ; save ctx or globals
    mov r5, r7          ; save lambda for closure
    mov r0, r5          ; also save lambda pointer in r0 - needed by pxt::bindMethod
    ldr r1, [r5, #8]    ; ld fnptr
    movs r4, #3         ; 3 args
    blx r1              ; execute the actual lambda
    mov r7, r0          ; save result
    @dummystack 4
    add sp, #4*4        ; remove arguments and lambda
    mov r0, r6   ; or pop the thread context
    bl pxt::popThreadContext
    mov r0, r7 ; restore result
    pop {r4, r5, r6, r7} ; restore high registers
    mov r8, r4
    mov r9, r5
    mov r10, r6
    mov r11, r7
    pop { r4, r5, r6, r7, pc}
    .object _pxt_helper_exn "helper: exn"
    .section code
; r0 - try frame
; r1 - handler PC
_pxt_save_exception_state:
    push {r0, lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::beginTry
    pop {r1, r4}
    str r1, [r0, #1*4] ; PC
    mov r1, sp
    str r1, [r0, #2*4] ; SP
    str r5, [r0, #3*4] ; lambda ptr
    bx r4
    .section code
; r0 - try frame
; r1 - thread context
_pxt_restore_exception_state:
    mov r6, r1
    ldr r1, [r0, #2*4] ; SP
    mov sp, r1
    ldr r5, [r0, #3*4] ; lambda ptr
    ldr r1, [r0, #1*4] ; PC
    movs r0, #1
    orrs r1, r0
    bx r1
    .object _pxt_helper_stringconv "helper: stringconv"
    .section code
_pxt_stringConv:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #1
    bne .notstring
    bx lr
.notstring:
    ldr r7, [r3, #4*8]
    cmp r7, #0
    beq .fail
    push {r0, lr}
    movs r4, #1
    blx r7
    str r0, [sp, #0]
    b .numops
.fail:
    push {r0, lr}
.numops:
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toString
    pop {r1, pc}      
    .object _pxt_helper_get_buffer "helper: get buffer"
    .section code
_pxt_buffer_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #3
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldr r4, [r0, #4]
    cmp r1, r4
    bhs .oob
    adds r4, r0, r1
    ldrb r0, [r4, #8]
    lsls r0, r0, #1
    adds r0, #1
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    lsls r0, r0, #1
    adds r0, #1
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    movs r0, #1 ; 0 or undefined
    bx lr
    .object _pxt_helper_get_array "helper: get array"
    .section code
_pxt_array_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #6
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldrh r4, [r0, #8]
    cmp r1, r4
    bhs .oob
    lsls r1, r1, #2
    ldr r4, [r0, #4]
    ldr r0, [r4, r1]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    movs r0, #0 ; 0 or undefined
    bx lr
    .object _pxt_helper_set_buffer "helper: set buffer"
    .section code
_pxt_buffer_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #3
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldr r4, [r0, #4]
    cmp r1, r4
    bhs .oob
    adds r4, r0, r1
    strb r2, [r4, #8]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::setAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    push {lr}
    b .doop
    .object _pxt_helper_set_array "helper: set array"
    .section code
_pxt_array_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #6
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldrh r4, [r0, #8]
    cmp r1, r4
    bhs .oob
    lsls r1, r1, #2
    ldr r4, [r0, #4]
    str r2, [r4, r1]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::setAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    push {lr}
    b .doop
    .object _pxt_helper_get "helper: get"
    .section code
_pxt_map_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #8
    bne .notmap
    push {lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGetByString
    pop {pc}
.notmap:
    mov r4, r3 ; save VT
    push {r0, lr}
    mov r0, r1
    bl pxtrt::lookupMapKey
    mov r1, r0 ; put key index in r1
    ldr r0, [sp, #0] ; restore obj pointer
    mov r3, r4 ; restore vt
    bl .dowork
    add sp, #4*1 ; pop locals 1
    pop {pc}
.dowork:
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    movs r0, #0 ; undefined
    bx lr
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    bne .bind
    movs r4, #1
    bx r2
.bind:
    mov r4, lr
    bl _pxt_bind_helper
.field:
    ldr r0, [r0, r2] ; load field
    bx lr
.objlit:
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .object _pxt_helper_set "helper: set"
    .section code
_pxt_map_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #8
    bne .notmap
    push {lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSetByString
    pop {pc}
.notmap:
    mov r4, r3 ; save VT
    push {r0, r2, lr}
    mov r0, r1
    bl pxtrt::lookupMapKey
    mov r1, r0 ; put key index in r1
    ldr r0, [sp, #0] ; restore obj pointer
    mov r3, r4 ; restore vt
    bl .dowork
    add sp, #4*2 ; pop locals 2
    pop {pc}
.dowork:
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check for next descriptor
    ldrh r7, [r3, #8]
    cmp r7, r1
    bne .fail2 ; no setter!
    ldr r2, [r3, #12]
    movs r4, #2
    bx r2
.field:
    ldr r3, [sp, #4] ; ld-val
    str r3, [r0, r2] ; store field
    bx lr
.objlit:
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .object _pxt_helper_bind "helper: bind"
    .section code
_pxt_bind_helper:
    push {r0, r2}
    movs r0, #2
    ldr r1, _ldlit_669 ; _pxt_bind_lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    pop {r1, r2}
    str r1, [r0, #12]
    str r2, [r0, #16]
    bx r4 ; return
_pxt_bind_lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word .bindCode@fn
.bindCode:
; r0-bind object, r4-#args
    cmp r4, #12
    bge .fail
    lsls r3, r4, #2
    ldr r2, _ldlit_670 ; _pxt_copy_list      
    ldr r1, [r2, r3]
    ldr r3, [r0, #12]
    ldr r2, [r0, #16]
    adds r4, r4, #1
    bx r1
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
_pxt_copy_list:
    .word _pxt_bind_0@fn
    .word _pxt_bind_1@fn
    .word _pxt_bind_2@fn
    .word _pxt_bind_3@fn
    .word _pxt_bind_4@fn
    .word _pxt_bind_5@fn
    .word _pxt_bind_6@fn
    .word _pxt_bind_7@fn
    .word _pxt_bind_8@fn
    .word _pxt_bind_9@fn
    .word _pxt_bind_10@fn
    .word _pxt_bind_11@fn
_pxt_bind_0:
    sub sp, #4
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*1] ; store LR
    blx r2
    ldr r1, [sp, #4*1]
    add sp, #8
    bx r1
_pxt_bind_1:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*2] ; store LR
    blx r2
    ldr r1, [sp, #4*2]
    add sp, #8
    bx r1
_pxt_bind_2:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*3] ; store LR
    blx r2
    ldr r1, [sp, #4*3]
    add sp, #8
    bx r1
_pxt_bind_3:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*4] ; store LR
    blx r2
    ldr r1, [sp, #4*4]
    add sp, #8
    bx r1
_pxt_bind_4:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*5] ; store LR
    blx r2
    ldr r1, [sp, #4*5]
    add sp, #8
    bx r1
_pxt_bind_5:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*6] ; store LR
    blx r2
    ldr r1, [sp, #4*6]
    add sp, #8
    bx r1
_pxt_bind_6:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*7] ; store LR
    blx r2
    ldr r1, [sp, #4*7]
    add sp, #8
    bx r1
_pxt_bind_7:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*8] ; store LR
    blx r2
    ldr r1, [sp, #4*8]
    add sp, #8
    bx r1
_pxt_bind_8:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*9] ; store LR
    blx r2
    ldr r1, [sp, #4*9]
    add sp, #8
    bx r1
_pxt_bind_9:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*10] ; store LR
    blx r2
    ldr r1, [sp, #4*10]
    add sp, #8
    bx r1
_pxt_bind_10:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    ldr r1, [sp, #4*10]
    str r1, [sp, #4*9]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*11] ; store LR
    blx r2
    ldr r1, [sp, #4*11]
    add sp, #8
    bx r1
_pxt_bind_11:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    ldr r1, [sp, #4*10]
    str r1, [sp, #4*9]
    ldr r1, [sp, #4*11]
    str r1, [sp, #4*10]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*12] ; store LR
    blx r2
    ldr r1, [sp, #4*12]
    add sp, #8
    bx r1
_code_end:
    .section code
    .object _code_helper__lambda_call0_0
_lambda_call0_0:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #0
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    str r5, [sp, #4*0]
    mov r1, lr
    str r1, [sp, #4*1]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*1] ; restore what was in LR
    ldr r5, [sp, #4*0] ; restore lambda ctx
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_2_1
_expand_args_2_1:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #2*4]
    str r1, [sp, #2*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__conv_2
_conv_2:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    mov r1, r0      
    ldr r0, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_3
_conv_3:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_4
_conv_4:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__expand_args_1_5
_expand_args_1_5:
    movs r0, #0
    movs r1, #0
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_machine_MicrobitMachine__C5435_validate_6
_inst_machine_MicrobitMachine__C5435_validate_6:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #18
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_3_7
_expand_args_3_7:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #3*4]
    str r1, [sp, #3*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #3*4]
    str r1, [sp, #3*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_builtin6_validate_8
_inst_builtin6_validate_8:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #6
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_9
_conv_9:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin6_validate_8
    pop {pc}
.object PUSH
.balign 4
_ldlit_669:
 .word _pxt_bind_lit
_ldlit_670:
 .word _pxt_copy_list
.object POP
    @stackempty args
    .section code
    .object _code_helper__expand_args_6_10
_expand_args_6_10:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #5
    blt .zero5
    ldr r0, [sp, #6*4]
    str r1, [sp, #6*4] ; clear existing
.zero5:
    push {r0}
    cmp r4, #4
    blt .zero4
    ldr r0, [sp, #6*4]
    str r1, [sp, #6*4] ; clear existing
.zero4:
    push {r0}
    cmp r4, #3
    blt .zero3
    ldr r0, [sp, #6*4]
    str r1, [sp, #6*4] ; clear existing
.zero3:
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #6*4]
    str r1, [sp, #6*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #6*4]
    str r1, [sp, #6*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_modules_HidKeyboardClient__C4151_validate_11
_inst_modules_HidKeyboardClient__C4151_validate_11:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #40
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_12
_conv_12:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin6_validate_8
    ldr r1, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_13
_conv_13:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_14
_conv_14:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__lambda_call2_15
_lambda_call2_15:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #2
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    str r5, [sp, #4*2]
    mov r1, lr
    str r1, [sp, #4*3]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*3] ; restore what was in LR
    ldr r5, [sp, #4*2] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_16
_conv_16:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_17
_conv_17:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__lambda_call3_18
_lambda_call3_18:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #3
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*2]
    str r5, [sp, #4*3]
    mov r1, lr
    str r1, [sp, #4*4]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*4] ; restore what was in LR
    ldr r5, [sp, #4*3] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*4]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_TokenParser__C4968_validate_19
_inst_jacdac_TokenParser__C4968_validate_19:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #49
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_builtin3_validate_20
_inst_builtin3_validate_20:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #3
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_21
_conv_21:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin3_validate_20
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0}
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_22
_conv_22:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin3_validate_20
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_23
_conv_23:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_20
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_20
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_24
_conv_24:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_20
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_25
_conv_25:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*3] ; estack
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_26
_conv_26:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_JDPacket__C2910_validate_27
_inst_jacdac_JDPacket__C2910_validate_27:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #50
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_28
_conv_28:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_20
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_29
_conv_29:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r2, r0      
    ldr r0, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_Client__C3544_validate_30
_inst_jacdac_Client__C3544_validate_30:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #19
    blt .fail
    cmp r2, #40
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_Device__C3572_validate_31
_inst_jacdac_Device__C3572_validate_31:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #47
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_32
_conv_32:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_20
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_20
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_Bus__C3455_validate_33
_inst_jacdac_Bus__C3455_validate_33:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #17
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_Server__C3494_validate_34
_inst_jacdac_Server__C3494_validate_34:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #41
    blt .fail
    cmp r2, #46
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_jacdac_Server__C3494_35
_classCall_jacdac_Server__C3494_35:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #41
    blt .fail
    cmp r2, #46
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_AckAwaiter__C4937_validate_36
_inst_jacdac_AckAwaiter__C4937_validate_36:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #67
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_37
_conv_37:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_RegQuery__C5099_validate_38
_inst_jacdac_RegQuery__C5099_validate_38:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #55
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_jacdac_Client__C3544_this_39
_classCall_jacdac_Client__C3544_this_39:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_RegisterClient__C3521_validate_40
_inst_jacdac_RegisterClient__C3521_validate_40:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #48
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_41
_conv_41:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_42
_conv_42:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_20
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__expand_args_4_43
_expand_args_4_43:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #3
    blt .zero3
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero3:
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_jacdac_ClientPacketQueue__C5088_validate_44
_inst_jacdac_ClientPacketQueue__C5088_validate_44:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #51
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_45
_conv_45:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_20
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_20
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_ClientRoleQuery__C3536_validate_46
_inst_jacdac_ClientRoleQuery__C3536_validate_46:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #52
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_47
_conv_47:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r2, r0      
    ldr r0, [sp, #4*3] ; estack
    ldr r1, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_48
_conv_48:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_20
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_EventSource__C3622_validate_49
_inst_jacdac_EventSource__C3622_validate_49:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #16
    blt .fail
    cmp r2, #48
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall1_get_50
_ifacecall1_get_50:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    movs r0, #0 ; undefined
    bx lr
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    bne .bind
    movs r4, #1
    bx r2
.bind:
    mov r4, lr
    bl _pxt_bind_helper
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    bx r4
.field:
    ldr r0, [r0, r2] ; load field
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__expand_args_5_51
_expand_args_5_51:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #4
    blt .zero4
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero4:
    push {r0}
    cmp r4, #3
    blt .zero3
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero3:
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__ifacecall1__52
_ifacecall1__52:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #1
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    movs r1, r0
    str r1, [sp, #4*0]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #0
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    str r5, [sp, #4*0]
    mov r1, lr
    str r1, [sp, #4*1]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*1] ; restore what was in LR
    ldr r5, [sp, #4*0] ; restore lambda ctx
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__inst_jacdac_DelayedPacket__C5014_validate_53
_inst_jacdac_DelayedPacket__C5014_validate_53:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #53
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_54
_conv_54:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin6_validate_8
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0}
    ldr r2, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_modules_VibrationMotorClient__C4571_validate_55
_inst_modules_VibrationMotorClient__C4571_validate_55:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #39
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_DistanceClient__C3797_validate_56
_inst_modules_DistanceClient__C3797_validate_56:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #32
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_SimpleSensorClient__C3270_validate_57
_inst_jacdac_SimpleSensorClient__C3270_validate_57:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #22
    blt .fail
    cmp r2, #32
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_control_PollEvent__C4842_validate_58
_inst_control_PollEvent__C4842_validate_58:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #54
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_builtin4_validate_59
_inst_builtin4_validate_59:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_60
_conv_60:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin4_validate_59
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_61
_conv_61:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin6_validate_8
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_SensorClient__C3264_validate_62
_inst_jacdac_SensorClient__C3264_validate_62:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #20
    blt .fail
    cmp r2, #34
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__lambda_call1_63
_lambda_call1_63:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #1
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    str r5, [sp, #4*1]
    mov r1, lr
    str r1, [sp, #4*2]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*2] ; restore what was in LR
    ldr r5, [sp, #4*1] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_TemperatureClient__C4551_validate_64
_inst_modules_TemperatureClient__C4551_validate_64:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #31
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_SwitchClient__C4523_validate_65
_inst_modules_SwitchClient__C4523_validate_65:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #34
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_ServoClient__C4477_validate_66
_inst_modules_ServoClient__C4477_validate_66:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #30
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_EventListener__C3619_validate_67
_inst_jacdac_EventListener__C3619_validate_67:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #57
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_RotaryEncoderClient__C4443_validate_68
_inst_modules_RotaryEncoderClient__C4443_validate_68:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #29
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_music_Playable__C2803_validate_69
_inst_music_Playable__C2803_validate_69:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #59
    blt .fail
    cmp r2, #60
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_music_Melody__C4815_validate_70
_inst_music_Melody__C4815_validate_70:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #56
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_71
_conv_71:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin4_validate_59
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_modules_RelayClient__C4425_validate_72
_inst_modules_RelayClient__C4425_validate_72:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #38
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_LightLevelClient__C4350_validate_73
_inst_modules_LightLevelClient__C4350_validate_73:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #28
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_MagneticFieldLevelClient__C4379_validate_74
_inst_modules_MagneticFieldLevelClient__C4379_validate_74:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #27
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_PotentiometerClient__C4403_validate_75
_inst_modules_PotentiometerClient__C4403_validate_75:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #26
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_LedClient__C4237_validate_76
_inst_modules_LedClient__C4237_validate_76:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #37
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_77
_conv_77:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_20
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_modules_HumidityClient__C4197_validate_78
_inst_modules_HumidityClient__C4197_validate_78:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #25
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_GamepadClient__C3856_validate_79
_inst_modules_GamepadClient__C3856_validate_79:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #33
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_ButtonClient__C3745_validate_80
_inst_modules_ButtonClient__C3745_validate_80:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #24
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_machine_SonifyOptions__C4685_validate_81
_inst_machine_SonifyOptions__C4685_validate_81:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #58
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_SoundExpression__C2699_validate_82
_inst_SoundExpression__C2699_validate_82:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #60
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_BuzzerClient__C3773_validate_83
_inst_modules_BuzzerClient__C3773_validate_83:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #36
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_BrailleDisplayClient__C3716_validate_84
_inst_modules_BrailleDisplayClient__C3716_validate_84:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #35
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_machine_NumberToShow__C5443_validate_85
_inst_machine_NumberToShow__C5443_validate_85:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #61
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_builtin9_validate_86
_inst_builtin9_validate_86:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #9
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_87
_conv_87:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin9_validate_86
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0}
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_88
_conv_88:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin9_validate_86
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_modules_AirPressureClient__C3696_validate_89
_inst_modules_AirPressureClient__C3696_validate_89:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #23
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_AccelerometerClient__C3660_validate_90
_inst_modules_AccelerometerClient__C3660_validate_90:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #21
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_91
_conv_91:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin9_validate_86
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__ifacecall4__92
_ifacecall4__92:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #4
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    movs r1, r0
    str r1, [sp, #4*3]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #3
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*2]
    str r5, [sp, #4*3]
    mov r1, lr
    str r1, [sp, #4*4]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*4] ; restore what was in LR
    ldr r5, [sp, #4*3] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*4]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__inst_machine_ClientFactory__C5462_validate_93
_inst_machine_ClientFactory__C5462_validate_93:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #62
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_94
_conv_94:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin4_validate_59
    mov r2, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__ifacecall2_set_95
_ifacecall2_set_95:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check for next descriptor
    ldrh r7, [r3, #8]
    cmp r7, r1
    bne .fail2 ; no setter!
    ldr r2, [r3, #12]
    movs r4, #2
    bx r2
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    ldr r2, [sp, #4] ; ld-val
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    bx r4
.field:
    ldr r3, [sp, #4] ; ld-val
    str r3, [r0, r2] ; store field
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__conv_96
_conv_96:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin4_validate_59
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97
_inst_jacdac__rolemgr_RoleManagerServer__C3330_validate_97:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #45
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac__rolemgr_RoleBinding__C5058_validate_98
_inst_jacdac__rolemgr_RoleBinding__C5058_validate_98:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #64
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99
_inst_jacdac__rolemgr_DeviceWrapper__C5056_validate_99:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #63
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac__rolemgr_ServerBindings__C5062_validate_100
_inst_jacdac__rolemgr_ServerBindings__C5062_validate_100:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #65
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_101
_conv_101:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_20
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0}
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__classCall_jacdac_Client__C3544_102
_classCall_jacdac_Client__C3544_102:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #19
    blt .fail
    cmp r2, #40
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_LoggerServer__C3207_validate_103
_inst_jacdac_LoggerServer__C3207_validate_103:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #44
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_ProxyServer__C5105_validate_104
_inst_jacdac_ProxyServer__C5105_validate_104:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #43
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_BrainServer__C5108_validate_105
_inst_jacdac_BrainServer__C5108_validate_105:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #42
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall2__106
_ifacecall2__106:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #2
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    movs r1, r0
    str r1, [sp, #4*1]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #1
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    str r5, [sp, #4*1]
    mov r1, lr
    str r1, [sp, #4*2]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*2] ; restore what was in LR
    ldr r5, [sp, #4*1] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__inst_jacdac_ControlServer__C3598_validate_107
_inst_jacdac_ControlServer__C3598_validate_107:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #46
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_108
_conv_108:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin4_validate_59
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_109
_conv_109:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_OutPipe__C2988_validate_110
_inst_jacdac_OutPipe__C2988_validate_110:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #66
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
_numops_adds:
    @scope _numops_adds
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r2, r1, #1
    adds r2, r0, r2
    bvs .boxed
    movs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::adds
                    add sp, #8
                    pop {pc}
_numops_subs:
    @scope _numops_subs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r2, r1, #1
    subs r2, r0, r2
    bvs .boxed
    movs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::subs
                    add sp, #8
                    pop {pc}
_numops_ands:
    @scope _numops_ands
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ands r0, r1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::ands
                    add sp, #8
                    pop {pc}
_numops_orrs:
    @scope _numops_orrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    orrs r0, r1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::orrs
                    add sp, #8
                    pop {pc}
_numops_eors:
    @scope _numops_eors
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    eors r0, r1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::eors
                    add sp, #8
                    pop {pc}
_numops_lsls:
    @scope _numops_lsls
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r2, r0, #1
    lsls r2, r3
    lsrs r3, r2, #30
    beq .ok
    cmp r3, #3
    bne .boxed
.ok:
    lsls r0, r2, #1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::lsls
                    add sp, #8
                    pop {pc}
_numops_lsrs:
    @scope _numops_lsrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r2, r0, #1
    lsrs r2, r3
    lsrs r3, r2, #30
    bne .boxed
    lsls r0, r2, #1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::lsrs
                    add sp, #8
                    pop {pc}
_numops_asrs:
    @scope _numops_asrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r0, r3
    movs r2, #1
    orrs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::asrs
                    add sp, #8
                    pop {pc}
@scope _numops_toInt
_numops_toInt:
    asrs r0, r0, #1
    bcc .over
    blx lr
.over:
    lsls r0, r0, #1
    push {lr}
mov r7, sp
    str r7, [r6, #4]
bl pxt::toInt
pop {pc}
_numops_fromInt:
    lsls r2, r0, #1
    asrs r1, r2, #1
    cmp r0, r1
    bne .over2
    adds r0, r2, #1
    blx lr
.over2:
    push {lr}
mov r7, sp
    str r7, [r6, #4]
bl pxt::fromInt
pop {pc}
.section code
.object _pxt_helper_cmp_lt
_cmp_lt:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    blt .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::lt
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_gt
_cmp_gt:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bgt .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::gt
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_le
_cmp_le:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    ble .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::le
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_ge
_cmp_ge:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bge .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::ge
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_eq
_cmp_eq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    beq .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::eq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_eqq
_cmp_eqq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    beq .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::eqq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_neq
_cmp_neq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bne .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::neq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_neqq
_cmp_neqq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bne .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::neqq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
_helpers_end:
        .object jacdac_EventSource__C3622_VT
        .balign 4
jacdac_EventSource__C3622_VT:
        .short 8  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_EventSource__C3622_IfaceVT
        .short 16 ; class-id
        .short 0 ; reserved
        .word 538732828 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_EventSource__C3622_IfaceVT:
  .short 96, 38, 36, 34, 32, 30, 28, 50, 40, 30, 20, 58, 16, 62, 44, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac_Bus__C3455_VT
        .balign 4
jacdac_Bus__C3455_VT:
        .short 56  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_Bus__C3455_IfaceVT
        .short 17 ; class-id
        .short 0 ; reserved
        .word 1650515225 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_Bus__C3455_IfaceVT:
  .short 264, 262, 260, 258, 256, 318, 372, 258, 416, 246, 244, 530, 240, 238, 412, 234, 232, 230, 228, 226, 224, 222, 220, 218, 216, 454, 212, 210, 208, 206, 204, 202, 200, 198, 276, 450, 192, 294, 188, 186, 184, 182, 180, 178, 328, 366, 172, 202, 168, 166, 164, 162, 440, 158, 156, 154, 152, 150, 204, 146, 144, 142, 268, 138, 136, 134, 132, 346, 128, 374, 124, 282, 120, 118, 228, 114, 152, 246, 108, 106, 104, 102, 100, 114, 96, 94, 92, 354, 88, 86, 84, 82, 80, 278, 124, 298, 72, 302, 68, 66, 64, 62, 60, 354, 144, 150, 52, 50, 48, 46, 44, 42, 312, 38, 36, 34, 32, 102, 28, 170, 24, 22, 20, 18, 200, 38, 220, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 302, 0 ; servers
  .word 8
  .short 124, 0 ; devices
  .word 12
  .short 52, 0 ; _myDevice
  .word 16
  .short 282, 0 ; restartCounter
  .word 20
  .short 280, 0 ; resetIn
  .word 24
  .short 93, 0 ; autoBindCnt
  .word 28
  .short 22, 0 ; _eventCounter
  .word 32
  .short 112, 0 ; controlServer
  .word 36
  .short 260, 0 ; proxyMode
  .word 40
  .short 352, 0 ; unattachedClients
  .word 44
  .short 88, 0 ; allClients
  .word 48
  .short 62, 0 ; _refreshing
  .word 52
  .short 287, 1 ; running
  .word jacdac_Bus_running__P3462_args@fn
  .short 332, 2 ; start
  .word jacdac_Bus_start__P3463_args@fn
  .short 86, 2 ; addServer
  .word jacdac_Bus_addServer__P3464_args@fn
  .short 147, 2 ; gcDevices
  .word jacdac_Bus_gcDevices__P5081_args@fn
  .short 293, 1 ; selfDevice
  .word jacdac_Bus_selfDevice__P3465_args@fn
  .short 208, 2 ; mkEventCmd
  .word jacdac_Bus_mkEventCmd__P3466_args@fn
  .short 105, 2 ; clearAttachCache
  .word jacdac_Bus_clearAttachCache__P3467_args@fn
  .short 181, 1 ; isClient
  .word jacdac_Bus_isClient__P3468_args@fn
  .short 263, 2 ; queueAnnounce
  .word jacdac_Bus_queueAnnounce__P3469_args@fn
  .short 120, 2 ; detachClient
  .word jacdac_Bus_detachClient__P3470_args@fn
  .short 91, 2 ; attachClient
  .word jacdac_Bus_attachClient__P3471_args@fn
  .short 334, 2 ; startClient
  .word jacdac_Bus_startClient__P3472_args@fn
  .short 119, 2 ; destroyClient
  .word jacdac_Bus_destroyClient__P3473_args@fn
  .short 268, 2 ; reattach
  .word jacdac_Bus_reattach__P3474_args@fn
  .short 259, 2 ; processPacket
  .word jacdac_Bus_processPacket__P3475_args@fn
  .short 335, 2 ; startRefresh
  .word jacdac_Bus_startRefresh__P5082_args@fn
  .short 270, 2 ; refreshLoop
  .word jacdac_Bus_refreshLoop__P5083_args@fn
  .short 344, 2 ; subscribeRefresh
  .word jacdac_Bus_subscribeRefresh__P3476_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object machine_MicrobitMachine__C5435_VT
        .balign 4
machine_MicrobitMachine__C5435_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word machine_MicrobitMachine__C5435_IfaceVT
        .short 18 ; class-id
        .short 0 ; reserved
        .word 1650515228 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
machine_MicrobitMachine__C5435_IfaceVT:
  .short 40, 118, 36, 66, 56, 78, 100, 26, 64, 22, 76, 18, 104, 14, 20, 26, 72, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 351, 0 ; tone
  .word 8
  .short 221, 2 ; onClient
  .word machine_MicrobitMachine_onClient__P5437_args@fn
  .short 222, 2 ; onControlEvent
  .word machine_MicrobitMachine_onControlEvent__P5438_args@fn
  .short 253, 2 ; playTone
  .word machine_MicrobitMachine_playTone__P5439_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac_Client__C3544_VT
        .balign 4
jacdac_Client__C3544_VT:
        .short 60  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_Client__C3544_IfaceVT
        .short 19 ; class-id
        .short 0 ; reserved
        .word 1192397593 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_Client_announceCallback__P3570_nochk@fn
        .balign 4
jacdac_Client__C3544_IfaceVT:
  .short 264, 262, 260, 258, 424, 350, 252, 314, 336, 510, 244, 242, 240, 238, 236, 362, 232, 230, 228, 282, 224, 222, 460, 218, 216, 214, 212, 210, 520, 206, 204, 202, 200, 198, 196, 194, 192, 414, 188, 346, 184, 454, 180, 178, 456, 174, 172, 170, 168, 342, 372, 266, 160, 158, 156, 154, 152, 150, 348, 146, 144, 430, 212, 138, 136, 134, 132, 130, 208, 126, 124, 170, 232, 118, 116, 130, 248, 262, 108, 106, 104, 102, 284, 98, 96, 94, 308, 90, 88, 86, 340, 82, 272, 78, 76, 74, 72, 94, 316, 106, 96, 294, 60, 354, 56, 54, 52, 50, 168, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 320, 14, 12, 18, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_Client_announceCallback__P3570_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac_SensorClient__C3264_VT
        .balign 4
jacdac_SensorClient__C3264_VT:
        .short 92  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_SensorClient__C3264_IfaceVT
        .short 20 ; class-id
        .short 0 ; reserved
        .word 883080985 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
jacdac_SensorClient__C3264_IfaceVT:
  .short 264, 262, 260, 538, 256, 254, 252, 250, 552, 510, 244, 394, 240, 238, 236, 234, 568, 294, 228, 226, 224, 222, 220, 434, 216, 214, 524, 346, 208, 566, 204, 202, 200, 542, 548, 522, 560, 238, 380, 186, 392, 182, 180, 266, 176, 174, 268, 170, 168, 350, 388, 162, 480, 302, 156, 154, 152, 150, 148, 146, 144, 398, 140, 434, 240, 134, 132, 538, 160, 238, 500, 146, 120, 118, 132, 114, 344, 110, 188, 106, 232, 102, 100, 98, 96, 94, 92, 90, 88, 94, 484, 82, 80, 78, 76, 74, 456, 70, 68, 66, 240, 62, 60, 58, 56, 254, 172, 338, 48, 46, 204, 314, 280, 94, 204, 34, 32, 30, 420, 66, 24, 22, 92, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_AccelerometerClient__C3660_VT
        .balign 4
modules_AccelerometerClient__C3660_VT:
        .short 104  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_AccelerometerClient__C3660_IfaceVT
        .short 21 ; class-id
        .short 0 ; reserved
        .word 1650515224 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_AccelerometerClient__C3660_IfaceVT:
  .short 520, 518, 516, 514, 512, 510, 508, 506, 504, 750, 500, 498, 496, 494, 492, 634, 488, 486, 484, 482, 480, 478, 948, 474, 472, 470, 468, 466, 464, 462, 460, 458, 848, 454, 828, 746, 448, 446, 444, 442, 440, 438, 436, 434, 432, 430, 428, 426, 424, 422, 420, 682, 544, 486, 412, 594, 408, 406, 628, 402, 400, 398, 396, 394, 392, 390, 388, 386, 384, 462, 380, 818, 376, 374, 372, 458, 368, 366, 644, 362, 360, 358, 356, 354, 352, 350, 348, 346, 768, 342, 340, 338, 336, 334, 332, 330, 328, 326, 324, 322, 320, 318, 316, 314, 776, 310, 324, 306, 304, 326, 356, 298, 296, 406, 292, 690, 288, 286, 492, 522, 280, 278, 276, 274, 272, 270, 268, 578, 264, 310, 260, 258, 256, 558, 252, 250, 616, 246, 244, 674, 240, 238, 236, 234, 576, 230, 228, 226, 264, 638, 220, 338, 216, 214, 404, 378, 208, 406, 204, 202, 200, 358, 196, 194, 552, 190, 188, 186, 184, 182, 508, 178, 312, 174, 620, 170, 168, 166, 164, 162, 160, 158, 156, 154, 152, 150, 148, 146, 144, 526, 172, 138, 136, 422, 132, 130, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 586, 104, 102, 100, 202, 96, 94, 268, 90, 304, 318, 84, 82, 80, 78, 76, 74, 72, 526, 68, 66, 336, 62, 60, 58, 56, 462, 60, 402, 48, 46, 44, 194, 40, 38, 36, 370, 32, 30, 92, 282, 24, 22, 116, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 23, 0 ; _forcesError
  .word 92
  .short 37, 0 ; _maxForce
  .word 96
  .short 38, 0 ; _maxForcesSupported
  .word 100
  .short 241, 2 ; onTiltUp
  .word modules_AccelerometerClient_onTiltUp__P3670_args@fn
  .short 238, 2 ; onTiltDown
  .word modules_AccelerometerClient_onTiltDown__P3671_args@fn
  .short 239, 2 ; onTiltLeft
  .word modules_AccelerometerClient_onTiltLeft__P3672_args@fn
  .short 240, 2 ; onTiltRight
  .word modules_AccelerometerClient_onTiltRight__P3673_args@fn
  .short 226, 2 ; onFaceUp
  .word modules_AccelerometerClient_onFaceUp__P3674_args@fn
  .short 225, 2 ; onFaceDown
  .word modules_AccelerometerClient_onFaceDown__P3675_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac_SimpleSensorClient__C3270_VT
        .balign 4
jacdac_SimpleSensorClient__C3270_VT:
        .short 96  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_SimpleSensorClient__C3270_IfaceVT
        .short 22 ; class-id
        .short 0 ; reserved
        .word 1703617817 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
jacdac_SimpleSensorClient__C3270_IfaceVT:
  .short 264, 262, 260, 258, 256, 510, 684, 250, 248, 246, 644, 242, 240, 238, 420, 578, 232, 238, 244, 354, 224, 222, 220, 218, 216, 326, 212, 442, 208, 206, 340, 266, 408, 438, 580, 194, 552, 190, 404, 186, 576, 182, 180, 178, 328, 174, 172, 170, 168, 166, 164, 162, 160, 358, 156, 154, 152, 566, 148, 146, 144, 438, 140, 450, 136, 190, 308, 130, 552, 246, 532, 122, 152, 118, 220, 114, 112, 110, 108, 106, 184, 246, 100, 346, 96, 118, 140, 178, 456, 86, 84, 362, 416, 430, 76, 394, 72, 70, 68, 66, 160, 62, 60, 386, 248, 430, 52, 50, 88, 46, 44, 42, 328, 38, 36, 34, 200, 254, 28, 26, 24, 22, 20, 178, 16, 318, 84, 274, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 266, 0 ; readingDigitsPrecision
  .word 92
  .short 265, 2 ; reading
  .word jacdac_SimpleSensorClient_reading__P3273_args@fn
  .short 234, 2 ; onReadingChangedBy
  .word jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_AirPressureClient__C3696_VT
        .balign 4
modules_AirPressureClient__C3696_VT:
        .short 108  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_AirPressureClient__C3696_IfaceVT
        .short 23 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_AirPressureClient__C3696_IfaceVT:
  .short 264, 678, 260, 458, 400, 494, 252, 610, 472, 590, 692, 242, 240, 238, 236, 234, 232, 286, 228, 610, 432, 294, 220, 218, 448, 462, 212, 210, 648, 206, 668, 202, 504, 302, 196, 194, 192, 230, 508, 538, 184, 182, 292, 210, 176, 542, 172, 466, 504, 566, 588, 162, 160, 158, 156, 154, 152, 150, 148, 618, 152, 318, 140, 298, 136, 134, 132, 130, 152, 406, 580, 122, 248, 118, 116, 114, 112, 382, 108, 242, 104, 102, 100, 98, 488, 94, 92, 90, 168, 86, 148, 82, 80, 94, 452, 74, 72, 70, 68, 282, 64, 390, 148, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 470, 204, 442, 32, 214, 28, 218, 24, 22, 308, 274, 64, 134, 164, 106, 272, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 266, 0 ; readingDigitsPrecision
  .word 92
  .short 60, 0 ; _pressureError
  .word 96
  .short 48, 0 ; _minPressure
  .word 100
  .short 41, 0 ; _maxPressure
  .word 104
  .short 258, 2 ; pressure
  .word modules_AirPressureClient_pressure__P3698_args@fn
  .short 233, 2 ; onPressureChangedBy
  .word modules_AirPressureClient_onPressureChangedBy__P3702_args@fn
  .short 265, 2 ; reading
  .word jacdac_SimpleSensorClient_reading__P3273_args@fn
  .short 234, 2 ; onReadingChangedBy
  .word jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_BrailleDisplayClient__C3716_VT
        .balign 4
modules_BrailleDisplayClient__C3716_VT:
        .short 72  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_BrailleDisplayClient__C3716_IfaceVT
        .short 35 ; class-id
        .short 0 ; reserved
        .word 1703617817 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_Client_announceCallback__P3570_nochk@fn
        .balign 4
modules_BrailleDisplayClient__C3716_IfaceVT:
  .short 264, 262, 260, 258, 256, 438, 620, 250, 248, 246, 580, 242, 240, 382, 236, 506, 232, 238, 244, 378, 224, 222, 220, 218, 216, 214, 212, 210, 208, 206, 204, 266, 368, 518, 196, 194, 480, 318, 500, 186, 512, 182, 292, 178, 176, 174, 172, 170, 168, 166, 164, 162, 160, 158, 156, 154, 152, 502, 148, 146, 144, 366, 140, 274, 376, 190, 132, 130, 288, 486, 468, 122, 152, 118, 220, 114, 112, 230, 108, 106, 184, 102, 100, 274, 96, 118, 140, 178, 384, 86, 84, 290, 344, 358, 76, 322, 72, 70, 68, 66, 160, 62, 60, 314, 360, 54, 52, 50, 88, 46, 44, 42, 256, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 246, 84, 202, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 21, 0 ; _enabled
  .word 60
  .short 57, 0 ; _patterns
  .word 64
  .short 31, 0 ; _length
  .word 68
  .short 329, 2 ; showString
  .word modules_BrailleDisplayClient_showString__P3718_args@fn
  .short 328, 2 ; showNumber
  .word modules_BrailleDisplayClient_showNumber__P3719_args@fn
  .short 318, 2 ; setEnabled
  .word modules_BrailleDisplayClient_setEnabled__P3721_args@fn
  .short 319, 2 ; setPatterns
  .word modules_BrailleDisplayClient_setPatterns__P3723_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_Client_announceCallback__P3570_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_BuzzerClient__C3773_VT
        .balign 4
modules_BuzzerClient__C3773_VT:
        .short 60  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_BuzzerClient__C3773_IfaceVT
        .short 36 ; class-id
        .short 0 ; reserved
        .word 1192397593 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_Client_announceCallback__P3570_nochk@fn
        .balign 4
modules_BuzzerClient__C3773_IfaceVT:
  .short 264, 262, 260, 258, 432, 350, 252, 314, 336, 518, 244, 242, 240, 238, 236, 370, 232, 230, 228, 282, 224, 222, 468, 218, 216, 214, 212, 210, 528, 206, 316, 202, 200, 198, 196, 194, 192, 422, 188, 354, 184, 462, 180, 178, 464, 174, 172, 170, 168, 350, 380, 266, 160, 158, 156, 154, 152, 150, 356, 146, 144, 438, 212, 138, 136, 134, 132, 130, 208, 126, 124, 170, 240, 118, 116, 130, 256, 270, 108, 106, 104, 102, 292, 98, 96, 94, 316, 90, 88, 86, 348, 82, 280, 78, 76, 74, 72, 94, 324, 106, 96, 302, 60, 362, 56, 54, 52, 50, 176, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 328, 14, 12, 18, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 253, 2 ; playTone
  .word modules_BuzzerClient_playTone__P3775_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_Client_announceCallback__P3570_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_ButtonClient__C3745_VT
        .balign 4
modules_ButtonClient__C3745_VT:
        .short 108  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_ButtonClient__C3745_IfaceVT
        .short 24 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_ButtonClient__C3745_IfaceVT:
  .short 264, 694, 260, 258, 400, 470, 508, 626, 488, 606, 708, 242, 240, 238, 236, 234, 232, 286, 228, 626, 224, 294, 220, 218, 464, 478, 212, 210, 664, 206, 684, 386, 520, 302, 196, 194, 424, 230, 524, 554, 184, 182, 292, 210, 176, 558, 172, 482, 520, 582, 604, 162, 160, 158, 156, 154, 152, 150, 148, 634, 152, 318, 140, 298, 328, 358, 132, 130, 152, 422, 596, 122, 248, 118, 116, 114, 112, 398, 108, 242, 104, 102, 100, 98, 504, 94, 92, 90, 168, 86, 148, 290, 80, 94, 468, 74, 72, 70, 68, 66, 64, 406, 148, 258, 56, 54, 52, 50, 48, 46, 44, 42, 40, 486, 204, 458, 32, 30, 28, 26, 24, 22, 324, 290, 64, 134, 164, 106, 288, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 266, 0 ; readingDigitsPrecision
  .word 92
  .short 3, 0 ; _analog
  .word 96
  .short 59, 0 ; _pressed
  .word 100
  .short 26, 0 ; _holdDuration
  .word 104
  .short 151, 2 ; handleEvent
  .word modules_ButtonClient_handleEvent__P5162_args@fn
  .short 224, 2 ; onDown
  .word modules_ButtonClient_onDown__P3753_args@fn
  .short 242, 2 ; onUp
  .word modules_ButtonClient_onUp__P3754_args@fn
  .short 227, 2 ; onHold
  .word modules_ButtonClient_onHold__P3755_args@fn
  .short 265, 2 ; reading
  .word jacdac_SimpleSensorClient_reading__P3273_args@fn
  .short 234, 2 ; onReadingChangedBy
  .word jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_GamepadClient__C3856_VT
        .balign 4
modules_GamepadClient__C3856_VT:
        .short 100  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_GamepadClient__C3856_IfaceVT
        .short 33 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_GamepadClient__C3856_IfaceVT:
  .short 264, 654, 260, 258, 400, 470, 252, 586, 248, 566, 668, 242, 240, 238, 236, 234, 232, 286, 228, 586, 224, 294, 220, 218, 216, 438, 212, 210, 624, 382, 644, 202, 480, 302, 396, 194, 192, 230, 484, 514, 184, 182, 292, 210, 176, 518, 172, 442, 480, 542, 564, 162, 160, 158, 156, 154, 152, 150, 148, 594, 152, 142, 140, 298, 136, 134, 132, 130, 152, 382, 556, 122, 248, 302, 116, 114, 112, 358, 108, 242, 104, 102, 100, 98, 464, 94, 92, 90, 168, 294, 148, 82, 80, 94, 428, 74, 72, 70, 68, 66, 64, 366, 148, 58, 56, 54, 52, 50, 240, 46, 44, 42, 40, 446, 204, 418, 32, 30, 28, 26, 24, 22, 284, 250, 64, 134, 164, 106, 248, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 80, 0 ; _variant
  .word 92
  .short 11, 0 ; _buttonsAvailable
  .word 96
  .short 368, 2 ; x
  .word modules_GamepadClient_x__P3859_args@fn
  .short 369, 2 ; y
  .word modules_GamepadClient_y__P3860_args@fn
  .short 358, 2 ; variant
  .word modules_GamepadClient_variant__P3862_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_HumidityClient__C4197_VT
        .balign 4
modules_HumidityClient__C4197_VT:
        .short 108  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_HumidityClient__C4197_IfaceVT
        .short 25 ; class-id
        .short 0 ; reserved
        .word 1703617817 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_HumidityClient__C4197_IfaceVT:
  .short 264, 262, 260, 258, 256, 550, 724, 250, 248, 246, 684, 242, 240, 238, 460, 618, 232, 238, 244, 354, 224, 222, 220, 218, 216, 326, 212, 482, 208, 206, 340, 266, 448, 478, 620, 194, 592, 190, 444, 186, 616, 182, 180, 178, 328, 174, 172, 170, 168, 166, 164, 162, 160, 398, 156, 362, 368, 606, 148, 146, 344, 478, 140, 490, 136, 190, 308, 130, 592, 246, 572, 122, 152, 118, 220, 114, 112, 110, 108, 106, 184, 246, 292, 386, 96, 118, 140, 178, 496, 86, 268, 402, 456, 470, 76, 434, 72, 70, 68, 66, 160, 62, 60, 426, 288, 470, 52, 50, 88, 46, 44, 42, 368, 38, 36, 34, 200, 294, 28, 26, 24, 22, 20, 178, 16, 358, 84, 314, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 266, 0 ; readingDigitsPrecision
  .word 92
  .short 27, 0 ; _humidityError
  .word 96
  .short 47, 0 ; _minHumidity
  .word 100
  .short 39, 0 ; _maxHumidity
  .word 104
  .short 170, 2 ; humidity
  .word modules_HumidityClient_humidity__P4199_args@fn
  .short 228, 2 ; onHumidityChangedBy
  .word modules_HumidityClient_onHumidityChangedBy__P4203_args@fn
  .short 265, 2 ; reading
  .word jacdac_SimpleSensorClient_reading__P3273_args@fn
  .short 234, 2 ; onReadingChangedBy
  .word jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_LedClient__C4237_VT
        .balign 4
modules_LedClient__C4237_VT:
        .short 124  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_LedClient__C4237_IfaceVT
        .short 37 ; class-id
        .short 0 ; reserved
        .word 1192397591 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_Client_announceCallback__P3570_nochk@fn
        .balign 4
modules_LedClient__C4237_IfaceVT:
  .short 1032, 1030, 1028, 1306, 1024, 1022, 1020, 1018, 1016, 1014, 1012, 1010, 1008, 1006, 1004, 1002, 1376, 998, 996, 994, 992, 990, 988, 1082, 984, 982, 980, 978, 976, 974, 1036, 970, 968, 966, 964, 1050, 960, 958, 956, 1426, 952, 950, 948, 946, 944, 942, 940, 938, 936, 934, 932, 930, 1072, 1110, 924, 922, 920, 918, 916, 914, 912, 910, 908, 1242, 904, 902, 900, 898, 896, 894, 892, 890, 888, 886, 884, 882, 880, 878, 932, 874, 872, 870, 988, 866, 864, 862, 860, 858, 1304, 854, 852, 850, 848, 846, 844, 842, 840, 838, 836, 834, 832, 830, 828, 826, 824, 822, 820, 1034, 816, 814, 812, 810, 808, 1030, 804, 1322, 800, 798, 796, 794, 792, 790, 788, 786, 784, 782, 780, 778, 776, 774, 772, 770, 768, 766, 764, 762, 760, 758, 756, 754, 864, 750, 748, 746, 744, 742, 740, 738, 736, 734, 1164, 730, 728, 726, 724, 722, 720, 718, 1084, 714, 712, 710, 708, 706, 1184, 702, 700, 698, 888, 694, 692, 690, 688, 686, 684, 682, 680, 1166, 676, 674, 672, 670, 668, 666, 664, 662, 660, 658, 656, 654, 652, 650, 648, 646, 644, 642, 640, 638, 1020, 890, 632, 902, 1044, 626, 728, 934, 620, 618, 616, 614, 612, 610, 608, 606, 604, 602, 600, 598, 596, 594, 592, 590, 588, 586, 584, 582, 580, 578, 576, 574, 836, 570, 568, 974, 564, 562, 560, 558, 556, 554, 552, 550, 548, 546, 544, 1038, 540, 538, 536, 734, 532, 602, 528, 526, 524, 754, 520, 518, 516, 514, 512, 510, 508, 506, 504, 502, 500, 746, 496, 494, 492, 490, 488, 486, 484, 562, 480, 478, 476, 474, 472, 470, 468, 466, 624, 462, 508, 458, 456, 454, 772, 450, 448, 446, 444, 442, 440, 438, 436, 434, 432, 430, 444, 770, 424, 422, 780, 418, 416, 414, 412, 410, 408, 406, 404, 402, 400, 398, 396, 394, 392, 390, 388, 386, 384, 382, 380, 378, 376, 766, 372, 370, 368, 366, 364, 362, 360, 358, 356, 354, 480, 350, 348, 346, 768, 342, 340, 338, 624, 334, 332, 330, 328, 326, 324, 322, 320, 318, 316, 314, 312, 310, 772, 306, 304, 478, 300, 506, 696, 294, 292, 290, 288, 526, 284, 282, 280, 278, 276, 274, 272, 270, 268, 266, 264, 262, 260, 258, 256, 710, 276, 250, 248, 246, 244, 242, 240, 390, 236, 274, 232, 526, 260, 226, 224, 662, 220, 218, 216, 214, 212, 210, 208, 710, 204, 202, 200, 198, 196, 194, 192, 190, 188, 186, 184, 182, 180, 178, 176, 174, 476, 170, 168, 494, 164, 162, 160, 158, 156, 154, 152, 150, 148, 146, 144, 142, 140, 138, 136, 134, 132, 130, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 202, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 552, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 186, 16, 14, 20, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 19, 0 ; _dirty
  .word 60
  .short 33, 0 ; _localPixels
  .word 64
  .short 6, 0 ; _autoShow
  .word 68
  .short 7, 0 ; _autoShowUnsub
  .word 72
  .short 58, 0 ; _pixels
  .word 76
  .short 10, 0 ; _brightness
  .word 80
  .short 2, 0 ; _actualBrightness
  .word 84
  .short 54, 0 ; _numPixels
  .word 88
  .short 53, 0 ; _numColumns
  .word 92
  .short 40, 0 ; _maxPower
  .word 96
  .short 30, 0 ; _ledsPerPixel
  .word 100
  .short 81, 0 ; _waveLength
  .word 104
  .short 35, 0 ; _luminousIntensity
  .word 108
  .short 80, 0 ; _variant
  .word 112
  .short 8, 0 ; _barGraphHigh
  .word 116
  .short 9, 0 ; _barGraphHighLast
  .word 120
  .short 316, 2 ; setBrightness
  .word modules_LedClient_setBrightness__P4240_args@fn
  .short 218, 2 ; numPixels
  .word modules_LedClient_numPixels__P4242_args@fn
  .short 358, 2 ; variant
  .word modules_LedClient_variant__P4249_args@fn
  .short 333, 2 ; startAutoShow
  .word modules_LedClient_startAutoShow__P5194_args@fn
  .short 340, 2 ; stopAutoShow
  .word modules_LedClient_stopAutoShow__P5195_args@fn
  .short 317, 2 ; setDirty
  .word modules_LedClient_setDirty__P5196_args@fn
  .short 269, 2 ; refresh
  .word modules_LedClient_refresh__P5197_args@fn
  .short 327, 2 ; show
  .word modules_LedClient_show__P4253_args@fn
  .short 320, 2 ; setPixelColor
  .word modules_LedClient_setPixelColor__P4254_args@fn
  .short 286, 2 ; rotate
  .word modules_LedClient_rotate__P4258_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_Client_announceCallback__P3570_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_PotentiometerClient__C4403_VT
        .balign 4
modules_PotentiometerClient__C4403_VT:
        .short 100  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_PotentiometerClient__C4403_IfaceVT
        .short 26 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_PotentiometerClient__C4403_IfaceVT:
  .short 264, 670, 260, 258, 400, 486, 252, 602, 464, 582, 684, 242, 240, 238, 236, 234, 232, 286, 228, 602, 224, 294, 220, 218, 440, 454, 212, 210, 640, 390, 660, 202, 496, 302, 196, 194, 192, 230, 500, 530, 184, 374, 292, 210, 176, 534, 380, 458, 496, 558, 580, 162, 160, 158, 156, 154, 152, 150, 148, 610, 152, 318, 140, 298, 136, 134, 132, 130, 152, 398, 572, 122, 248, 118, 116, 114, 112, 374, 108, 242, 104, 102, 100, 98, 480, 94, 92, 90, 168, 286, 148, 82, 80, 94, 444, 74, 72, 70, 68, 66, 64, 382, 148, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 462, 204, 434, 32, 30, 28, 26, 24, 22, 300, 266, 64, 134, 164, 106, 264, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 266, 0 ; readingDigitsPrecision
  .word 92
  .short 80, 0 ; _variant
  .word 96
  .short 256, 2 ; position
  .word modules_PotentiometerClient_position__P4405_args@fn
  .short 358, 2 ; variant
  .word modules_PotentiometerClient_variant__P4406_args@fn
  .short 232, 2 ; onPositionChangedBy
  .word modules_PotentiometerClient_onPositionChangedBy__P4407_args@fn
  .short 265, 2 ; reading
  .word jacdac_SimpleSensorClient_reading__P3273_args@fn
  .short 234, 2 ; onReadingChangedBy
  .word jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_MagneticFieldLevelClient__C4379_VT
        .balign 4
modules_MagneticFieldLevelClient__C4379_VT:
        .short 100  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_MagneticFieldLevelClient__C4379_IfaceVT
        .short 27 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_MagneticFieldLevelClient__C4379_IfaceVT:
  .short 264, 670, 468, 258, 400, 486, 444, 602, 464, 582, 684, 242, 240, 238, 236, 234, 232, 286, 228, 602, 224, 294, 220, 218, 440, 454, 212, 210, 640, 390, 660, 202, 496, 302, 196, 194, 192, 230, 500, 530, 184, 182, 292, 210, 176, 534, 172, 458, 496, 558, 580, 162, 160, 158, 156, 154, 152, 150, 148, 610, 152, 318, 140, 298, 136, 134, 132, 130, 152, 398, 572, 122, 248, 118, 116, 114, 112, 374, 108, 242, 104, 102, 100, 98, 480, 94, 92, 90, 168, 286, 148, 82, 80, 94, 444, 74, 72, 70, 68, 66, 64, 382, 148, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 462, 204, 434, 32, 30, 28, 26, 24, 22, 300, 266, 64, 134, 164, 106, 264, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 266, 0 ; readingDigitsPrecision
  .word 92
  .short 80, 0 ; _variant
  .word 96
  .short 342, 2 ; strength
  .word modules_MagneticFieldLevelClient_strength__P4381_args@fn
  .short 358, 2 ; variant
  .word modules_MagneticFieldLevelClient_variant__P4383_args@fn
  .short 236, 2 ; onStrengthChangedBy
  .word modules_MagneticFieldLevelClient_onStrengthChangedBy__P4384_args@fn
  .short 265, 2 ; reading
  .word jacdac_SimpleSensorClient_reading__P3273_args@fn
  .short 234, 2 ; onReadingChangedBy
  .word jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_LightLevelClient__C4350_VT
        .balign 4
modules_LightLevelClient__C4350_VT:
        .short 104  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_LightLevelClient__C4350_IfaceVT
        .short 28 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_LightLevelClient__C4350_IfaceVT:
  .short 264, 678, 260, 258, 400, 494, 252, 610, 472, 590, 692, 242, 240, 238, 452, 234, 232, 286, 228, 610, 224, 294, 220, 218, 448, 462, 212, 210, 648, 398, 668, 202, 504, 302, 196, 194, 192, 230, 372, 506, 536, 182, 292, 210, 176, 542, 172, 466, 504, 566, 588, 162, 160, 158, 156, 154, 152, 150, 148, 618, 152, 318, 140, 298, 136, 134, 132, 130, 152, 406, 580, 122, 248, 118, 116, 114, 112, 382, 108, 242, 104, 102, 100, 98, 488, 94, 92, 90, 168, 294, 148, 82, 80, 94, 452, 74, 72, 70, 68, 66, 64, 390, 148, 58, 56, 254, 52, 50, 48, 46, 44, 42, 40, 470, 204, 442, 32, 30, 28, 26, 24, 22, 308, 274, 64, 134, 164, 106, 272, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 266, 0 ; readingDigitsPrecision
  .word 92
  .short 32, 0 ; _lightLevelError
  .word 96
  .short 80, 0 ; _variant
  .word 100
  .short 197, 2 ; lightLevel
  .word modules_LightLevelClient_lightLevel__P4352_args@fn
  .short 358, 2 ; variant
  .word modules_LightLevelClient_variant__P4354_args@fn
  .short 229, 2 ; onLightLevelChangedBy
  .word modules_LightLevelClient_onLightLevelChangedBy__P4355_args@fn
  .short 265, 2 ; reading
  .word jacdac_SimpleSensorClient_reading__P3273_args@fn
  .short 234, 2 ; onReadingChangedBy
  .word jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_RelayClient__C4425_VT
        .balign 4
modules_RelayClient__C4425_VT:
        .short 72  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_RelayClient__C4425_IfaceVT
        .short 38 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_Client_announceCallback__P3570_nochk@fn
        .balign 4
modules_RelayClient__C4425_IfaceVT:
  .short 264, 558, 260, 258, 256, 254, 252, 386, 488, 470, 580, 242, 240, 238, 236, 234, 232, 286, 228, 490, 224, 294, 220, 218, 216, 214, 212, 210, 536, 326, 556, 202, 384, 302, 196, 322, 192, 230, 388, 418, 184, 182, 180, 210, 176, 422, 172, 346, 384, 446, 476, 162, 160, 270, 300, 154, 152, 150, 148, 506, 152, 142, 140, 138, 136, 134, 132, 130, 152, 286, 468, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 368, 94, 92, 90, 168, 238, 148, 82, 80, 94, 332, 74, 72, 70, 68, 66, 64, 270, 148, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 358, 324, 34, 32, 30, 28, 26, 24, 22, 188, 322, 64, 14, 12, 106, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 1, 0 ; _active
  .word 60
  .short 80, 0 ; _variant
  .word 64
  .short 44, 0 ; _maxSwitchingCurrent
  .word 68
  .short 82, 2 ; active
  .word modules_RelayClient_active__P4427_args@fn
  .short 314, 2 ; setActive
  .word modules_RelayClient_setActive__P4428_args@fn
  .short 358, 2 ; variant
  .word modules_RelayClient_variant__P4429_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_Client_announceCallback__P3570_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_RotaryEncoderClient__C4443_VT
        .balign 4
modules_RotaryEncoderClient__C4443_VT:
        .short 104  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_RotaryEncoderClient__C4443_IfaceVT
        .short 29 ; class-id
        .short 0 ; reserved
        .word 1650515224 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_RotaryEncoderClient__C4443_IfaceVT:
  .short 520, 518, 516, 514, 512, 510, 508, 506, 504, 726, 500, 498, 496, 494, 492, 634, 488, 486, 484, 482, 480, 478, 924, 474, 472, 470, 468, 466, 464, 462, 460, 458, 824, 454, 804, 722, 448, 446, 444, 442, 440, 438, 436, 434, 432, 430, 428, 426, 424, 422, 420, 658, 544, 486, 412, 410, 584, 406, 404, 402, 400, 398, 396, 394, 392, 390, 388, 386, 384, 462, 380, 794, 376, 374, 372, 458, 368, 366, 620, 362, 360, 358, 356, 354, 352, 350, 348, 346, 744, 342, 340, 338, 336, 334, 332, 330, 328, 326, 324, 322, 320, 318, 316, 314, 752, 310, 324, 306, 304, 326, 356, 298, 296, 406, 292, 666, 288, 286, 284, 282, 280, 278, 276, 274, 272, 270, 268, 554, 264, 310, 260, 258, 256, 534, 252, 250, 592, 246, 244, 650, 240, 238, 236, 234, 552, 230, 228, 226, 264, 614, 220, 338, 216, 214, 212, 378, 400, 206, 204, 202, 200, 358, 196, 194, 528, 190, 188, 186, 184, 182, 484, 178, 312, 174, 596, 170, 168, 166, 164, 162, 160, 158, 156, 154, 152, 150, 148, 146, 144, 502, 172, 138, 136, 398, 132, 130, 128, 326, 124, 122, 120, 118, 116, 114, 112, 110, 108, 562, 104, 102, 100, 202, 96, 94, 300, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 502, 68, 66, 312, 62, 60, 58, 56, 438, 60, 378, 264, 46, 44, 194, 40, 38, 36, 346, 32, 30, 92, 258, 24, 22, 116, 18, 16, 14, 196, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 266, 0 ; readingDigitsPrecision
  .word 92
  .short 13, 0 ; _clicksPerTurn
  .word 96
  .short 12, 0 ; _clicker
  .word 100
  .short 231, 2 ; onPositionChanged
  .word modules_RotaryEncoderClient_onPositionChanged__P4448_args@fn
  .short 265, 2 ; reading
  .word jacdac_SimpleSensorClient_reading__P3273_args@fn
  .short 234, 2 ; onReadingChangedBy
  .word jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_ServoClient__C4477_VT
        .balign 4
modules_ServoClient__C4477_VT:
        .short 136  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_ServoClient__C4477_IfaceVT
        .short 30 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_ServoClient__C4477_IfaceVT:
  .short 264, 766, 260, 258, 400, 582, 252, 698, 560, 678, 532, 778, 512, 446, 236, 234, 232, 286, 228, 698, 224, 294, 220, 218, 536, 550, 212, 210, 736, 206, 756, 202, 592, 302, 196, 194, 192, 230, 596, 626, 424, 182, 292, 210, 176, 390, 628, 554, 592, 654, 676, 162, 160, 158, 156, 154, 384, 150, 148, 706, 152, 318, 140, 298, 136, 134, 412, 130, 152, 494, 668, 418, 248, 118, 364, 114, 112, 470, 108, 242, 104, 102, 100, 98, 280, 574, 92, 90, 168, 86, 148, 82, 272, 94, 380, 538, 72, 70, 68, 66, 64, 478, 148, 58, 312, 54, 316, 50, 248, 46, 44, 42, 40, 558, 204, 530, 32, 30, 28, 26, 24, 246, 396, 362, 64, 134, 164, 106, 360, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 266, 0 ; readingDigitsPrecision
  .word 92
  .short 4, 0 ; _angle
  .word 96
  .short 21, 0 ; _enabled
  .word 100
  .short 55, 0 ; _offset
  .word 104
  .short 46, 0 ; _minAngle
  .word 108
  .short 49, 0 ; _minPulse
  .word 112
  .short 36, 0 ; _maxAngle
  .word 116
  .short 42, 0 ; _maxPulse
  .word 120
  .short 73, 0 ; _stallTorque
  .word 124
  .short 64, 0 ; _responseSpeed
  .word 128
  .short 14, 0 ; _continuousMode
  .word 132
  .short 315, 2 ; setAngle
  .word modules_ServoClient_setAngle__P4480_args@fn
  .short 176, 2 ; internalSetAngle
  .word modules_ServoClient_internalSetAngle__P5271_args@fn
  .short 177, 2 ; internalSetContinuous
  .word modules_ServoClient_internalSetContinuous__P5272_args@fn
  .short 318, 2 ; setEnabled
  .word modules_ServoClient_setEnabled__P4484_args@fn
  .short 206, 2 ; minAngle
  .word modules_ServoClient_minAngle__P4487_args@fn
  .short 204, 2 ; maxAngle
  .word modules_ServoClient_maxAngle__P4490_args@fn
  .short 265, 2 ; reading
  .word jacdac_SimpleSensorClient_reading__P3273_args@fn
  .short 234, 2 ; onReadingChangedBy
  .word jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_SwitchClient__C4523_VT
        .balign 4
modules_SwitchClient__C4523_VT:
        .short 96  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_SwitchClient__C4523_IfaceVT
        .short 34 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_SwitchClient__C4523_IfaceVT:
  .short 264, 638, 260, 258, 400, 454, 252, 570, 248, 550, 652, 242, 240, 238, 236, 234, 232, 286, 228, 570, 224, 294, 220, 218, 216, 422, 212, 210, 608, 382, 628, 202, 464, 302, 196, 194, 192, 230, 468, 498, 184, 182, 292, 210, 176, 502, 172, 426, 464, 526, 548, 162, 160, 158, 156, 154, 152, 150, 148, 578, 152, 142, 140, 298, 136, 134, 132, 322, 152, 366, 540, 122, 248, 118, 116, 114, 112, 342, 108, 242, 104, 102, 100, 98, 448, 94, 92, 90, 168, 270, 148, 82, 80, 94, 412, 74, 72, 70, 68, 66, 64, 350, 148, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 430, 204, 402, 32, 30, 28, 26, 24, 22, 268, 234, 64, 134, 164, 106, 232, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 80, 0 ; _variant
  .word 92
  .short 358, 2 ; variant
  .word modules_SwitchClient_variant__P4526_args@fn
  .short 230, 2 ; onOff
  .word modules_SwitchClient_onOff__P4529_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_TemperatureClient__C4551_VT
        .balign 4
modules_TemperatureClient__C4551_VT:
        .short 112  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_TemperatureClient__C4551_IfaceVT
        .short 31 ; class-id
        .short 0 ; reserved
        .word 1192397592 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_TemperatureClient__C4551_IfaceVT:
  .short 520, 518, 516, 514, 512, 510, 508, 506, 856, 502, 500, 594, 496, 494, 492, 554, 488, 574, 484, 922, 480, 478, 476, 474, 472, 598, 468, 466, 464, 462, 460, 770, 624, 454, 452, 602, 448, 446, 444, 498, 624, 438, 436, 434, 856, 430, 428, 426, 424, 422, 420, 418, 416, 622, 412, 410, 408, 894, 684, 546, 400, 398, 684, 394, 392, 390, 388, 386, 384, 382, 380, 634, 376, 374, 372, 778, 368, 366, 364, 706, 360, 358, 804, 354, 352, 350, 564, 346, 800, 342, 340, 338, 336, 334, 332, 330, 448, 326, 324, 546, 680, 710, 420, 314, 312, 310, 308, 306, 304, 302, 300, 298, 296, 294, 292, 290, 672, 286, 284, 282, 440, 278, 740, 274, 272, 342, 460, 266, 264, 262, 260, 258, 256, 254, 252, 250, 248, 326, 244, 242, 240, 238, 236, 282, 232, 526, 468, 226, 224, 222, 220, 234, 536, 550, 212, 210, 208, 206, 204, 202, 200, 198, 196, 194, 560, 190, 188, 386, 184, 182, 180, 178, 576, 174, 172, 170, 168, 166, 164, 162, 160, 430, 156, 154, 528, 150, 148, 146, 144, 142, 140, 138, 136, 134, 564, 154, 128, 126, 124, 162, 120, 150, 532, 114, 344, 110, 580, 106, 104, 102, 100, 98, 96, 94, 92, 90, 392, 262, 84, 82, 80, 78, 76, 338, 72, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 154, 40, 38, 36, 34, 168, 30, 276, 26, 504, 22, 20, 18, 16, 14, 12, 18, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 266, 0 ; readingDigitsPrecision
  .word 92
  .short 51, 0 ; _minTemperature
  .word 96
  .short 45, 0 ; _maxTemperature
  .word 100
  .short 78, 0 ; _temperatureError
  .word 104
  .short 80, 0 ; _variant
  .word 108
  .short 347, 2 ; temperature
  .word modules_TemperatureClient_temperature__P4553_args@fn
  .short 358, 2 ; variant
  .word modules_TemperatureClient_variant__P4557_args@fn
  .short 237, 2 ; onTemperatureChangedBy
  .word modules_TemperatureClient_onTemperatureChangedBy__P4558_args@fn
  .short 265, 2 ; reading
  .word jacdac_SimpleSensorClient_reading__P3273_args@fn
  .short 234, 2 ; onReadingChangedBy
  .word jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_DistanceClient__C3797_VT
        .balign 4
modules_DistanceClient__C3797_VT:
        .short 112  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_DistanceClient__C3797_IfaceVT
        .short 32 ; class-id
        .short 0 ; reserved
        .word 1650515224 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3267_nochk@fn
        .balign 4
modules_DistanceClient__C3797_IfaceVT:
  .short 520, 518, 516, 514, 512, 510, 508, 506, 504, 758, 500, 498, 496, 494, 492, 634, 488, 486, 484, 482, 480, 478, 956, 474, 472, 470, 468, 466, 464, 462, 460, 458, 856, 454, 836, 754, 448, 446, 444, 442, 440, 438, 436, 434, 432, 430, 428, 426, 424, 422, 420, 690, 544, 486, 604, 410, 584, 406, 404, 402, 400, 398, 396, 394, 392, 390, 388, 386, 384, 462, 380, 826, 376, 374, 372, 458, 368, 366, 652, 362, 360, 358, 356, 354, 352, 350, 348, 346, 776, 342, 340, 338, 336, 334, 332, 330, 328, 326, 324, 322, 320, 318, 316, 314, 784, 310, 324, 306, 304, 326, 356, 298, 296, 406, 292, 698, 288, 286, 284, 282, 280, 278, 276, 274, 272, 270, 268, 586, 264, 310, 260, 258, 256, 566, 452, 250, 624, 246, 244, 682, 240, 238, 236, 234, 584, 230, 228, 450, 264, 646, 220, 338, 216, 214, 212, 378, 208, 206, 204, 202, 200, 358, 196, 194, 560, 190, 188, 186, 184, 182, 516, 178, 312, 174, 628, 354, 168, 166, 396, 162, 160, 158, 156, 154, 152, 150, 148, 146, 144, 534, 172, 346, 136, 430, 132, 130, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 594, 104, 102, 100, 202, 96, 94, 332, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 534, 68, 66, 344, 62, 60, 58, 56, 470, 60, 410, 296, 46, 44, 194, 40, 38, 36, 378, 32, 246, 92, 290, 24, 22, 116, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 61, 0 ; _reading
  .word 60
  .short 77, 0 ; _streamingSamples
  .word 64
  .short 76, 0 ; _streamingInterval
  .word 68
  .short 288, 0 ; samples
  .word 72
  .short 289, 0 ; samplesExpiration
  .word 76
  .short 195, 0 ; lastSample
  .word 80
  .short 189, 0 ; isStreaming
  .word 84
  .short 267, 0 ; readingTimeout
  .word 88
  .short 266, 0 ; readingDigitsPrecision
  .word 92
  .short 20, 0 ; _distanceError
  .word 96
  .short 50, 0 ; _minRange
  .word 100
  .short 43, 0 ; _maxRange
  .word 104
  .short 80, 0 ; _variant
  .word 108
  .short 130, 2 ; distance
  .word modules_DistanceClient_distance__P3799_args@fn
  .short 358, 2 ; variant
  .word modules_DistanceClient_variant__P3803_args@fn
  .short 223, 2 ; onDistanceChangedBy
  .word modules_DistanceClient_onDistanceChangedBy__P3804_args@fn
  .short 265, 2 ; reading
  .word jacdac_SimpleSensorClient_reading__P3273_args@fn
  .short 234, 2 ; onReadingChangedBy
  .word jacdac_SimpleSensorClient_onReadingChangedBy__P3274_args@fn
  .short 354, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P5039_args@fn
  .short 104, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P5040_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3267_args@fn
  .short 325, 2 ; setStreaming
  .word jacdac_SensorClient_setStreaming__P3268_args@fn
  .short 235, 2 ; onStateChanged
  .word jacdac_SensorClient_onStateChanged__P3269_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_VibrationMotorClient__C4571_VT
        .balign 4
modules_VibrationMotorClient__C4571_VT:
        .short 64  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_VibrationMotorClient__C4571_IfaceVT
        .short 39 ; class-id
        .short 0 ; reserved
        .word 1192397593 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_Client_announceCallback__P3570_nochk@fn
        .balign 4
modules_VibrationMotorClient__C4571_IfaceVT:
  .short 264, 262, 260, 258, 448, 350, 252, 314, 336, 534, 244, 242, 240, 238, 236, 386, 232, 230, 228, 282, 224, 222, 484, 218, 216, 214, 212, 210, 544, 206, 204, 202, 200, 198, 196, 194, 192, 438, 188, 370, 184, 478, 180, 178, 480, 174, 172, 170, 168, 366, 396, 266, 160, 158, 156, 154, 152, 150, 372, 146, 144, 454, 212, 138, 136, 134, 132, 130, 208, 126, 124, 170, 256, 118, 116, 130, 272, 286, 108, 106, 104, 102, 308, 98, 96, 214, 332, 90, 88, 86, 364, 82, 296, 78, 76, 74, 72, 94, 340, 106, 96, 318, 60, 378, 56, 54, 164, 50, 192, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 150, 20, 18, 344, 14, 12, 18, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 21, 0 ; _enabled
  .word 60
  .short 359, 2 ; vibrate
  .word modules_VibrationMotorClient_vibrate__P4573_args@fn
  .short 360, 2 ; vibrateMulti
  .word modules_VibrationMotorClient_vibrateMulti__P4575_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_Client_announceCallback__P3570_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object modules_HidKeyboardClient__C4151_VT
        .balign 4
modules_HidKeyboardClient__C4151_VT:
        .short 60  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_HidKeyboardClient__C4151_IfaceVT
        .short 40 ; class-id
        .short 0 ; reserved
        .word 1192397593 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3561_nochk@fn
        .word jacdac_Client_announceCallback__P3570_nochk@fn
        .balign 4
modules_HidKeyboardClient__C4151_IfaceVT:
  .short 264, 262, 260, 258, 432, 350, 252, 314, 336, 518, 244, 242, 240, 238, 236, 370, 232, 230, 228, 282, 224, 222, 468, 218, 216, 214, 212, 210, 528, 206, 204, 202, 200, 198, 196, 194, 192, 422, 300, 354, 184, 462, 180, 178, 464, 174, 172, 170, 168, 350, 380, 266, 160, 158, 156, 154, 152, 150, 356, 146, 144, 438, 212, 138, 136, 134, 132, 130, 208, 126, 124, 170, 240, 118, 116, 130, 256, 270, 108, 106, 104, 102, 292, 98, 96, 94, 316, 90, 88, 86, 348, 82, 280, 78, 76, 74, 72, 94, 324, 106, 96, 302, 60, 362, 56, 54, 52, 50, 176, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 328, 14, 12, 18, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 18, 0 ; _device
  .word 8
  .short 139, 0 ; eventSource
  .word 12
  .short 100, 0 ; broadcast
  .word 16
  .short 309, 0 ; serviceIndex
  .word 20
  .short 345, 0 ; supressLog
  .word 24
  .short 337, 0 ; started
  .word 28
  .short 87, 0 ; advertisementData
  .word 32
  .short 346, 0 ; systemActive
  .word 36
  .short 63, 0 ; _registeredEvents
  .word 40
  .short 110, 0 ; config
  .word 44
  .short 274, 0 ; registers
  .word 48
  .short 65, 0 ; _role
  .word 52
  .short 304, 0 ; serviceClass
  .word 56
  .short 192, 2 ; key
  .word modules_HidKeyboardClient_key__P4153_args@fn
  .short 283, 1 ; role
  .word jacdac_Client_role__P3551_args@fn
  .short 284, 1 ; roleName
  .word jacdac_Client_roleName__P3552_args@fn
  .short 285, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3553_args@fn
  .short 121, 1 ; device
  .word jacdac_Client_device__P3554_args@fn
  .short 121, 0 ; set device
  .word jacdac_Client_device__P3555_args@fn
  .short 85, 2 ; addRegister
  .word jacdac_Client_addRegister__P4978_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3560_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3561_args@fn
  .short 5, 2 ; _attach
  .word jacdac_Client__attach__P3562_args@fn
  .short 150, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4979_args@fn
  .short 17, 2 ; _detach
  .word jacdac_Client__detach__P3563_args@fn
  .short 297, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3564_args@fn
  .short 322, 2 ; setReg
  .word jacdac_Client_setReg__P3566_args@fn
  .short 323, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3567_args@fn
  .short 264, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4980_args@fn
  .short 273, 2 ; registerEvent
  .word jacdac_Client_registerEvent__P4981_args@fn
  .short 332, 2 ; start
  .word jacdac_Client_start__P3568_args@fn
  .short 118, 2 ; destroy
  .word jacdac_Client_destroy__P3569_args@fn
  .short 89, 2 ; announceCallback
  .word jacdac_Client_announceCallback__P3570_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac_TokenParser__C4968_VT
        .balign 4
jacdac_TokenParser__C4968_VT:
        .short 40  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_TokenParser__C4968_IfaceVT
        .short 49 ; class-id
        .short 0 ; reserved
        .word 1783883548 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_TokenParser__C4968_IfaceVT:
  .short 112, 46, 84, 34, 32, 86, 44, 58, 24, 86, 20, 18, 16, 14, 52, 10, 32, 6, 4, 2
  .short 101, 0 ; c0
  .word 4
  .short 330, 0 ; size
  .word 8
  .short 131, 0 ; div
  .word 12
  .short 142, 0 ; fp
  .word 16
  .short 213, 0 ; nfmt
  .word 20
  .short 214, 0 ; nfmt2
  .word 24
  .short 364, 0 ; word
  .word 28
  .short 179, 0 ; isArray
  .word 32
  .short 141, 0 ; fmt
  .word 36
  .short 248, 2 ; parse
  .word jacdac_TokenParser_parse__P4969_args@fn
  .word 0, 0 ; the end
        .object jacdac_JDPacket__C2910_VT
        .balign 4
jacdac_JDPacket__C2910_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_JDPacket__C2910_IfaceVT
        .short 50 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word jacdac_JDPacket_toString__P2954_args@fn
        .balign 4
jacdac_JDPacket__C2910_IfaceVT:
  .short 264, 262, 260, 258, 256, 254, 388, 250, 376, 566, 540, 338, 240, 238, 236, 234, 232, 230, 228, 226, 224, 222, 332, 218, 216, 214, 212, 210, 264, 214, 204, 538, 424, 198, 196, 194, 192, 190, 188, 186, 184, 182, 444, 226, 328, 174, 172, 474, 168, 166, 204, 162, 160, 158, 348, 154, 152, 150, 148, 146, 424, 142, 340, 490, 136, 310, 132, 474, 128, 126, 124, 122, 120, 118, 116, 402, 352, 110, 108, 106, 104, 102, 100, 98, 408, 310, 92, 90, 88, 158, 84, 82, 80, 78, 76, 162, 72, 70, 340, 66, 64, 62, 60, 90, 176, 382, 52, 50, 48, 302, 44, 42, 40, 38, 36, 114, 240, 94, 28, 194, 24, 22, 36, 42, 248, 14, 12, 10, 8, 6, 4, 2
  .short 25, 0 ; _header
  .word 4
  .short 15, 0 ; _data
  .word 8
  .short 349, 0 ; timestamp
  .word 12
  .short 24, 0 ; _handled
  .word 16
  .short 144, 2 ; fromBinary
  .word jacdac_JDPacket_fromBinary__P2915_args@fn
  .short 143, 2 ; from
  .word jacdac_JDPacket_from__P2916_args@fn
  .short 244, 2 ; onlyHeader
  .word jacdac_JDPacket_onlyHeader__P2917_args@fn
  .short 145, 2 ; fromFrameless
  .word jacdac_JDPacket_fromFrameless__P2918_args@fn
  .short 190, 2 ; jdpacked
  .word jacdac_JDPacket_jdpacked__P2919_args@fn
  .short 163, 1 ; handled
  .word jacdac_JDPacket_handled__P2921_args@fn
  .short 202, 2 ; markHandled
  .word jacdac_JDPacket_markHandled__P2922_args@fn
  .short 257, 2 ; possiblyNotImplemented
  .word jacdac_JDPacket_possiblyNotImplemented__P2923_args@fn
  .short 123, 1 ; deviceIdentifier
  .word jacdac_JDPacket_deviceIdentifier__P2924_args@fn
  .short 123, 0 ; set deviceIdentifier
  .word jacdac_JDPacket_deviceIdentifier__P2925_args@fn
  .short 246, 1 ; packetFlags
  .word jacdac_JDPacket_packetFlags__P2926_args@fn
  .short 209, 1 ; multicommandClass
  .word jacdac_JDPacket_multicommandClass__P2927_args@fn
  .short 330, 1 ; size
  .word jacdac_JDPacket_size__P2928_args@fn
  .short 277, 1 ; requiresAck
  .word jacdac_JDPacket_requiresAck__P2929_args@fn
  .short 277, 0 ; set requiresAck
  .word jacdac_JDPacket_requiresAck__P2930_args@fn
  .short 309, 1 ; serviceIndex
  .word jacdac_JDPacket_serviceIndex__P2931_args@fn
  .short 309, 0 ; set serviceIndex
  .word jacdac_JDPacket_serviceIndex__P2932_args@fn
  .short 113, 1 ; crc
  .word jacdac_JDPacket_crc__P2933_args@fn
  .short 307, 1 ; serviceCommand
  .word jacdac_JDPacket_serviceCommand__P2934_args@fn
  .short 307, 0 ; set serviceCommand
  .word jacdac_JDPacket_serviceCommand__P2935_args@fn
  .short 184, 1 ; isEvent
  .word jacdac_JDPacket_isEvent__P2936_args@fn
  .short 136, 1 ; eventCode
  .word jacdac_JDPacket_eventCode__P2937_args@fn
  .short 137, 1 ; eventCounter
  .word jacdac_JDPacket_eventCounter__P2938_args@fn
  .short 187, 1 ; isRegSet
  .word jacdac_JDPacket_isRegSet__P2939_args@fn
  .short 186, 1 ; isRegGet
  .word jacdac_JDPacket_isRegGet__P2940_args@fn
  .short 272, 1 ; regCode
  .word jacdac_JDPacket_regCode__P2941_args@fn
  .short 117, 1 ; data
  .word jacdac_JDPacket_data__P2942_args@fn
  .short 117, 0 ; set data
  .word jacdac_JDPacket_data__P2943_args@fn
  .short 173, 1 ; intData
  .word jacdac_JDPacket_intData__P2944_args@fn
  .short 191, 2 ; jdunpack
  .word jacdac_JDPacket_jdunpack__P2947_args@fn
  .short 363, 2 ; withFrameStripped
  .word jacdac_JDPacket_withFrameStripped__P2949_args@fn
  .short 148, 2 ; getNumber
  .word jacdac_JDPacket_getNumber__P2950_args@fn
  .short 182, 1 ; isCommand
  .word jacdac_JDPacket_isCommand__P2952_args@fn
  .short 188, 1 ; isReport
  .word jacdac_JDPacket_isReport__P2953_args@fn
  .short 350, 2 ; toString
  .word jacdac_JDPacket_toString__P2954_args@fn
  .short 69, 2 ; _sendCore
  .word jacdac_JDPacket__sendCore__P2956_args@fn
  .short 70, 2 ; _sendReport
  .word jacdac_JDPacket__sendReport__P2957_args@fn
  .short 67, 2 ; _sendCmd
  .word jacdac_JDPacket__sendCmd__P2958_args@fn
  .short 68, 2 ; _sendCmdId
  .word jacdac_JDPacket__sendCmdId__P2959_args@fn
  .short 295, 2 ; sendAsMultiCommand
  .word jacdac_JDPacket_sendAsMultiCommand__P2960_args@fn
  .short 71, 2 ; _sendWithAck
  .word jacdac_JDPacket__sendWithAck__P2961_args@fn
  .word 0, 0 ; the end
        .object jacdac_Server__C3494_VT
        .balign 4
jacdac_Server__C3494_VT:
        .short 68  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_Server__C3494_IfaceVT
        .short 41 ; class-id
        .short 0 ; reserved
        .word 883080985 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word jacdac_Server_toString__P3514_args@fn
        .word jacdac_Server_handlePacketOuter__P3509_nochk@fn
        .word jacdac_Server_handlePacket__P3510_nochk@fn
        .word jacdac_Server_log__P4999_nochk@fn
        .balign 4
jacdac_Server__C3494_IfaceVT:
  .short 264, 318, 260, 258, 256, 254, 252, 250, 248, 422, 244, 242, 240, 478, 236, 546, 232, 494, 228, 226, 224, 222, 220, 218, 216, 238, 212, 290, 208, 526, 204, 298, 200, 502, 396, 490, 520, 190, 188, 418, 184, 182, 180, 178, 176, 174, 180, 170, 168, 166, 164, 162, 160, 246, 156, 154, 152, 150, 372, 146, 144, 334, 412, 210, 256, 134, 132, 498, 192, 462, 124, 122, 120, 118, 116, 114, 112, 222, 276, 106, 104, 358, 100, 98, 344, 94, 92, 90, 368, 214, 444, 82, 80, 78, 76, 74, 176, 414, 68, 202, 64, 62, 60, 58, 56, 94, 52, 50, 48, 46, 252, 226, 40, 38, 252, 34, 32, 30, 380, 74, 24, 22, 20, 306, 32, 46, 164, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 172, 0 ; instanceName
  .word 8
  .short 102, 0 ; calibrate
  .word 12
  .short 356, 0 ; valuePackFormat
  .word 16
  .short 175, 0 ; intensityPackFormat
  .word 20
  .short 111, 0 ; constants
  .word 24
  .short 345, 0 ; supressLog
  .word 28
  .short 287, 0 ; running
  .word 32
  .short 309, 0 ; serviceIndex
  .word 36
  .short 338, 0 ; stateUpdated
  .word 40
  .short 74, 0 ; _statusCode
  .word 44
  .short 75, 0 ; _statusVendorCode
  .word 48
  .short 79, 0 ; _value
  .word 52
  .short 28, 0 ; _intensity
  .word 56
  .short 358, 0 ; variant
  .word 60
  .short 304, 0 ; serviceClass
  .word 64
  .short 339, 1 ; statusCode
  .word jacdac_Server_statusCode__P3499_args@fn
  .short 174, 1 ; intensity
  .word jacdac_Server_intensity__P3503_args@fn
  .short 174, 0 ; set intensity
  .word jacdac_Server_intensity__P3504_args@fn
  .short 355, 1 ; value
  .word jacdac_Server_value__P3505_args@fn
  .short 355, 0 ; set value
  .word jacdac_Server_value__P3506_args@fn
  .short 324, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3507_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Server_handlePacketOuter__P3509_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Server_handlePacket__P3510_args@fn
  .short 299, 2 ; sendReport
  .word jacdac_Server_sendReport__P4985_args@fn
  .short 298, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3512_args@fn
  .short 296, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3513_args@fn
  .short 160, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4986_args@fn
  .short 153, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4987_args@fn
  .short 162, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4988_args@fn
  .short 161, 2 ; handleValue
  .word jacdac_Server_handleValue__P4989_args@fn
  .short 154, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4990_args@fn
  .short 149, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4991_args@fn
  .short 132, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4992_args@fn
  .short 158, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4993_args@fn
  .short 159, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4994_args@fn
  .short 350, 2 ; toString
  .word jacdac_Server_toString__P3514_args@fn
  .short 157, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4995_args@fn
  .short 332, 2 ; start
  .word jacdac_Server_start__P3515_args@fn
  .short 200, 2 ; log
  .word jacdac_Server_log__P4999_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac_Device__C3572_VT
        .balign 4
jacdac_Device__C3572_VT:
        .short 40  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_Device__C3572_IfaceVT
        .short 47 ; class-id
        .short 0 ; reserved
        .word 1486121752 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word jacdac_Device_toString__P3584_args@fn
        .balign 4
jacdac_Device__C3572_IfaceVT:
  .short 520, 518, 516, 514, 512, 510, 508, 506, 504, 502, 500, 498, 496, 494, 492, 490, 688, 486, 484, 482, 480, 478, 476, 698, 472, 470, 572, 466, 464, 462, 460, 650, 456, 454, 452, 450, 528, 446, 444, 650, 440, 438, 436, 434, 432, 430, 428, 426, 424, 422, 420, 418, 416, 414, 468, 410, 408, 406, 404, 402, 400, 510, 396, 394, 392, 390, 388, 522, 384, 382, 380, 378, 448, 374, 372, 370, 368, 430, 364, 402, 360, 358, 356, 354, 352, 350, 348, 346, 344, 342, 340, 338, 336, 334, 332, 330, 328, 326, 324, 322, 320, 318, 316, 314, 312, 310, 308, 306, 304, 302, 300, 298, 296, 294, 292, 290, 288, 286, 284, 282, 280, 278, 276, 274, 272, 270, 268, 266, 264, 262, 492, 258, 256, 254, 252, 250, 400, 430, 244, 242, 360, 238, 236, 234, 232, 230, 228, 314, 224, 222, 220, 218, 216, 214, 212, 210, 232, 206, 372, 202, 200, 198, 196, 194, 192, 190, 188, 346, 184, 182, 180, 178, 176, 190, 412, 170, 168, 166, 164, 162, 160, 158, 372, 154, 152, 150, 148, 146, 144, 142, 140, 138, 136, 134, 132, 130, 128, 126, 124, 122, 296, 118, 116, 114, 112, 206, 108, 106, 104, 110, 100, 98, 96, 94, 140, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 198, 68, 66, 64, 62, 60, 58, 56, 86, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 176, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 196, 0 ; lastSeen
  .word 8
  .short 106, 0 ; clients
  .word 12
  .short 22, 0 ; _eventCounter
  .word 16
  .short 72, 0 ; _shortId
  .word 20
  .short 261, 0 ; queries
  .word 24
  .short 66, 0 ; _score
  .word 28
  .short 122, 0 ; deviceId
  .word 32
  .short 313, 0 ; services
  .word 36
  .short 180, 1 ; isBrain
  .word jacdac_Device_isBrain__P3577_args@fn
  .short 90, 1 ; announceflags
  .word jacdac_Device_announceflags__P3578_args@fn
  .short 282, 1 ; restartCounter
  .word jacdac_Device_restartCounter__P3579_args@fn
  .short 326, 1 ; shortId
  .word jacdac_Device_shortId__P3583_args@fn
  .short 350, 2 ; toString
  .word jacdac_Device_toString__P3584_args@fn
  .short 203, 2 ; matchesRoleAt
  .word jacdac_Device_matchesRoleAt__P3585_args@fn
  .short 201, 2 ; lookupQuery
  .word jacdac_Device_lookupQuery__P5102_args@fn
  .short 306, 1 ; serviceClassLength
  .word jacdac_Device_serviceClassLength__P3586_args@fn
  .short 310, 2 ; serviceIndexAtOffset
  .word jacdac_Device_serviceIndexAtOffset__P3587_args@fn
  .short 312, 2 ; serviceOffsetAt
  .word jacdac_Device_serviceOffsetAt__P5103_args@fn
  .short 305, 2 ; serviceClassAt
  .word jacdac_Device_serviceClassAt__P3588_args@fn
  .short 262, 2 ; query
  .word jacdac_Device_query__P3589_args@fn
  .short 259, 2 ; processPacket
  .word jacdac_Device_processPacket__P3593_args@fn
  .short 167, 2 ; hasService
  .word jacdac_Device_hasService__P3594_args@fn
  .short 16, 2 ; _destroy
  .word jacdac_Device__destroy__P3597_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac_RegisterClient__C3521_VT
        .balign 4
jacdac_RegisterClient__C3521_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_RegisterClient__C3521_IfaceVT
        .short 48 ; class-id
        .short 0 ; reserved
        .word -58771686 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_RegisterClient__C3521_IfaceVT:
  .short 136, 134, 132, 130, 128, 150, 124, 226, 120, 278, 116, 170, 112, 110, 108, 258, 104, 102, 276, 282, 96, 94, 92, 90, 88, 86, 172, 82, 80, 158, 76, 146, 72, 110, 84, 66, 64, 158, 60, 58, 56, 102, 52, 50, 112, 46, 44, 210, 40, 38, 44, 34, 32, 30, 60, 170, 152, 142, 20, 18, 16, 14, 12, 146, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 15, 0 ; _data
  .word 8
  .short 34, 0 ; _localTime
  .word 12
  .short 140, 0 ; flags
  .word 16
  .short 303, 0 ; service
  .word 20
  .short 108, 0 ; code
  .word 24
  .short 245, 0 ; packFormat
  .word 28
  .short 279, 2 ; reset
  .word jacdac_RegisterClient_reset__P3524_args@fn
  .short 168, 2 ; hasValues
  .word jacdac_RegisterClient_hasValues__P3526_args@fn
  .short 183, 1 ; isConst
  .word jacdac_RegisterClient_isConst__P3527_args@fn
  .short 185, 1 ; isOptional
  .word jacdac_RegisterClient_isOptional__P3528_args@fn
  .short 262, 2 ; query
  .word jacdac_RegisterClient_query__P3529_args@fn
  .short 249, 2 ; pauseUntilValues
  .word jacdac_RegisterClient_pauseUntilValues__P3530_args@fn
  .short 357, 1 ; values
  .word jacdac_RegisterClient_values__P3531_args@fn
  .short 357, 0 ; set values
  .word jacdac_RegisterClient_values__P3532_args@fn
  .short 300, 2 ; sendSet
  .word jacdac_RegisterClient_sendSet__P3533_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_RegisterClient_handlePacket__P3535_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac_ClientPacketQueue__C5088_VT
        .balign 4
jacdac_ClientPacketQueue__C5088_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_ClientPacketQueue__C5088_IfaceVT
        .short 51 ; class-id
        .short 0 ; reserved
        .word 707283741 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_ClientPacketQueue__C5088_IfaceVT:
  .short 24, 38, 20, 42, 16, 22, 44, 10, 8, 6, 4, 2
  .short 251, 0 ; pkts
  .word 4
  .short 247, 0 ; parent
  .word 8
  .short 353, 2 ; updateQueue
  .word jacdac_ClientPacketQueue_updateQueue__P5089_args@fn
  .short 294, 2 ; send
  .word jacdac_ClientPacketQueue_send__P5091_args@fn
  .short 278, 2 ; resend
  .word jacdac_ClientPacketQueue_resend__P5092_args@fn
  .word 0, 0 ; the end
        .object jacdac_ClientRoleQuery__C3536_VT
        .balign 4
jacdac_ClientRoleQuery__C3536_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_ClientRoleQuery__C3536_IfaceVT
        .short 52 ; class-id
        .short 0 ; reserved
        .word 1783883550 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_ClientRoleQuery__C3536_IfaceVT:
  .short 40, 22, 12, 26, 8, 6, 4, 2
  .short 283, 0 ; role
  .word 4
  .short 121, 0 ; device
  .word 8
  .short 309, 0 ; serviceIndex
  .word 12
  .short 311, 0 ; serviceOffset
  .word 16
  .word 0, 0 ; the end
        .object jacdac_DelayedPacket__C5014_VT
        .balign 4
jacdac_DelayedPacket__C5014_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_DelayedPacket__C5014_IfaceVT
        .short 53 ; class-id
        .short 0 ; reserved
        .word -287244001 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_DelayedPacket__C5014_IfaceVT:
  .short 20, 10, 8, 6, 4, 2
  .short 349, 0 ; timestamp
  .word 4
  .short 250, 0 ; pkt
  .word 8
  .word 0, 0 ; the end
        .object control_PollEvent__C4842_VT
        .balign 4
control_PollEvent__C4842_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word control_PollEvent__C4842_IfaceVT
        .short 54 ; class-id
        .short 0 ; reserved
        .word 1783883549 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_PollEvent__C4842_IfaceVT:
  .short 24, 22, 52, 18, 40, 14, 12, 18, 24, 46, 4, 2
  .short 134, 0 ; eid
  .word 4
  .short 361, 0 ; vid
  .word 8
  .short 332, 0 ; start
  .word 12
  .short 348, 0 ; timeOut
  .word 16
  .short 109, 0 ; condition
  .word 20
  .short 243, 0 ; once
  .word 24
  .word 0, 0 ; the end
        .object jacdac_RegQuery__C5099_VT
        .balign 4
jacdac_RegQuery__C5099_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_RegQuery__C5099_IfaceVT
        .short 55 ; class-id
        .short 0 ; reserved
        .word 1703617821 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_RegQuery__C5099_IfaceVT:
  .short 24, 62, 20, 50, 16, 38, 28, 18, 8, 6, 4, 2
  .short 193, 0 ; lastQuery
  .word 4
  .short 194, 0 ; lastReport
  .word 8
  .short 355, 0 ; value
  .word 12
  .short 216, 0 ; notImplemented
  .word 16
  .short 271, 0 ; reg
  .word 20
  .short 308, 0 ; serviceIdx
  .word 24
  .word 0, 0 ; the end
        .object music_Melody__C4815_VT
        .balign 4
music_Melody__C4815_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word music_Melody__C4815_IfaceVT
        .short 56 ; class-id
        .short 0 ; reserved
        .word 1703617820 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
music_Melody__C4815_IfaceVT:
  .short 64, 38, 36, 42, 72, 30, 28, 58, 24, 38, 20, 74, 16, 62, 12, 10, 8, 6, 4, 2
  .short 205, 0 ; melodyArray
  .word 4
  .short 114, 0 ; currentDuration
  .word 8
  .short 115, 0 ; currentOctave
  .word 12
  .short 116, 0 ; currentPos
  .word 16
  .short 276, 0 ; repeating
  .word 20
  .short 94, 0 ; background
  .word 24
  .short 166, 2 ; hasNextNote
  .word music_Melody_hasNextNote__P4816_args@fn
  .short 211, 2 ; nextNote
  .word music_Melody_nextNote__P4817_args@fn
  .word 0, 0 ; the end
        .object jacdac_EventListener__C3619_VT
        .balign 4
jacdac_EventListener__C3619_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_EventListener__C3619_IfaceVT
        .short 57 ; class-id
        .short 0 ; reserved
        .word 1468534559 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_EventListener__C3619_IfaceVT:
  .short 20, 10, 8, 6, 4, 2
  .short 192, 0 ; key
  .word 4
  .short 164, 0 ; handler
  .word 8
  .word 0, 0 ; the end
        .object machine_SonifyOptions__C4685_VT
        .balign 4
machine_SonifyOptions__C4685_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word machine_SonifyOptions__C4685_IfaceVT
        .short 58 ; class-id
        .short 0 ; reserved
        .word 883080989 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
machine_SonifyOptions__C4685_IfaceVT:
  .short 48, 22, 28, 18, 32, 14, 44, 10, 8, 6, 4, 2
  .short 362, 0 ; waveShape
  .word 4
  .short 133, 0 ; effect
  .word 8
  .short 178, 0 ; interpolation
  .word 12
  .short 336, 0 ; startVolume
  .word 16
  .short 252, 2 ; play
  .word machine_SonifyOptions_play__P4691_args@fn
  .word 0, 0 ; the end
        .object music_Playable__C2803_VT
        .balign 4
music_Playable__C2803_VT:
        .short 8  ; size in bytes
        .byte 4, 249 ; magic
        .word music_Playable__C2803_IfaceVT
        .short 59 ; class-id
        .short 0 ; reserved
        .word 1101023519 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
music_Playable__C2803_IfaceVT:
  .short 12, 10, 8, 6, 4, 2
  .short 341, 0 ; stopped
  .word 4
  .word 0, 0 ; the end
        .object SoundExpression__C2699_VT
        .balign 4
SoundExpression__C2699_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word SoundExpression__C2699_IfaceVT
        .short 60 ; class-id
        .short 0 ; reserved
        .word 1650515230 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
SoundExpression__C2699_IfaceVT:
  .short 16, 22, 36, 26, 8, 6, 4, 2
  .short 341, 0 ; stopped
  .word 4
  .short 217, 0 ; notes
  .word 8
  .short 252, 2 ; play
  .word SoundExpression_play__P2702_args@fn
  .short 254, 2 ; playUntilDone
  .word SoundExpression_playUntilDone__P2703_args@fn
  .word 0, 0 ; the end
        .object machine_NumberToShow__C5443_VT
        .balign 4
machine_NumberToShow__C5443_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word machine_NumberToShow__C5443_IfaceVT
        .short 61 ; class-id
        .short 0 ; reserved
        .word 1101023519 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
machine_NumberToShow__C5443_IfaceVT:
  .short 20, 10, 8, 6, 4, 2
  .short 171, 0 ; icon
  .word 4
  .short 368, 0 ; x
  .word 8
  .word 0, 0 ; the end
        .object machine_ClientFactory__C5462_VT
        .balign 4
machine_ClientFactory__C5462_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word machine_ClientFactory__C5462_IfaceVT
        .short 62 ; class-id
        .short 0 ; reserved
        .word 1101023519 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
machine_ClientFactory__C5462_IfaceVT:
  .short 20, 10, 8, 6, 4, 2
  .short 304, 0 ; serviceClass
  .word 4
  .short 164, 0 ; handler
  .word 8
  .word 0, 0 ; the end
        .object jacdac_BrainServer__C5108_VT
        .balign 4
jacdac_BrainServer__C5108_VT:
        .short 68  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_BrainServer__C5108_IfaceVT
        .short 42 ; class-id
        .short 0 ; reserved
        .word 883080985 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Server_handlePacketOuter__P3509_nochk@fn
        .word jacdac_Server_handlePacket__P3510_nochk@fn
        .word jacdac_Server_log__P4999_nochk@fn
        .balign 4
jacdac_BrainServer__C5108_IfaceVT:
  .short 264, 318, 260, 258, 256, 254, 252, 250, 248, 422, 244, 242, 240, 478, 236, 546, 232, 494, 228, 226, 224, 222, 220, 218, 216, 238, 212, 290, 208, 526, 204, 298, 200, 502, 396, 490, 520, 190, 188, 418, 184, 182, 180, 178, 176, 174, 180, 170, 168, 166, 164, 162, 160, 246, 156, 154, 152, 150, 372, 146, 144, 334, 412, 210, 256, 134, 132, 498, 192, 462, 124, 122, 120, 118, 116, 114, 112, 222, 276, 106, 104, 358, 100, 98, 344, 94, 92, 90, 368, 214, 444, 82, 80, 78, 76, 74, 176, 414, 68, 202, 64, 62, 60, 58, 56, 94, 52, 50, 48, 46, 252, 226, 40, 38, 252, 34, 32, 30, 380, 74, 24, 22, 20, 306, 32, 46, 164, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 172, 0 ; instanceName
  .word 8
  .short 102, 0 ; calibrate
  .word 12
  .short 356, 0 ; valuePackFormat
  .word 16
  .short 175, 0 ; intensityPackFormat
  .word 20
  .short 111, 0 ; constants
  .word 24
  .short 345, 0 ; supressLog
  .word 28
  .short 287, 0 ; running
  .word 32
  .short 309, 0 ; serviceIndex
  .word 36
  .short 338, 0 ; stateUpdated
  .word 40
  .short 74, 0 ; _statusCode
  .word 44
  .short 75, 0 ; _statusVendorCode
  .word 48
  .short 79, 0 ; _value
  .word 52
  .short 28, 0 ; _intensity
  .word 56
  .short 358, 0 ; variant
  .word 60
  .short 304, 0 ; serviceClass
  .word 64
  .short 339, 1 ; statusCode
  .word jacdac_Server_statusCode__P3499_args@fn
  .short 174, 1 ; intensity
  .word jacdac_Server_intensity__P3503_args@fn
  .short 174, 0 ; set intensity
  .word jacdac_Server_intensity__P3504_args@fn
  .short 355, 1 ; value
  .word jacdac_Server_value__P3505_args@fn
  .short 355, 0 ; set value
  .word jacdac_Server_value__P3506_args@fn
  .short 324, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3507_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Server_handlePacketOuter__P3509_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Server_handlePacket__P3510_args@fn
  .short 299, 2 ; sendReport
  .word jacdac_Server_sendReport__P4985_args@fn
  .short 298, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3512_args@fn
  .short 296, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3513_args@fn
  .short 160, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4986_args@fn
  .short 153, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4987_args@fn
  .short 162, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4988_args@fn
  .short 161, 2 ; handleValue
  .word jacdac_Server_handleValue__P4989_args@fn
  .short 154, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4990_args@fn
  .short 149, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4991_args@fn
  .short 132, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4992_args@fn
  .short 158, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4993_args@fn
  .short 159, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4994_args@fn
  .short 350, 2 ; toString
  .word jacdac_Server_toString__P3514_args@fn
  .short 157, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4995_args@fn
  .short 332, 2 ; start
  .word jacdac_Server_start__P3515_args@fn
  .short 200, 2 ; log
  .word jacdac_Server_log__P4999_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac_ProxyServer__C5105_VT
        .balign 4
jacdac_ProxyServer__C5105_VT:
        .short 68  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_ProxyServer__C5105_IfaceVT
        .short 43 ; class-id
        .short 0 ; reserved
        .word 883080985 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Server_handlePacketOuter__P3509_nochk@fn
        .word jacdac_Server_handlePacket__P3510_nochk@fn
        .word jacdac_Server_log__P4999_nochk@fn
        .balign 4
jacdac_ProxyServer__C5105_IfaceVT:
  .short 264, 318, 260, 258, 256, 254, 252, 250, 248, 422, 244, 242, 240, 478, 236, 546, 232, 494, 228, 226, 224, 222, 220, 218, 216, 238, 212, 290, 208, 526, 204, 298, 200, 502, 396, 490, 520, 190, 188, 418, 184, 182, 180, 178, 176, 174, 180, 170, 168, 166, 164, 162, 160, 246, 156, 154, 152, 150, 372, 146, 144, 334, 412, 210, 256, 134, 132, 498, 192, 462, 124, 122, 120, 118, 116, 114, 112, 222, 276, 106, 104, 358, 100, 98, 344, 94, 92, 90, 368, 214, 444, 82, 80, 78, 76, 74, 176, 414, 68, 202, 64, 62, 60, 58, 56, 94, 52, 50, 48, 46, 252, 226, 40, 38, 252, 34, 32, 30, 380, 74, 24, 22, 20, 306, 32, 46, 164, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 172, 0 ; instanceName
  .word 8
  .short 102, 0 ; calibrate
  .word 12
  .short 356, 0 ; valuePackFormat
  .word 16
  .short 175, 0 ; intensityPackFormat
  .word 20
  .short 111, 0 ; constants
  .word 24
  .short 345, 0 ; supressLog
  .word 28
  .short 287, 0 ; running
  .word 32
  .short 309, 0 ; serviceIndex
  .word 36
  .short 338, 0 ; stateUpdated
  .word 40
  .short 74, 0 ; _statusCode
  .word 44
  .short 75, 0 ; _statusVendorCode
  .word 48
  .short 79, 0 ; _value
  .word 52
  .short 28, 0 ; _intensity
  .word 56
  .short 358, 0 ; variant
  .word 60
  .short 304, 0 ; serviceClass
  .word 64
  .short 339, 1 ; statusCode
  .word jacdac_Server_statusCode__P3499_args@fn
  .short 174, 1 ; intensity
  .word jacdac_Server_intensity__P3503_args@fn
  .short 174, 0 ; set intensity
  .word jacdac_Server_intensity__P3504_args@fn
  .short 355, 1 ; value
  .word jacdac_Server_value__P3505_args@fn
  .short 355, 0 ; set value
  .word jacdac_Server_value__P3506_args@fn
  .short 324, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3507_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Server_handlePacketOuter__P3509_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Server_handlePacket__P3510_args@fn
  .short 299, 2 ; sendReport
  .word jacdac_Server_sendReport__P4985_args@fn
  .short 298, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3512_args@fn
  .short 296, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3513_args@fn
  .short 160, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4986_args@fn
  .short 153, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4987_args@fn
  .short 162, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4988_args@fn
  .short 161, 2 ; handleValue
  .word jacdac_Server_handleValue__P4989_args@fn
  .short 154, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4990_args@fn
  .short 149, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4991_args@fn
  .short 132, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4992_args@fn
  .short 158, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4993_args@fn
  .short 159, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4994_args@fn
  .short 350, 2 ; toString
  .word jacdac_Server_toString__P3514_args@fn
  .short 157, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4995_args@fn
  .short 332, 2 ; start
  .word jacdac_Server_start__P3515_args@fn
  .short 200, 2 ; log
  .word jacdac_Server_log__P4999_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac_LoggerServer__C3207_VT
        .balign 4
jacdac_LoggerServer__C3207_VT:
        .short 76  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_LoggerServer__C3207_IfaceVT
        .short 44 ; class-id
        .short 0 ; reserved
        .word 1197357337 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Server_handlePacketOuter__P3509_nochk@fn
        .word jacdac_LoggerServer_handlePacket__P3210_nochk@fn
        .word jacdac_LoggerServer_log__P3212_nochk@fn
        .balign 4
jacdac_LoggerServer__C3207_IfaceVT:
  .short 264, 318, 260, 354, 256, 254, 556, 250, 248, 478, 372, 242, 240, 238, 236, 234, 232, 390, 292, 226, 488, 222, 268, 218, 216, 598, 212, 354, 208, 278, 204, 226, 200, 198, 196, 194, 192, 190, 188, 186, 184, 390, 492, 522, 176, 398, 172, 170, 168, 166, 164, 162, 160, 510, 156, 170, 152, 150, 148, 146, 144, 142, 356, 138, 304, 310, 372, 130, 416, 126, 124, 458, 120, 438, 116, 114, 112, 358, 108, 498, 184, 470, 100, 354, 96, 454, 92, 90, 88, 86, 220, 82, 80, 78, 76, 194, 224, 70, 396, 66, 96, 62, 172, 162, 352, 54, 52, 50, 48, 46, 44, 42, 40, 310, 36, 34, 120, 30, 28, 306, 64, 30, 20, 210, 16, 14, 12, 386, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 172, 0 ; instanceName
  .word 8
  .short 102, 0 ; calibrate
  .word 12
  .short 356, 0 ; valuePackFormat
  .word 16
  .short 175, 0 ; intensityPackFormat
  .word 20
  .short 111, 0 ; constants
  .word 24
  .short 345, 0 ; supressLog
  .word 28
  .short 287, 0 ; running
  .word 32
  .short 309, 0 ; serviceIndex
  .word 36
  .short 338, 0 ; stateUpdated
  .word 40
  .short 74, 0 ; _statusCode
  .word 44
  .short 75, 0 ; _statusVendorCode
  .word 48
  .short 79, 0 ; _value
  .word 52
  .short 28, 0 ; _intensity
  .word 56
  .short 358, 0 ; variant
  .word 60
  .short 304, 0 ; serviceClass
  .word 64
  .short 29, 0 ; _lastListenerTime
  .word 68
  .short 207, 0 ; minPriority
  .word 72
  .short 155, 2 ; handlePacket
  .word jacdac_LoggerServer_handlePacket__P3210_args@fn
  .short 200, 2 ; log
  .word jacdac_LoggerServer_log__P3212_args@fn
  .short 83, 2 ; add
  .word jacdac_LoggerServer_add__P3215_args@fn
  .short 339, 1 ; statusCode
  .word jacdac_Server_statusCode__P3499_args@fn
  .short 174, 1 ; intensity
  .word jacdac_Server_intensity__P3503_args@fn
  .short 174, 0 ; set intensity
  .word jacdac_Server_intensity__P3504_args@fn
  .short 355, 1 ; value
  .word jacdac_Server_value__P3505_args@fn
  .short 355, 0 ; set value
  .word jacdac_Server_value__P3506_args@fn
  .short 324, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3507_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Server_handlePacketOuter__P3509_args@fn
  .short 299, 2 ; sendReport
  .word jacdac_Server_sendReport__P4985_args@fn
  .short 298, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3512_args@fn
  .short 296, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3513_args@fn
  .short 160, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4986_args@fn
  .short 153, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4987_args@fn
  .short 162, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4988_args@fn
  .short 161, 2 ; handleValue
  .word jacdac_Server_handleValue__P4989_args@fn
  .short 154, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4990_args@fn
  .short 149, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4991_args@fn
  .short 132, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4992_args@fn
  .short 158, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4993_args@fn
  .short 159, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4994_args@fn
  .short 350, 2 ; toString
  .word jacdac_Server_toString__P3514_args@fn
  .short 157, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4995_args@fn
  .short 332, 2 ; start
  .word jacdac_Server_start__P3515_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac__rolemgr_RoleManagerServer__C3330_VT
        .balign 4
jacdac__rolemgr_RoleManagerServer__C3330_VT:
        .short 76  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac__rolemgr_RoleManagerServer__C3330_IfaceVT
        .short 45 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Server_handlePacketOuter__P3509_nochk@fn
        .word jacdac__rolemgr_RoleManagerServer_handlePacket__P3333_nochk@fn
        .word jacdac_Server_log__P4999_nochk@fn
        .balign 4
jacdac__rolemgr_RoleManagerServer__C3330_IfaceVT:
  .short 264, 262, 260, 258, 256, 574, 252, 250, 600, 630, 244, 242, 240, 278, 236, 234, 232, 230, 228, 314, 224, 222, 220, 450, 216, 214, 268, 346, 544, 582, 604, 202, 200, 318, 324, 378, 464, 238, 188, 186, 184, 182, 180, 242, 176, 174, 188, 498, 312, 238, 524, 162, 160, 158, 156, 154, 160, 350, 308, 402, 552, 142, 140, 138, 136, 134, 132, 130, 520, 126, 388, 122, 120, 334, 116, 114, 112, 110, 108, 418, 208, 102, 100, 98, 96, 94, 92, 122, 200, 86, 84, 82, 80, 78, 156, 74, 72, 70, 308, 234, 64, 286, 236, 154, 56, 358, 52, 50, 48, 46, 68, 194, 320, 334, 380, 402, 32, 30, 28, 26, 272, 22, 20, 306, 16, 14, 12, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 172, 0 ; instanceName
  .word 8
  .short 102, 0 ; calibrate
  .word 12
  .short 356, 0 ; valuePackFormat
  .word 16
  .short 175, 0 ; intensityPackFormat
  .word 20
  .short 111, 0 ; constants
  .word 24
  .short 345, 0 ; supressLog
  .word 28
  .short 287, 0 ; running
  .word 32
  .short 309, 0 ; serviceIndex
  .word 36
  .short 338, 0 ; stateUpdated
  .word 40
  .short 74, 0 ; _statusCode
  .word 44
  .short 75, 0 ; _statusVendorCode
  .word 48
  .short 79, 0 ; _value
  .word 52
  .short 28, 0 ; _intensity
  .word 56
  .short 358, 0 ; variant
  .word 60
  .short 304, 0 ; serviceClass
  .word 64
  .short 56, 0 ; _oldBindingsHash
  .word 68
  .short 92, 0 ; autoBind
  .word 72
  .short 155, 2 ; handlePacket
  .word jacdac__rolemgr_RoleManagerServer_handlePacket__P3333_args@fn
  .short 96, 2 ; bindingHash
  .word jacdac__rolemgr_RoleManagerServer_bindingHash__P5068_args@fn
  .short 95, 2 ; bindRoles
  .word jacdac__rolemgr_RoleManagerServer_bindRoles__P3334_args@fn
  .short 103, 2 ; checkChanges
  .word jacdac__rolemgr_RoleManagerServer_checkChanges__P5069_args@fn
  .short 339, 1 ; statusCode
  .word jacdac_Server_statusCode__P3499_args@fn
  .short 174, 1 ; intensity
  .word jacdac_Server_intensity__P3503_args@fn
  .short 174, 0 ; set intensity
  .word jacdac_Server_intensity__P3504_args@fn
  .short 355, 1 ; value
  .word jacdac_Server_value__P3505_args@fn
  .short 355, 0 ; set value
  .word jacdac_Server_value__P3506_args@fn
  .short 324, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3507_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_Server_handlePacketOuter__P3509_args@fn
  .short 299, 2 ; sendReport
  .word jacdac_Server_sendReport__P4985_args@fn
  .short 298, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3512_args@fn
  .short 296, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3513_args@fn
  .short 160, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4986_args@fn
  .short 153, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4987_args@fn
  .short 162, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4988_args@fn
  .short 161, 2 ; handleValue
  .word jacdac_Server_handleValue__P4989_args@fn
  .short 154, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4990_args@fn
  .short 149, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4991_args@fn
  .short 132, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4992_args@fn
  .short 158, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4993_args@fn
  .short 159, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4994_args@fn
  .short 350, 2 ; toString
  .word jacdac_Server_toString__P3514_args@fn
  .short 157, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4995_args@fn
  .short 332, 2 ; start
  .word jacdac_Server_start__P3515_args@fn
  .short 200, 2 ; log
  .word jacdac_Server_log__P4999_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac__rolemgr_DeviceWrapper__C5056_VT
        .balign 4
jacdac__rolemgr_DeviceWrapper__C5056_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac__rolemgr_DeviceWrapper__C5056_IfaceVT
        .short 63 ; class-id
        .short 0 ; reserved
        .word 1101023518 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac__rolemgr_DeviceWrapper__C5056_IfaceVT:
  .short 32, 22, 12, 10, 8, 6, 4, 2
  .short 97, 0 ; bindings
  .word 4
  .short 290, 0 ; score
  .word 8
  .short 121, 0 ; device
  .word 12
  .word 0, 0 ; the end
        .object jacdac__rolemgr_RoleBinding__C5058_VT
        .balign 4
jacdac__rolemgr_RoleBinding__C5058_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac__rolemgr_RoleBinding__C5058_IfaceVT
        .short 64 ; class-id
        .short 0 ; reserved
        .word 430905116 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac__rolemgr_RoleBinding__C5058_IfaceVT:
  .short 40, 38, 36, 34, 80, 30, 44, 50, 24, 54, 20, 18, 16, 14, 20, 50, 8, 6, 4, 2
  .short 98, 0 ; boundToDev
  .word 4
  .short 99, 0 ; boundToServiceIdx
  .word 8
  .short 283, 0 ; role
  .word 12
  .short 304, 0 ; serviceClass
  .word 16
  .short 285, 0 ; roleQuery
  .word 20
  .short 169, 2 ; host
  .word jacdac__rolemgr_RoleBinding_host__P5059_args@fn
  .short 292, 2 ; select
  .word jacdac__rolemgr_RoleBinding_select__P5060_args@fn
  .word 0, 0 ; the end
        .object jacdac__rolemgr_ServerBindings__C5062_VT
        .balign 4
jacdac__rolemgr_ServerBindings__C5062_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac__rolemgr_ServerBindings__C5062_IfaceVT
        .short 65 ; class-id
        .short 0 ; reserved
        .word 1783883550 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac__rolemgr_ServerBindings__C5062_IfaceVT:
  .short 24, 14, 28, 34, 8, 6, 4, 2
  .short 97, 0 ; bindings
  .word 4
  .short 169, 0 ; host
  .word 8
  .short 146, 1 ; fullyBound
  .word jacdac__rolemgr_ServerBindings_fullyBound__P5063_args@fn
  .short 291, 2 ; scoreFor
  .word jacdac__rolemgr_ServerBindings_scoreFor__P5064_args@fn
  .word 0, 0 ; the end
        .object jacdac_ControlServer__C3598_VT
        .balign 4
jacdac_ControlServer__C3598_VT:
        .short 68  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_ControlServer__C3598_IfaceVT
        .short 46 ; class-id
        .short 0 ; reserved
        .word 883080985 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_ControlServer_handlePacketOuter__P3601_nochk@fn
        .word jacdac_Server_handlePacket__P3510_nochk@fn
        .word jacdac_Server_log__P4999_nochk@fn
        .balign 4
jacdac_ControlServer__C3598_IfaceVT:
  .short 264, 318, 260, 258, 256, 254, 252, 250, 248, 390, 244, 242, 240, 494, 236, 562, 232, 510, 228, 226, 224, 222, 220, 218, 216, 238, 212, 290, 208, 542, 204, 298, 336, 518, 412, 506, 536, 190, 188, 434, 184, 182, 180, 178, 176, 174, 180, 170, 168, 166, 164, 162, 160, 246, 156, 154, 152, 150, 388, 146, 144, 350, 428, 210, 256, 134, 132, 514, 192, 478, 124, 122, 120, 118, 116, 114, 112, 222, 300, 106, 104, 374, 100, 98, 360, 94, 92, 90, 384, 238, 460, 82, 80, 78, 76, 74, 176, 430, 68, 226, 64, 62, 60, 58, 56, 94, 52, 50, 48, 46, 268, 242, 40, 166, 268, 34, 32, 30, 396, 74, 24, 22, 20, 322, 32, 46, 188, 10, 8, 6, 4, 2
  .short 199, 0 ; listeners
  .word 4
  .short 172, 0 ; instanceName
  .word 8
  .short 102, 0 ; calibrate
  .word 12
  .short 356, 0 ; valuePackFormat
  .word 16
  .short 175, 0 ; intensityPackFormat
  .word 20
  .short 111, 0 ; constants
  .word 24
  .short 345, 0 ; supressLog
  .word 28
  .short 287, 0 ; running
  .word 32
  .short 309, 0 ; serviceIndex
  .word 36
  .short 338, 0 ; stateUpdated
  .word 40
  .short 74, 0 ; _statusCode
  .word 44
  .short 75, 0 ; _statusVendorCode
  .word 48
  .short 79, 0 ; _value
  .word 52
  .short 28, 0 ; _intensity
  .word 56
  .short 358, 0 ; variant
  .word 60
  .short 304, 0 ; serviceClass
  .word 64
  .short 301, 2 ; sendUptime
  .word jacdac_ControlServer_sendUptime__P3600_args@fn
  .short 152, 2 ; handleFloodPing
  .word jacdac_ControlServer_handleFloodPing__P5112_args@fn
  .short 156, 2 ; handlePacketOuter
  .word jacdac_ControlServer_handlePacketOuter__P3601_args@fn
  .short 339, 1 ; statusCode
  .word jacdac_Server_statusCode__P3499_args@fn
  .short 174, 1 ; intensity
  .word jacdac_Server_intensity__P3503_args@fn
  .short 174, 0 ; set intensity
  .word jacdac_Server_intensity__P3504_args@fn
  .short 355, 1 ; value
  .word jacdac_Server_value__P3505_args@fn
  .short 355, 0 ; set value
  .word jacdac_Server_value__P3506_args@fn
  .short 324, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3507_args@fn
  .short 155, 2 ; handlePacket
  .word jacdac_Server_handlePacket__P3510_args@fn
  .short 299, 2 ; sendReport
  .word jacdac_Server_sendReport__P4985_args@fn
  .short 298, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3512_args@fn
  .short 296, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3513_args@fn
  .short 160, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4986_args@fn
  .short 153, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4987_args@fn
  .short 162, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4988_args@fn
  .short 161, 2 ; handleValue
  .word jacdac_Server_handleValue__P4989_args@fn
  .short 154, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4990_args@fn
  .short 149, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4991_args@fn
  .short 132, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4992_args@fn
  .short 158, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4993_args@fn
  .short 159, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4994_args@fn
  .short 350, 2 ; toString
  .word jacdac_Server_toString__P3514_args@fn
  .short 157, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4995_args@fn
  .short 332, 2 ; start
  .word jacdac_Server_start__P3515_args@fn
  .short 200, 2 ; log
  .word jacdac_Server_log__P4999_args@fn
  .short 220, 2 ; on
  .word jacdac_EventSource_on__P3624_args@fn
  .short 84, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4976_args@fn
  .short 275, 2 ; removeListenerInternal
  .word jacdac_EventSource_removeListenerInternal__P4977_args@fn
  .short 135, 2 ; emit
  .word jacdac_EventSource_emit__P3626_args@fn
  .short 165, 2 ; hasListener
  .word jacdac_EventSource_hasListener__P3627_args@fn
  .short 198, 2 ; listenerCount
  .word jacdac_EventSource_listenerCount__P3628_args@fn
  .short 343, 2 ; subscribe
  .word jacdac_EventSource_subscribe__P3629_args@fn
  .word 0, 0 ; the end
        .object jacdac_OutPipe__C2988_VT
        .balign 4
jacdac_OutPipe__C2988_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_OutPipe__C2988_IfaceVT
        .short 66 ; class-id
        .short 0 ; reserved
        .word 1703617820 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_OutPipe__C2988_IfaceVT:
  .short 40, 38, 52, 90, 32, 30, 36, 58, 88, 62, 20, 42, 64, 14, 12, 10, 8, 6, 4, 2
  .short 210, 0 ; nextCnt
  .word 4
  .short 122, 0 ; deviceId
  .word 8
  .short 255, 0 ; port
  .word 12
  .short 143, 2 ; from
  .word jacdac_OutPipe_from__P5011_args@fn
  .short 281, 2 ; respondForEach
  .word jacdac_OutPipe_respondForEach__P2990_args@fn
  .short 367, 2 ; writeEx
  .word jacdac_OutPipe_writeEx__P5012_args@fn
  .short 365, 2 ; write
  .word jacdac_OutPipe_write__P2992_args@fn
  .short 366, 2 ; writeAndClose
  .word jacdac_OutPipe_writeAndClose__P2993_args@fn
  .short 107, 2 ; close
  .word jacdac_OutPipe_close__P2994_args@fn
  .word 0, 0 ; the end
        .object jacdac_AckAwaiter__C4937_VT
        .balign 4
jacdac_AckAwaiter__C4937_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_AckAwaiter__C4937_IfaceVT
        .short 67 ; class-id
        .short 0 ; reserved
        .word 1703617821 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_AckAwaiter__C4937_IfaceVT:
  .short 24, 54, 60, 18, 16, 38, 20, 26, 8, 6, 4, 2
  .short 212, 0 ; nextRetry
  .word 4
  .short 219, 0 ; numTries
  .word 8
  .short 113, 0 ; crc
  .word 12
  .short 138, 0 ; eventId
  .word 16
  .short 250, 0 ; pkt
  .word 20
  .short 331, 0 ; srcId
  .word 24
  .word 0, 0 ; the end
.balign 4
.object _pxt_iface_member_names
_pxt_iface_member_names:
    .word 370
    .word _str2451  ; 0 .
    .word _str2452  ; 1 ._active
    .word _str2453  ; 2 ._actualBrightness
    .word _str2454  ; 3 ._analog
    .word _str2455  ; 4 ._angle
    .word _str2456  ; 5 ._attach
    .word _str2457  ; 6 ._autoShow
    .word _str2458  ; 7 ._autoShowUnsub
    .word _str2459  ; 8 ._barGraphHigh
    .word _str2460  ; 9 ._barGraphHighLast
    .word _str2461  ; 10 ._brightness
    .word _str2462  ; 11 ._buttonsAvailable
    .word _str2463  ; 12 ._clicker
    .word _str2464  ; 13 ._clicksPerTurn
    .word _str2465  ; 14 ._continuousMode
    .word _str2466  ; 15 ._data
    .word _str2467  ; 16 ._destroy
    .word _str2468  ; 17 ._detach
    .word _str2469  ; 18 ._device
    .word _str2470  ; 19 ._dirty
    .word _str2471  ; 20 ._distanceError
    .word _str2472  ; 21 ._enabled
    .word _str2473  ; 22 ._eventCounter
    .word _str2474  ; 23 ._forcesError
    .word _str2475  ; 24 ._handled
    .word _str2476  ; 25 ._header
    .word _str2477  ; 26 ._holdDuration
    .word _str2478  ; 27 ._humidityError
    .word _str2479  ; 28 ._intensity
    .word _str2480  ; 29 ._lastListenerTime
    .word _str2481  ; 30 ._ledsPerPixel
    .word _str2482  ; 31 ._length
    .word _str2483  ; 32 ._lightLevelError
    .word _str2484  ; 33 ._localPixels
    .word _str2485  ; 34 ._localTime
    .word _str2486  ; 35 ._luminousIntensity
    .word _str2487  ; 36 ._maxAngle
    .word _str2488  ; 37 ._maxForce
    .word _str2489  ; 38 ._maxForcesSupported
    .word _str2490  ; 39 ._maxHumidity
    .word _str2491  ; 40 ._maxPower
    .word _str2492  ; 41 ._maxPressure
    .word _str2493  ; 42 ._maxPulse
    .word _str2494  ; 43 ._maxRange
    .word _str2495  ; 44 ._maxSwitchingCurrent
    .word _str2496  ; 45 ._maxTemperature
    .word _str2497  ; 46 ._minAngle
    .word _str2498  ; 47 ._minHumidity
    .word _str2499  ; 48 ._minPressure
    .word _str2500  ; 49 ._minPulse
    .word _str2501  ; 50 ._minRange
    .word _str2502  ; 51 ._minTemperature
    .word _str2503  ; 52 ._myDevice
    .word _str2504  ; 53 ._numColumns
    .word _str2505  ; 54 ._numPixels
    .word _str2506  ; 55 ._offset
    .word _str2507  ; 56 ._oldBindingsHash
    .word _str2508  ; 57 ._patterns
    .word _str2509  ; 58 ._pixels
    .word _str2510  ; 59 ._pressed
    .word _str2511  ; 60 ._pressureError
    .word _str2512  ; 61 ._reading
    .word _str2513  ; 62 ._refreshing
    .word _str2514  ; 63 ._registeredEvents
    .word _str2515  ; 64 ._responseSpeed
    .word _str2516  ; 65 ._role
    .word _str2517  ; 66 ._score
    .word _str2518  ; 67 ._sendCmd
    .word _str2519  ; 68 ._sendCmdId
    .word _str2520  ; 69 ._sendCore
    .word _str2521  ; 70 ._sendReport
    .word _str2522  ; 71 ._sendWithAck
    .word _str2523  ; 72 ._shortId
    .word _str2524  ; 73 ._stallTorque
    .word _str2525  ; 74 ._statusCode
    .word _str2526  ; 75 ._statusVendorCode
    .word _str2527  ; 76 ._streamingInterval
    .word _str2528  ; 77 ._streamingSamples
    .word _str2529  ; 78 ._temperatureError
    .word _str2530  ; 79 ._value
    .word _str2531  ; 80 ._variant
    .word _str2532  ; 81 ._waveLength
    .word _str2533  ; 82 .active
    .word _str2534  ; 83 .add
    .word _str2535  ; 84 .addListenerInternal
    .word _str2536  ; 85 .addRegister
    .word _str2537  ; 86 .addServer
    .word _str2538  ; 87 .advertisementData
    .word _str2539  ; 88 .allClients
    .word _str2540  ; 89 .announceCallback
    .word _str2541  ; 90 .announceflags
    .word _str2542  ; 91 .attachClient
    .word _str2543  ; 92 .autoBind
    .word _str2544  ; 93 .autoBindCnt
    .word _str2545  ; 94 .background
    .word _str2546  ; 95 .bindRoles
    .word _str2547  ; 96 .bindingHash
    .word _str2548  ; 97 .bindings
    .word _str2549  ; 98 .boundToDev
    .word _str2550  ; 99 .boundToServiceIdx
    .word _str2551  ; 100 .broadcast
    .word _str2552  ; 101 .c0
    .word _str2553  ; 102 .calibrate
    .word _str2554  ; 103 .checkChanges
    .word _str2555  ; 104 .checkSamples
    .word _str2556  ; 105 .clearAttachCache
    .word _str2557  ; 106 .clients
    .word _str2558  ; 107 .close
    .word _str2559  ; 108 .code
    .word _str2560  ; 109 .condition
    .word _str2561  ; 110 .config
    .word _str2562  ; 111 .constants
    .word _str2563  ; 112 .controlServer
    .word _str2564  ; 113 .crc
    .word _str2565  ; 114 .currentDuration
    .word _str2566  ; 115 .currentOctave
    .word _str2567  ; 116 .currentPos
    .word _str2568  ; 117 .data
    .word _str2569  ; 118 .destroy
    .word _str2570  ; 119 .destroyClient
    .word _str2571  ; 120 .detachClient
    .word _str2572  ; 121 .device
    .word _str2573  ; 122 .deviceId
    .word _str2574  ; 123 .deviceIdentifier
    .word _str2575  ; 124 .devices
    .word _str2576  ; 125 .digitalRead
    .word _str2577  ; 126 .digitalWrite
    .word _str2578  ; 127 .disableBrain
    .word _str2579  ; 128 .disableLogger
    .word _str2580  ; 129 .disableRoleManager
    .word _str2581  ; 130 .distance
    .word _str2582  ; 131 .div
    .word _str2583  ; 132 .doCalibrate
    .word _str2584  ; 133 .effect
    .word _str2585  ; 134 .eid
    .word _str2586  ; 135 .emit
    .word _str2587  ; 136 .eventCode
    .word _str2588  ; 137 .eventCounter
    .word _str2589  ; 138 .eventId
    .word _str2590  ; 139 .eventSource
    .word _str2591  ; 140 .flags
    .word _str2592  ; 141 .fmt
    .word _str2593  ; 142 .fp
    .word _str2594  ; 143 .from
    .word _str2595  ; 144 .fromBinary
    .word _str2596  ; 145 .fromFrameless
    .word _str2597  ; 146 .fullyBound
    .word _str2598  ; 147 .gcDevices
    .word _str2599  ; 148 .getNumber
    .word _str2600  ; 149 .handleCalibrateCommand
    .word _str2601  ; 150 .handleConnected
    .word _str2602  ; 151 .handleEvent
    .word _str2603  ; 152 .handleFloodPing
    .word _str2604  ; 153 .handleInstanceName
    .word _str2605  ; 154 .handleIntensity
    .word _str2606  ; 155 .handlePacket
    .word _str2607  ; 156 .handlePacketOuter
    .word _str2608  ; 157 .handleRegBool
    .word _str2609  ; 158 .handleRegFormat
    .word _str2610  ; 159 .handleRegValue
    .word _str2611  ; 160 .handleStatusCode
    .word _str2612  ; 161 .handleValue
    .word _str2613  ; 162 .handleVariant
    .word _str2614  ; 163 .handled
    .word _str2615  ; 164 .handler
    .word _str2616  ; 165 .hasListener
    .word _str2617  ; 166 .hasNextNote
    .word _str2618  ; 167 .hasService
    .word _str2619  ; 168 .hasValues
    .word _str2620  ; 169 .host
    .word _str2621  ; 170 .humidity
    .word _str2622  ; 171 .icon
    .word _str2623  ; 172 .instanceName
    .word _str2624  ; 173 .intData
    .word _str2625  ; 174 .intensity
    .word _str2626  ; 175 .intensityPackFormat
    .word _str2627  ; 176 .internalSetAngle
    .word _str2628  ; 177 .internalSetContinuous
    .word _str2629  ; 178 .interpolation
    .word _str2630  ; 179 .isArray
    .word _str2631  ; 180 .isBrain
    .word _str2632  ; 181 .isClient
    .word _str2633  ; 182 .isCommand
    .word _str2634  ; 183 .isConst
    .word _str2635  ; 184 .isEvent
    .word _str2636  ; 185 .isOptional
    .word _str2637  ; 186 .isRegGet
    .word _str2638  ; 187 .isRegSet
    .word _str2639  ; 188 .isReport
    .word _str2640  ; 189 .isStreaming
    .word _str2641  ; 190 .jdpacked
    .word _str2642  ; 191 .jdunpack
    .word _str2643  ; 192 .key
    .word _str2644  ; 193 .lastQuery
    .word _str2645  ; 194 .lastReport
    .word _str2646  ; 195 .lastSample
    .word _str2647  ; 196 .lastSeen
    .word _str2648  ; 197 .lightLevel
    .word _str2649  ; 198 .listenerCount
    .word _str2650  ; 199 .listeners
    .word _str2651  ; 200 .log
    .word _str2652  ; 201 .lookupQuery
    .word _str2653  ; 202 .markHandled
    .word _str2654  ; 203 .matchesRoleAt
    .word _str2655  ; 204 .maxAngle
    .word _str2656  ; 205 .melodyArray
    .word _str2657  ; 206 .minAngle
    .word _str2658  ; 207 .minPriority
    .word _str2659  ; 208 .mkEventCmd
    .word _str2660  ; 209 .multicommandClass
    .word _str2661  ; 210 .nextCnt
    .word _str2662  ; 211 .nextNote
    .word _str2663  ; 212 .nextRetry
    .word _str2664  ; 213 .nfmt
    .word _str2665  ; 214 .nfmt2
    .word _str2666  ; 215 .noWait
    .word _str2667  ; 216 .notImplemented
    .word _str2668  ; 217 .notes
    .word _str2669  ; 218 .numPixels
    .word _str2670  ; 219 .numTries
    .word _str2671  ; 220 .on
    .word _str2672  ; 221 .onClient
    .word _str2673  ; 222 .onControlEvent
    .word _str2674  ; 223 .onDistanceChangedBy
    .word _str2675  ; 224 .onDown
    .word _str2676  ; 225 .onFaceDown
    .word _str2677  ; 226 .onFaceUp
    .word _str2678  ; 227 .onHold
    .word _str2679  ; 228 .onHumidityChangedBy
    .word _str2680  ; 229 .onLightLevelChangedBy
    .word _str2681  ; 230 .onOff
    .word _str2682  ; 231 .onPositionChanged
    .word _str2683  ; 232 .onPositionChangedBy
    .word _str2684  ; 233 .onPressureChangedBy
    .word _str2685  ; 234 .onReadingChangedBy
    .word _str2686  ; 235 .onStateChanged
    .word _str2687  ; 236 .onStrengthChangedBy
    .word _str2688  ; 237 .onTemperatureChangedBy
    .word _str2689  ; 238 .onTiltDown
    .word _str2690  ; 239 .onTiltLeft
    .word _str2691  ; 240 .onTiltRight
    .word _str2692  ; 241 .onTiltUp
    .word _str2693  ; 242 .onUp
    .word _str2694  ; 243 .once
    .word _str2695  ; 244 .onlyHeader
    .word _str2696  ; 245 .packFormat
    .word _str2697  ; 246 .packetFlags
    .word _str2698  ; 247 .parent
    .word _str2699  ; 248 .parse
    .word _str2700  ; 249 .pauseUntilValues
    .word _str2701  ; 250 .pkt
    .word _str2702  ; 251 .pkts
    .word _str2703  ; 252 .play
    .word _str2704  ; 253 .playTone
    .word _str2705  ; 254 .playUntilDone
    .word _str2706  ; 255 .port
    .word _str2707  ; 256 .position
    .word _str2708  ; 257 .possiblyNotImplemented
    .word _str2709  ; 258 .pressure
    .word _str2710  ; 259 .processPacket
    .word _str2711  ; 260 .proxyMode
    .word _str2712  ; 261 .queries
    .word _str2713  ; 262 .query
    .word _str2714  ; 263 .queueAnnounce
    .word _str2715  ; 264 .raiseEvent
    .word _str2716  ; 265 .reading
    .word _str2717  ; 266 .readingDigitsPrecision
    .word _str2718  ; 267 .readingTimeout
    .word _str2719  ; 268 .reattach
    .word _str173  ; 269 .refresh
    .word _str2720  ; 270 .refreshLoop
    .word _str2721  ; 271 .reg
    .word _str2722  ; 272 .regCode
    .word _str2723  ; 273 .registerEvent
    .word _str2724  ; 274 .registers
    .word _str2725  ; 275 .removeListenerInternal
    .word _str2726  ; 276 .repeating
    .word _str2727  ; 277 .requiresAck
    .word _str2728  ; 278 .resend
    .word _str2729  ; 279 .reset
    .word _str2730  ; 280 .resetIn
    .word _str2731  ; 281 .respondForEach
    .word _str2732  ; 282 .restartCounter
    .word _str2733  ; 283 .role
    .word _str2734  ; 284 .roleName
    .word _str2735  ; 285 .roleQuery
    .word _str2736  ; 286 .rotate
    .word _str2737  ; 287 .running
    .word _str2738  ; 288 .samples
    .word _str2739  ; 289 .samplesExpiration
    .word _str2740  ; 290 .score
    .word _str2741  ; 291 .scoreFor
    .word _str2742  ; 292 .select
    .word _str2743  ; 293 .selfDevice
    .word _str2744  ; 294 .send
    .word _str2745  ; 295 .sendAsMultiCommand
    .word _str2746  ; 296 .sendChangeEvent
    .word _str2747  ; 297 .sendCommand
    .word _str2748  ; 298 .sendEvent
    .word _str2749  ; 299 .sendReport
    .word _str2750  ; 300 .sendSet
    .word _str2751  ; 301 .sendUptime
    .word _str2752  ; 302 .servers
    .word _str2753  ; 303 .service
    .word _str2754  ; 304 .serviceClass
    .word _str2755  ; 305 .serviceClassAt
    .word _str2756  ; 306 .serviceClassLength
    .word _str2757  ; 307 .serviceCommand
    .word _str2758  ; 308 .serviceIdx
    .word _str2759  ; 309 .serviceIndex
    .word _str2760  ; 310 .serviceIndexAtOffset
    .word _str2761  ; 311 .serviceOffset
    .word _str2762  ; 312 .serviceOffsetAt
    .word _str2763  ; 313 .services
    .word _str2764  ; 314 .setActive
    .word _str2765  ; 315 .setAngle
    .word _str2766  ; 316 .setBrightness
    .word _str2767  ; 317 .setDirty
    .word _str2768  ; 318 .setEnabled
    .word _str2769  ; 319 .setPatterns
    .word _str2770  ; 320 .setPixelColor
    .word _str2771  ; 321 .setPull
    .word _str2772  ; 322 .setReg
    .word _str2773  ; 323 .setRegBuffer
    .word _str2774  ; 324 .setStatusCode
    .word _str2775  ; 325 .setStreaming
    .word _str2776  ; 326 .shortId
    .word _str2777  ; 327 .show
    .word _str2778  ; 328 .showNumber
    .word _str2779  ; 329 .showString
    .word _str2780  ; 330 .size
    .word _str2781  ; 331 .srcId
    .word _str190  ; 332 .start
    .word _str2782  ; 333 .startAutoShow
    .word _str2783  ; 334 .startClient
    .word _str2784  ; 335 .startRefresh
    .word _str2785  ; 336 .startVolume
    .word _str222  ; 337 .started
    .word _str2786  ; 338 .stateUpdated
    .word _str2787  ; 339 .statusCode
    .word _str2788  ; 340 .stopAutoShow
    .word _str2789  ; 341 .stopped
    .word _str2790  ; 342 .strength
    .word _str2791  ; 343 .subscribe
    .word _str2792  ; 344 .subscribeRefresh
    .word _str2793  ; 345 .supressLog
    .word _str2794  ; 346 .systemActive
    .word _str2795  ; 347 .temperature
    .word _str2796  ; 348 .timeOut
    .word _str2797  ; 349 .timestamp
    .word _str2798  ; 350 .toString
    .word _str2799  ; 351 .tone
    .word _str2800  ; 352 .unattachedClients
    .word _str2801  ; 353 .updateQueue
    .word _str2802  ; 354 .updateSamples
    .word _str2803  ; 355 .value
    .word _str2804  ; 356 .valuePackFormat
    .word _str2805  ; 357 .values
    .word _str2806  ; 358 .variant
    .word _str2807  ; 359 .vibrate
    .word _str2808  ; 360 .vibrateMulti
    .word _str2809  ; 361 .vid
    .word _str2810  ; 362 .waveShape
    .word _str2811  ; 363 .withFrameStripped
    .word _str2812  ; 364 .word
    .word _str2813  ; 365 .write
    .word _str2814  ; 366 .writeAndClose
    .word _str2815  ; 367 .writeEx
    .word _str3  ; 368 .x
    .word _str2816  ; 369 .y
    .word 0
_vtables_end:
.balign 4
.object _pxt_config_data
_pxt_config_data:
    .word 0
.balign 4
_img7:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,0,255,255,255,0,255,0,255,0,255,0,0,255,0,0,0,0,255,0,0,0
.balign 4
_img8:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,255,255,0,0,0,255,255,0,0,255,0,255,0,255,0,0,0,255,0,0,0,0,0
.balign 4
_img9:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,0,0,0,255,0,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0
.balign 4
_img10:
 .short 0xffff
        .short 5, 5
        .byte 255,0,0,0,0,0,255,0,0,0,0,0,255,0,255,0,0,0,255,255,0,0,255,255,255,0
.balign 4
_img11:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,0,0,255,0,0,255,0,255,0,255,0,255,255,255,0,0,0,255,0,0,0
.balign 4
_img12:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,255,0,0,0,255,0,255,0,255,0,0,255,255,0,0,0,255,255,255,0,0,0
.balign 4
_img13:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,0,255,0,0,0,255,255,255,255,255,0,255,0,0,0,0,0,255,0,0,0
.balign 4
_img14:
 .short 0xffff
        .short 5, 5
        .byte 255,255,255,0,0,255,255,0,0,0,255,0,255,0,0,0,0,0,255,0,0,0,0,0,255,0
.balign 4
_img15:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
.balign 4
_img16:
 .short 0xffff
        .short 5, 5
        .byte 0,255,0,255,0,255,255,255,255,255,255,255,255,255,255,0,255,255,255,0,0,0,255,0,0,0
.balign 4
_img17:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,255,0,255,0,0,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0
.balign 4
_img18:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,255,0,255,0,0,0,0,0,0,255,0,0,0,255,0,255,255,255,0,0
.balign 4
_img19:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,255,0,255,0,0,0,0,0,0,0,255,255,255,0,255,0,0,0,255,0
.balign 4
_img20:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,255,0,255,0,0,0,0,0,0,0,255,0,255,0,255,0,255,0,255,0
.balign 4
_img21:
 .short 0xffff
        .short 5, 5
        .byte 255,0,0,0,255,0,255,0,255,0,0,0,0,0,0,255,255,255,255,255,255,0,255,0,255,0
.balign 4
_img22:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,255,255,0,255,255,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0
.balign 4
_img23:
 .short 0xffff
        .short 5, 5
        .byte 0,255,0,255,0,0,0,0,0,0,0,0,255,0,0,0,255,0,255,0,0,0,255,0,0,0
.balign 4
_img24:
 .short 0xffff
        .short 5, 5
        .byte 255,0,0,0,255,0,0,0,0,0,255,255,255,255,255,0,0,0,255,255,0,0,0,255,255,0
.balign 4
_img25:
 .short 0xffff
        .short 5, 5
        .byte 255,255,255,255,255,255,255,0,255,255,0,0,0,0,0,0,255,0,255,0,0,255,255,255,0,0
.balign 4
_img26:
 .short 0xffff
        .short 5, 5
        .byte 255,255,0,255,255,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0
.balign 4
_img27:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,255,0,255,0,0,0,255,0,0,0,0
.balign 4
_img28:
 .short 0xffff
        .short 5, 5
        .byte 255,0,0,0,255,0,255,0,255,0,0,0,255,0,0,0,255,0,255,0,255,0,0,0,255,0
.balign 4
_img29:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,0,255,0,0,0,255,0,255,0,255,255,255,255,255,0,0,0,0,0,0
.balign 4
_img30:
 .short 0xffff
        .short 5, 5
        .byte 255,0,0,0,0,255,255,0,0,0,255,0,255,0,0,255,0,0,255,0,255,255,255,255,255,0
.balign 4
_img31:
 .short 0xffff
        .short 5, 5
        .byte 0,255,0,255,0,255,0,255,0,255,0,255,0,255,0,255,0,255,0,255,0,255,0,255,0,0
.balign 4
_img32:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,0,255,0,255,0,255,0,0,0,255,0,255,0,255,0,0,0,255,0,0,0
.balign 4
_img33:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,0,255,0,0,0,255,0,255,0,0,0,255,0,0,0,0,0,0,0,0
.balign 4
_img34:
 .short 0xffff
        .short 5, 5
        .byte 255,255,255,255,255,255,0,0,0,255,255,0,0,0,255,255,0,0,0,255,255,255,255,255,255,0
.balign 4
_img35:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,255,255,255,0,0,255,0,255,0,0,255,255,255,0,0,0,0,0,0,0
.balign 4
_img36:
 .short 0xffff
        .short 5, 5
        .byte 255,255,0,0,255,255,255,0,255,0,0,0,255,0,0,255,255,0,255,0,255,255,0,0,255,0
.balign 4
_img37:
 .short 0xffff
        .short 5, 5
        .byte 255,255,0,255,255,255,255,255,255,255,0,255,255,255,0,0,255,255,255,0,0,255,255,255,0,0
.balign 4
_img38:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,255,255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,255,0,255,0,0
.balign 4
_img39:
 .short 0xffff
        .short 5, 5
        .byte 0,255,255,0,0,255,255,255,0,0,0,255,255,255,255,0,255,255,255,0,0,0,0,0,0,0
.balign 4
_img40:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,0,255,255,255,0,255,255,255,255,255,0,255,255,255,0,0,255,0,255,0,0
.balign 4
_img41:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,255,255,255,0,255,255,255,255,255,0,255,0,255,0,0,0,0,0,0,0
.balign 4
_img42:
 .short 0xffff
        .short 5, 5
        .byte 255,255,0,255,255,255,255,255,255,255,0,0,255,0,0,255,255,255,255,255,255,255,0,255,255,0
.balign 4
_img43:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,255,255,255,255,255,0,0,255,0,0,0,255,0,255,0,255,0,0,0,255,0
.balign 4
_img44:
 .short 0xffff
        .short 5, 5
        .byte 0,255,255,255,0,255,0,255,0,255,255,255,255,255,255,255,255,255,255,255,255,0,255,0,255,0
.balign 4
_img45:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,0,0,255,0,0,0,0,255,0,0,0,255,255,255,0,0,0,255,0,0,0
.balign 4
_img46:
 .short 0xffff
        .short 5, 5
        .byte 255,255,0,0,0,0,255,0,0,0,0,255,0,0,0,0,255,255,255,0,0,255,0,255,0,0
.balign 4
_img47:
 .short 0xffff
        .short 5, 5
        .byte 0,255,255,255,0,255,0,255,0,255,255,255,255,255,255,0,255,255,255,0,0,255,255,255,0,0
.balign 4
_img48:
 .short 0xffff
        .short 5, 5
        .byte 0,255,255,255,0,255,255,255,255,255,0,0,255,0,0,255,0,255,0,0,255,255,255,0,0,0
.balign 4
_img49:
 .short 0xffff
        .short 5, 5
        .byte 255,255,0,0,0,255,255,0,255,255,0,255,0,255,0,0,255,255,255,0,0,0,0,0,0,0
.balign 4
_img50:
 .short 0xffff
        .short 5, 5
        .byte 255,0,255,0,0,255,0,255,0,0,255,255,255,255,0,255,255,0,255,0,255,255,255,255,0,0
.balign 4
_img51:
 .short 0xffff
        .short 5, 5
        .byte 255,0,0,0,255,255,0,0,0,255,255,255,255,255,255,0,255,255,255,0,0,0,255,0,0,0
.balign 4
_img52:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,0,0,255,0,0,0,0,255,0,0,255,255,255,0,0,255,255,255,0,0,0
.balign 4
_img53:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,0,0,255,255,0,0,0,255,0,255,255,255,255,0,0,255,255,255,0,0,0
.balign 4
_img54:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,0,0,255,255,0,0,0,255,0,255,255,255,255,0,0,255,255,255,0,0,0
.balign 4
_img55:
 .short 0xffff
        .short 5, 5
        .byte 255,0,255,0,255,255,0,255,0,255,255,255,255,255,255,0,0,255,0,0,0,0,255,0,0,0
.balign 4
_img56:
 .short 0xffff
        .short 5, 5
        .byte 0,0,255,0,0,0,255,255,255,0,255,255,0,255,255,0,255,255,255,0,0,0,255,0,0,0
.balign 4
_img57:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
.balign 4
_img101:
 .short 0xffff
        .short 30, 5
        .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
.balign 4
_img242:
 .short 0xffff
        .short 5, 5
        .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
            .balign 4
            .object _str2451
_str2451:
 .word pxt::string_inline_ascii_vt
    .short 0
    .string ""
            .balign 4
            .object _str2452
_str2452:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_active"
            .balign 4
            .object _str2453
_str2453:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_actualBrightness"
            .balign 4
            .object _str2454
_str2454:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_analog"
            .balign 4
            .object _str2455
_str2455:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_angle"
            .balign 4
            .object _str2456
_str2456:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_attach"
            .balign 4
            .object _str2457
_str2457:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_autoShow"
            .balign 4
            .object _str2458
_str2458:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "_autoShowUnsub"
            .balign 4
            .object _str2459
_str2459:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "_barGraphHigh"
            .balign 4
            .object _str2460
_str2460:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_barGraphHighLast"
            .balign 4
            .object _str2461
_str2461:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "_brightness"
            .balign 4
            .object _str2462
_str2462:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_buttonsAvailable"
            .balign 4
            .object _str2463
_str2463:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_clicker"
            .balign 4
            .object _str2464
_str2464:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "_clicksPerTurn"
            .balign 4
            .object _str2465
_str2465:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "_continuousMode"
            .balign 4
            .object _str2466
_str2466:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_data"
            .balign 4
            .object _str2467
_str2467:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_destroy"
            .balign 4
            .object _str2468
_str2468:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_detach"
            .balign 4
            .object _str2469
_str2469:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_device"
            .balign 4
            .object _str2470
_str2470:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_dirty"
            .balign 4
            .object _str2471
_str2471:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "_distanceError"
            .balign 4
            .object _str2472
_str2472:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_enabled"
            .balign 4
            .object _str2473
_str2473:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "_eventCounter"
            .balign 4
            .object _str2474
_str2474:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_forcesError"
            .balign 4
            .object _str2475
_str2475:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_handled"
            .balign 4
            .object _str2476
_str2476:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_header"
            .balign 4
            .object _str2477
_str2477:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "_holdDuration"
            .balign 4
            .object _str2478
_str2478:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "_humidityError"
            .balign 4
            .object _str2479
_str2479:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_intensity"
            .balign 4
            .object _str2480
_str2480:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_lastListenerTime"
            .balign 4
            .object _str2481
_str2481:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "_ledsPerPixel"
            .balign 4
            .object _str2482
_str2482:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_length"
            .balign 4
            .object _str2483
_str2483:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "_lightLevelError"
            .balign 4
            .object _str2484
_str2484:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_localPixels"
            .balign 4
            .object _str2485
_str2485:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_localTime"
            .balign 4
            .object _str2486
_str2486:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "_luminousIntensity"
            .balign 4
            .object _str2487
_str2487:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_maxAngle"
            .balign 4
            .object _str2488
_str2488:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_maxForce"
            .balign 4
            .object _str2489
_str2489:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "_maxForcesSupported"
            .balign 4
            .object _str2490
_str2490:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_maxHumidity"
            .balign 4
            .object _str2491
_str2491:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_maxPower"
            .balign 4
            .object _str2492
_str2492:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_maxPressure"
            .balign 4
            .object _str2493
_str2493:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_maxPulse"
            .balign 4
            .object _str2494
_str2494:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_maxRange"
            .balign 4
            .object _str2495
_str2495:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "_maxSwitchingCurrent"
            .balign 4
            .object _str2496
_str2496:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "_maxTemperature"
            .balign 4
            .object _str2497
_str2497:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_minAngle"
            .balign 4
            .object _str2498
_str2498:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_minHumidity"
            .balign 4
            .object _str2499
_str2499:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_minPressure"
            .balign 4
            .object _str2500
_str2500:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_minPulse"
            .balign 4
            .object _str2501
_str2501:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_minRange"
            .balign 4
            .object _str2502
_str2502:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "_minTemperature"
            .balign 4
            .object _str2503
_str2503:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_myDevice"
            .balign 4
            .object _str2504
_str2504:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "_numColumns"
            .balign 4
            .object _str2505
_str2505:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_numPixels"
            .balign 4
            .object _str2506
_str2506:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_offset"
            .balign 4
            .object _str2507
_str2507:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "_oldBindingsHash"
            .balign 4
            .object _str2508
_str2508:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_patterns"
            .balign 4
            .object _str2509
_str2509:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_pixels"
            .balign 4
            .object _str2510
_str2510:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_pressed"
            .balign 4
            .object _str2511
_str2511:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "_pressureError"
            .balign 4
            .object _str2512
_str2512:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_reading"
            .balign 4
            .object _str2513
_str2513:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "_refreshing"
            .balign 4
            .object _str2514
_str2514:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_registeredEvents"
            .balign 4
            .object _str2515
_str2515:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "_responseSpeed"
            .balign 4
            .object _str2516
_str2516:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_role"
            .balign 4
            .object _str2517
_str2517:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_score"
            .balign 4
            .object _str2518
_str2518:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_sendCmd"
            .balign 4
            .object _str2519
_str2519:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_sendCmdId"
            .balign 4
            .object _str2520
_str2520:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_sendCore"
            .balign 4
            .object _str2521
_str2521:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "_sendReport"
            .balign 4
            .object _str2522
_str2522:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_sendWithAck"
            .balign 4
            .object _str2523
_str2523:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_shortId"
            .balign 4
            .object _str2524
_str2524:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_stallTorque"
            .balign 4
            .object _str2525
_str2525:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "_statusCode"
            .balign 4
            .object _str2526
_str2526:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_statusVendorCode"
            .balign 4
            .object _str2527
_str2527:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "_streamingInterval"
            .balign 4
            .object _str2528
_str2528:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_streamingSamples"
            .balign 4
            .object _str2529
_str2529:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_temperatureError"
            .balign 4
            .object _str2530
_str2530:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_value"
            .balign 4
            .object _str2531
_str2531:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_variant"
            .balign 4
            .object _str2532
_str2532:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "_waveLength"
            .balign 4
            .object _str2533
_str2533:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "active"
            .balign 4
            .object _str2534
_str2534:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "add"
            .balign 4
            .object _str2535
_str2535:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "addListenerInternal"
            .balign 4
            .object _str2536
_str2536:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "addRegister"
            .balign 4
            .object _str2537
_str2537:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "addServer"
            .balign 4
            .object _str2538
_str2538:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "advertisementData"
            .balign 4
            .object _str2539
_str2539:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "allClients"
            .balign 4
            .object _str2540
_str2540:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "announceCallback"
            .balign 4
            .object _str2541
_str2541:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "announceflags"
            .balign 4
            .object _str2542
_str2542:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "attachClient"
            .balign 4
            .object _str2543
_str2543:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "autoBind"
            .balign 4
            .object _str2544
_str2544:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "autoBindCnt"
            .balign 4
            .object _str2545
_str2545:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "background"
            .balign 4
            .object _str2546
_str2546:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "bindRoles"
            .balign 4
            .object _str2547
_str2547:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "bindingHash"
            .balign 4
            .object _str2548
_str2548:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "bindings"
            .balign 4
            .object _str2549
_str2549:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "boundToDev"
            .balign 4
            .object _str2550
_str2550:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "boundToServiceIdx"
            .balign 4
            .object _str2551
_str2551:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "broadcast"
            .balign 4
            .object _str2552
_str2552:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "c0"
            .balign 4
            .object _str2553
_str2553:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "calibrate"
            .balign 4
            .object _str2554
_str2554:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "checkChanges"
            .balign 4
            .object _str2555
_str2555:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "checkSamples"
            .balign 4
            .object _str2556
_str2556:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "clearAttachCache"
            .balign 4
            .object _str2557
_str2557:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "clients"
            .balign 4
            .object _str2558
_str2558:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "close"
            .balign 4
            .object _str2559
_str2559:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "code"
            .balign 4
            .object _str2560
_str2560:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "condition"
            .balign 4
            .object _str2561
_str2561:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "config"
            .balign 4
            .object _str2562
_str2562:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "constants"
            .balign 4
            .object _str2563
_str2563:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "controlServer"
            .balign 4
            .object _str2564
_str2564:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "crc"
            .balign 4
            .object _str2565
_str2565:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "currentDuration"
            .balign 4
            .object _str2566
_str2566:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "currentOctave"
            .balign 4
            .object _str2567
_str2567:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "currentPos"
            .balign 4
            .object _str2568
_str2568:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "data"
            .balign 4
            .object _str2569
_str2569:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "destroy"
            .balign 4
            .object _str2570
_str2570:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "destroyClient"
            .balign 4
            .object _str2571
_str2571:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "detachClient"
            .balign 4
            .object _str2572
_str2572:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "device"
            .balign 4
            .object _str2573
_str2573:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "deviceId"
            .balign 4
            .object _str2574
_str2574:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "deviceIdentifier"
            .balign 4
            .object _str2575
_str2575:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "devices"
            .balign 4
            .object _str2576
_str2576:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "digitalRead"
            .balign 4
            .object _str2577
_str2577:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "digitalWrite"
            .balign 4
            .object _str2578
_str2578:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "disableBrain"
            .balign 4
            .object _str2579
_str2579:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "disableLogger"
            .balign 4
            .object _str2580
_str2580:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "disableRoleManager"
            .balign 4
            .object _str2581
_str2581:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "distance"
            .balign 4
            .object _str2582
_str2582:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "div"
            .balign 4
            .object _str2583
_str2583:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "doCalibrate"
            .balign 4
            .object _str2584
_str2584:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "effect"
            .balign 4
            .object _str2585
_str2585:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "eid"
            .balign 4
            .object _str2586
_str2586:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "emit"
            .balign 4
            .object _str2587
_str2587:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "eventCode"
            .balign 4
            .object _str2588
_str2588:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "eventCounter"
            .balign 4
            .object _str2589
_str2589:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "eventId"
            .balign 4
            .object _str2590
_str2590:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "eventSource"
            .balign 4
            .object _str2591
_str2591:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "flags"
            .balign 4
            .object _str2592
_str2592:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "fmt"
            .balign 4
            .object _str2593
_str2593:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "fp"
            .balign 4
            .object _str2594
_str2594:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "from"
            .balign 4
            .object _str2595
_str2595:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "fromBinary"
            .balign 4
            .object _str2596
_str2596:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "fromFrameless"
            .balign 4
            .object _str2597
_str2597:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "fullyBound"
            .balign 4
            .object _str2598
_str2598:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "gcDevices"
            .balign 4
            .object _str2599
_str2599:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "getNumber"
            .balign 4
            .object _str2600
_str2600:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "handleCalibrateCommand"
            .balign 4
            .object _str2601
_str2601:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "handleConnected"
            .balign 4
            .object _str2602
_str2602:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "handleEvent"
            .balign 4
            .object _str2603
_str2603:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "handleFloodPing"
            .balign 4
            .object _str2604
_str2604:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "handleInstanceName"
            .balign 4
            .object _str2605
_str2605:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "handleIntensity"
            .balign 4
            .object _str2606
_str2606:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "handlePacket"
            .balign 4
            .object _str2607
_str2607:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "handlePacketOuter"
            .balign 4
            .object _str2608
_str2608:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "handleRegBool"
            .balign 4
            .object _str2609
_str2609:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "handleRegFormat"
            .balign 4
            .object _str2610
_str2610:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "handleRegValue"
            .balign 4
            .object _str2611
_str2611:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "handleStatusCode"
            .balign 4
            .object _str2612
_str2612:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "handleValue"
            .balign 4
            .object _str2613
_str2613:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "handleVariant"
            .balign 4
            .object _str2614
_str2614:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "handled"
            .balign 4
            .object _str2615
_str2615:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "handler"
            .balign 4
            .object _str2616
_str2616:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "hasListener"
            .balign 4
            .object _str2617
_str2617:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "hasNextNote"
            .balign 4
            .object _str2618
_str2618:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "hasService"
            .balign 4
            .object _str2619
_str2619:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "hasValues"
            .balign 4
            .object _str2620
_str2620:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "host"
            .balign 4
            .object _str2621
_str2621:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "humidity"
            .balign 4
            .object _str2622
_str2622:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "icon"
            .balign 4
            .object _str2623
_str2623:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "instanceName"
            .balign 4
            .object _str2624
_str2624:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "intData"
            .balign 4
            .object _str2625
_str2625:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "intensity"
            .balign 4
            .object _str2626
_str2626:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "intensityPackFormat"
            .balign 4
            .object _str2627
_str2627:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "internalSetAngle"
            .balign 4
            .object _str2628
_str2628:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "internalSetContinuous"
            .balign 4
            .object _str2629
_str2629:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "interpolation"
            .balign 4
            .object _str2630
_str2630:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "isArray"
            .balign 4
            .object _str2631
_str2631:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "isBrain"
            .balign 4
            .object _str2632
_str2632:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isClient"
            .balign 4
            .object _str2633
_str2633:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "isCommand"
            .balign 4
            .object _str2634
_str2634:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "isConst"
            .balign 4
            .object _str2635
_str2635:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "isEvent"
            .balign 4
            .object _str2636
_str2636:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "isOptional"
            .balign 4
            .object _str2637
_str2637:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isRegGet"
            .balign 4
            .object _str2638
_str2638:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isRegSet"
            .balign 4
            .object _str2639
_str2639:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isReport"
            .balign 4
            .object _str2640
_str2640:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "isStreaming"
            .balign 4
            .object _str2641
_str2641:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "jdpacked"
            .balign 4
            .object _str2642
_str2642:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "jdunpack"
            .balign 4
            .object _str2643
_str2643:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "key"
            .balign 4
            .object _str2644
_str2644:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "lastQuery"
            .balign 4
            .object _str2645
_str2645:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "lastReport"
            .balign 4
            .object _str2646
_str2646:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "lastSample"
            .balign 4
            .object _str2647
_str2647:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "lastSeen"
            .balign 4
            .object _str2648
_str2648:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "lightLevel"
            .balign 4
            .object _str2649
_str2649:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "listenerCount"
            .balign 4
            .object _str2650
_str2650:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "listeners"
            .balign 4
            .object _str2651
_str2651:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "log"
            .balign 4
            .object _str2652
_str2652:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "lookupQuery"
            .balign 4
            .object _str2653
_str2653:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "markHandled"
            .balign 4
            .object _str2654
_str2654:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "matchesRoleAt"
            .balign 4
            .object _str2655
_str2655:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "maxAngle"
            .balign 4
            .object _str2656
_str2656:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "melodyArray"
            .balign 4
            .object _str2657
_str2657:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "minAngle"
            .balign 4
            .object _str2658
_str2658:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "minPriority"
            .balign 4
            .object _str2659
_str2659:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "mkEventCmd"
            .balign 4
            .object _str2660
_str2660:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "multicommandClass"
            .balign 4
            .object _str2661
_str2661:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "nextCnt"
            .balign 4
            .object _str2662
_str2662:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "nextNote"
            .balign 4
            .object _str2663
_str2663:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "nextRetry"
            .balign 4
            .object _str2664
_str2664:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "nfmt"
            .balign 4
            .object _str2665
_str2665:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "nfmt2"
            .balign 4
            .object _str2666
_str2666:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "noWait"
            .balign 4
            .object _str2667
_str2667:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "notImplemented"
            .balign 4
            .object _str2668
_str2668:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "notes"
            .balign 4
            .object _str2669
_str2669:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "numPixels"
            .balign 4
            .object _str2670
_str2670:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "numTries"
            .balign 4
            .object _str2671
_str2671:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "on"
            .balign 4
            .object _str2672
_str2672:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "onClient"
            .balign 4
            .object _str2673
_str2673:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "onControlEvent"
            .balign 4
            .object _str2674
_str2674:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "onDistanceChangedBy"
            .balign 4
            .object _str2675
_str2675:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "onDown"
            .balign 4
            .object _str2676
_str2676:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "onFaceDown"
            .balign 4
            .object _str2677
_str2677:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "onFaceUp"
            .balign 4
            .object _str2678
_str2678:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "onHold"
            .balign 4
            .object _str2679
_str2679:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "onHumidityChangedBy"
            .balign 4
            .object _str2680
_str2680:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "onLightLevelChangedBy"
            .balign 4
            .object _str2681
_str2681:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "onOff"
            .balign 4
            .object _str2682
_str2682:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "onPositionChanged"
            .balign 4
            .object _str2683
_str2683:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "onPositionChangedBy"
            .balign 4
            .object _str2684
_str2684:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "onPressureChangedBy"
            .balign 4
            .object _str2685
_str2685:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "onReadingChangedBy"
            .balign 4
            .object _str2686
_str2686:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "onStateChanged"
            .balign 4
            .object _str2687
_str2687:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "onStrengthChangedBy"
            .balign 4
            .object _str2688
_str2688:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "onTemperatureChangedBy"
            .balign 4
            .object _str2689
_str2689:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "onTiltDown"
            .balign 4
            .object _str2690
_str2690:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "onTiltLeft"
            .balign 4
            .object _str2691
_str2691:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "onTiltRight"
            .balign 4
            .object _str2692
_str2692:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "onTiltUp"
            .balign 4
            .object _str2693
_str2693:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "onUp"
            .balign 4
            .object _str2694
_str2694:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "once"
            .balign 4
            .object _str2695
_str2695:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "onlyHeader"
            .balign 4
            .object _str2696
_str2696:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "packFormat"
            .balign 4
            .object _str2697
_str2697:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "packetFlags"
            .balign 4
            .object _str2698
_str2698:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "parent"
            .balign 4
            .object _str2699
_str2699:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "parse"
            .balign 4
            .object _str2700
_str2700:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "pauseUntilValues"
            .balign 4
            .object _str2701
_str2701:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "pkt"
            .balign 4
            .object _str2702
_str2702:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "pkts"
            .balign 4
            .object _str2703
_str2703:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "play"
            .balign 4
            .object _str2704
_str2704:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "playTone"
            .balign 4
            .object _str2705
_str2705:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "playUntilDone"
            .balign 4
            .object _str2706
_str2706:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "port"
            .balign 4
            .object _str2707
_str2707:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "position"
            .balign 4
            .object _str2708
_str2708:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "possiblyNotImplemented"
            .balign 4
            .object _str2709
_str2709:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "pressure"
            .balign 4
            .object _str2710
_str2710:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "processPacket"
            .balign 4
            .object _str2711
_str2711:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "proxyMode"
            .balign 4
            .object _str2712
_str2712:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "queries"
            .balign 4
            .object _str2713
_str2713:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "query"
            .balign 4
            .object _str2714
_str2714:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "queueAnnounce"
            .balign 4
            .object _str2715
_str2715:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "raiseEvent"
            .balign 4
            .object _str2716
_str2716:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "reading"
            .balign 4
            .object _str2717
_str2717:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "readingDigitsPrecision"
            .balign 4
            .object _str2718
_str2718:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "readingTimeout"
            .balign 4
            .object _str2719
_str2719:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "reattach"
            .balign 4
            .object _str173
_str173:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "refresh"
            .balign 4
            .object _str2720
_str2720:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "refreshLoop"
            .balign 4
            .object _str2721
_str2721:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "reg"
            .balign 4
            .object _str2722
_str2722:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "regCode"
            .balign 4
            .object _str2723
_str2723:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "registerEvent"
            .balign 4
            .object _str2724
_str2724:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "registers"
            .balign 4
            .object _str2725
_str2725:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "removeListenerInternal"
            .balign 4
            .object _str2726
_str2726:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "repeating"
            .balign 4
            .object _str2727
_str2727:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "requiresAck"
            .balign 4
            .object _str2728
_str2728:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "resend"
            .balign 4
            .object _str2729
_str2729:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "reset"
            .balign 4
            .object _str2730
_str2730:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "resetIn"
            .balign 4
            .object _str2731
_str2731:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "respondForEach"
            .balign 4
            .object _str2732
_str2732:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "restartCounter"
            .balign 4
            .object _str2733
_str2733:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "role"
            .balign 4
            .object _str2734
_str2734:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "roleName"
            .balign 4
            .object _str2735
_str2735:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "roleQuery"
            .balign 4
            .object _str2736
_str2736:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "rotate"
            .balign 4
            .object _str2737
_str2737:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "running"
            .balign 4
            .object _str2738
_str2738:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "samples"
            .balign 4
            .object _str2739
_str2739:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "samplesExpiration"
            .balign 4
            .object _str2740
_str2740:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "score"
            .balign 4
            .object _str2741
_str2741:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "scoreFor"
            .balign 4
            .object _str2742
_str2742:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "select"
            .balign 4
            .object _str2743
_str2743:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "selfDevice"
            .balign 4
            .object _str2744
_str2744:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "send"
            .balign 4
            .object _str2745
_str2745:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "sendAsMultiCommand"
            .balign 4
            .object _str2746
_str2746:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "sendChangeEvent"
            .balign 4
            .object _str2747
_str2747:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "sendCommand"
            .balign 4
            .object _str2748
_str2748:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "sendEvent"
            .balign 4
            .object _str2749
_str2749:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "sendReport"
            .balign 4
            .object _str2750
_str2750:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "sendSet"
            .balign 4
            .object _str2751
_str2751:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "sendUptime"
            .balign 4
            .object _str2752
_str2752:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "servers"
            .balign 4
            .object _str2753
_str2753:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "service"
            .balign 4
            .object _str2754
_str2754:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "serviceClass"
            .balign 4
            .object _str2755
_str2755:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "serviceClassAt"
            .balign 4
            .object _str2756
_str2756:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "serviceClassLength"
            .balign 4
            .object _str2757
_str2757:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "serviceCommand"
            .balign 4
            .object _str2758
_str2758:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "serviceIdx"
            .balign 4
            .object _str2759
_str2759:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "serviceIndex"
            .balign 4
            .object _str2760
_str2760:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "serviceIndexAtOffset"
            .balign 4
            .object _str2761
_str2761:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "serviceOffset"
            .balign 4
            .object _str2762
_str2762:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "serviceOffsetAt"
            .balign 4
            .object _str2763
_str2763:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "services"
            .balign 4
            .object _str2764
_str2764:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "setActive"
            .balign 4
            .object _str2765
_str2765:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setAngle"
            .balign 4
            .object _str2766
_str2766:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "setBrightness"
            .balign 4
            .object _str2767
_str2767:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setDirty"
            .balign 4
            .object _str2768
_str2768:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "setEnabled"
            .balign 4
            .object _str2769
_str2769:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "setPatterns"
            .balign 4
            .object _str2770
_str2770:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "setPixelColor"
            .balign 4
            .object _str2771
_str2771:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setPull"
            .balign 4
            .object _str2772
_str2772:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "setReg"
            .balign 4
            .object _str2773
_str2773:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "setRegBuffer"
            .balign 4
            .object _str2774
_str2774:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "setStatusCode"
            .balign 4
            .object _str2775
_str2775:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "setStreaming"
            .balign 4
            .object _str2776
_str2776:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "shortId"
            .balign 4
            .object _str2777
_str2777:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "show"
            .balign 4
            .object _str2778
_str2778:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "showNumber"
            .balign 4
            .object _str2779
_str2779:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "showString"
            .balign 4
            .object _str2780
_str2780:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "size"
            .balign 4
            .object _str2781
_str2781:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "srcId"
            .balign 4
            .object _str190
_str190:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "start"
            .balign 4
            .object _str2782
_str2782:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "startAutoShow"
            .balign 4
            .object _str2783
_str2783:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "startClient"
            .balign 4
            .object _str2784
_str2784:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "startRefresh"
            .balign 4
            .object _str2785
_str2785:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "startVolume"
            .balign 4
            .object _str222
_str222:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "started"
            .balign 4
            .object _str2786
_str2786:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "stateUpdated"
            .balign 4
            .object _str2787
_str2787:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "statusCode"
            .balign 4
            .object _str2788
_str2788:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "stopAutoShow"
            .balign 4
            .object _str2789
_str2789:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "stopped"
            .balign 4
            .object _str2790
_str2790:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "strength"
            .balign 4
            .object _str2791
_str2791:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "subscribe"
            .balign 4
            .object _str2792
_str2792:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "subscribeRefresh"
            .balign 4
            .object _str2793
_str2793:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "supressLog"
            .balign 4
            .object _str2794
_str2794:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "systemActive"
            .balign 4
            .object _str2795
_str2795:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "temperature"
            .balign 4
            .object _str2796
_str2796:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "timeOut"
            .balign 4
            .object _str2797
_str2797:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "timestamp"
            .balign 4
            .object _str2798
_str2798:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "toString"
            .balign 4
            .object _str2799
_str2799:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "tone"
            .balign 4
            .object _str2800
_str2800:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "unattachedClients"
            .balign 4
            .object _str2801
_str2801:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "updateQueue"
            .balign 4
            .object _str2802
_str2802:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "updateSamples"
            .balign 4
            .object _str2803
_str2803:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "value"
            .balign 4
            .object _str2804
_str2804:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "valuePackFormat"
            .balign 4
            .object _str2805
_str2805:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "values"
            .balign 4
            .object _str2806
_str2806:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "variant"
            .balign 4
            .object _str2807
_str2807:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "vibrate"
            .balign 4
            .object _str2808
_str2808:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "vibrateMulti"
            .balign 4
            .object _str2809
_str2809:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "vid"
            .balign 4
            .object _str2810
_str2810:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "waveShape"
            .balign 4
            .object _str2811
_str2811:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "withFrameStripped"
            .balign 4
            .object _str2812
_str2812:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "word"
            .balign 4
            .object _str2813
_str2813:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "write"
            .balign 4
            .object _str2814
_str2814:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "writeAndClose"
            .balign 4
            .object _str2815
_str2815:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "writeEx"
            .balign 4
            .object _str3
_str3:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "x"
            .balign 4
            .object _str2816
_str2816:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "y"
            .balign 4
            .object _str2
_str2:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "0"
            .balign 4
            .object _str0
_str0:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "-"
            .balign 4
            .object _str1
_str1:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "+"
            .balign 4
            .object _str4
_str4:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "X"
            .balign 4
            .object _str5
_str5:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ","
            .balign 4
            .object _str6
_str6:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "?"
            .balign 4
            .object _str58
_str58:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "\n"
            .balign 4
            .object _str59
_str59:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string ": "
            .balign 4
            .object _str60
_str60:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "string"
            .balign 4
            .object _str61
_str61:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "number"
            .balign 4
            .object _str62
_str62:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "..."
            .balign 4
            .object _str63
_str63:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "[object Object]"
            .balign 4
            .object _str64
_str64:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "[Object]"
            .balign 4
            .object _str65
_str65:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "{"
            .balign 4
            .object _str66
_str66:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "\n    "
            .balign 4
            .object _str67
_str67:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "\n    ..."
            .balign 4
            .object _str68
_str68:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "\n}"
            .balign 4
            .object _str72
_str72:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "c"
            .balign 4
            .object _str73
_str73:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "C"
            .balign 4
            .object _str74
_str74:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "d"
            .balign 4
            .object _str75
_str75:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "D"
            .balign 4
            .object _str76
_str76:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "e"
            .balign 4
            .object _str77
_str77:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "E"
            .balign 4
            .object _str78
_str78:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "f"
            .balign 4
            .object _str79
_str79:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "F"
            .balign 4
            .object _str80
_str80:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "g"
            .balign 4
            .object _str81
_str81:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "G"
            .balign 4
            .object _str82
_str82:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "a"
            .balign 4
            .object _str83
_str83:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "A"
            .balign 4
            .object _str84
_str84:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "B"
            .balign 4
            .object _str85
_str85:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "r"
            .balign 4
            .object _str86
_str86:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "R"
            .balign 4
            .object _str87
_str87:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "#"
            .balign 4
            .object _str88
_str88:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "b"
            .balign 4
            .object _str89
_str89:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ":"
            .balign 4
            .object _str90
_str90:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "0123456789abcdef"
            .balign 4
            .object _str91
_str91:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "Invalid hex"
            .balign 4
            .object _str92
_str92:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "Oops"
            .balign 4
            .object _str93
_str93:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "happy"
            .balign 4
            .object _str94
_str94:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "sad"
            .balign 4
            .object _str95
_str95:
 .word pxt::string_inline_ascii_vt
    .short 72
    .string "000000000000000000000000000000000000000000000000000000000000000000000000"
            .balign 4
            .object _str96
_str96:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "#run"
            .balign 4
            .object _str97
_str97:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "#scope"
            .balign 4
            .object _str99
_str99:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "sim"
            .balign 4
            .object _str100
_str100:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "2.0"
            .balign 4
            .object _str102
_str102:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "jacdac: dongle started"
            .balign 4
            .object _str103
_str103:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "0x"
            .balign 4
            .object _str104
_str104:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "serviceIndex not set"
            .balign 4
            .object _str105
_str105:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "packet data too big"
            .balign 4
            .object _str106
_str106:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string " "
            .balign 4
            .object _str107
_str107:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "["
            .balign 4
            .object _str108
_str108:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "]: "
            .balign 4
            .object _str109
_str109:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string " crc="
            .balign 4
            .object _str110
_str110:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string ", flags="
            .balign 4
            .object _str111
_str111:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string ", sz="
            .balign 4
            .object _str112
_str112:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "packet size mismatch"
            .balign 4
            .object _str114
_str114:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "u8"
            .balign 4
            .object _str115
_str115:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "u16"
            .balign 4
            .object _str116
_str116:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "u32"
            .balign 4
            .object _str117
_str117:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "i8"
            .balign 4
            .object _str118
_str118:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "i16"
            .balign 4
            .object _str119
_str119:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "i32"
            .balign 4
            .object _str120
_str120:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "f32"
            .balign 4
            .object _str121
_str121:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "f64"
            .balign 4
            .object _str122
_str122:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "."
            .balign 4
            .object _str123
_str123:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "u64"
            .balign 4
            .object _str124
_str124:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "i64"
            .balign 4
            .object _str125
_str125:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "invalid format: "
            .balign 4
            .object _str127
_str127:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "whoops"
            .balign 4
            .object _str128
_str128:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "expecting number, got "
            .balign 4
            .object _str129
_str129:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "\x00"
            .balign 4
            .object _str130
_str130:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "unexpected string"
            .balign 4
            .object _str131
_str131:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "object"
            .balign 4
            .object _str132
_str132:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "unexpected buffer"
            .balign 4
            .object _str133
_str133:
 .word pxt::string_inline_ascii_vt
    .short 26
    .string "expecting string or buffer"
            .balign 4
            .object _str134
_str134:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "format too short"
            .balign 4
            .object _str137
_str137:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "b[8] u16"
            .balign 4
            .object _str138
_str138:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "out pipe error: no ack"
            .balign 4
            .object _str139
_str139:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "u16 u16"
            .balign 4
            .object _str140
_str140:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "s"
            .balign 4
            .object _str141
_str141:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "#jdr:"
            .balign 4
            .object _str142
_str142:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "role: set "
            .balign 4
            .object _str143
_str143:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string " -> "
            .balign 4
            .object _str144
_str144:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "role: clear binding "
            .balign 4
            .object _str145
_str145:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "/"
            .balign 4
            .object _str146
_str146:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "bind srvo: "
            .balign 4
            .object _str147
_str147:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "bind order: "
            .balign 4
            .object _str148
_str148:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "b[8] u32 u8 s"
            .balign 4
            .object _str149
_str149:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "self"
            .balign 4
            .object _str150
_str150:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "autobind: devs:"
            .balign 4
            .object _str151
_str151:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string ", clients:"
            .balign 4
            .object _str152
_str152:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string ", unbound:"
            .balign 4
            .object _str153
_str153:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "found "
            .balign 4
            .object _str154
_str154:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string " servers"
            .balign 4
            .object _str155
_str155:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "binding "
            .balign 4
            .object _str156
_str156:
 .word pxt::string_inline_ascii_vt
    .short 23
    .string "roles: bindings changed"
            .balign 4
            .object _str157
_str157:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "change"
            .balign 4
            .object _str158
_str158:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "connect"
            .balign 4
            .object _str159
_str159:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "disconnect"
            .balign 4
            .object _str160
_str160:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "deviceConnect"
            .balign 4
            .object _str161
_str161:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "deviceDisconnect"
            .balign 4
            .object _str162
_str162:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "deviceChange"
            .balign 4
            .object _str163
_str163:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "deviceAnnounce"
            .balign 4
            .object _str164
_str164:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "selfAnnounce"
            .balign 4
            .object _str165
_str165:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "packetProcess"
            .balign 4
            .object _str166
_str166:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "reportReceive"
            .balign 4
            .object _str167
_str167:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "reportUpdate"
            .balign 4
            .object _str168
_str168:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "restart"
            .balign 4
            .object _str169
_str169:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "packetReceive"
            .balign 4
            .object _str170
_str170:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "packetEvent"
            .balign 4
            .object _str171
_str171:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "statusEvent"
            .balign 4
            .object _str172
_str172:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "identify"
            .balign 4
            .object _str174
_str174:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "invalid evcode"
            .balign 4
            .object _str175
_str175:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "roles: attaching to "
            .balign 4
            .object _str176
_str176:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "; cl="
            .balign 4
            .object _str177
_str177:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "rebound "
            .balign 4
            .object _str178
_str178:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "all clients attached"
            .balign 4
            .object _str179
_str179:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "reattach: "
            .balign 4
            .object _str180
_str180:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "success"
            .balign 4
            .object _str181
_str181:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "device "
            .balign 4
            .object _str182
_str182:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string " resetted ("
            .balign 4
            .object _str183
_str183:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string " > "
            .balign 4
            .object _str184
_str184:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ")"
            .balign 4
            .object _str185
_str185:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string " new proxy"
            .balign 4
            .object _str186
_str186:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "jd: "
            .balign 4
            .object _str187
_str187:
 .word pxt::string_inline_ascii_vt
    .short 26
    .string "invalid intensity register"
            .balign 4
            .object _str188
_str188:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "invalid value register"
            .balign 4
            .object _str189
_str189:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "server:"
            .balign 4
            .object _str191
_str191:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "]"
            .balign 4
            .object _str192
_str192:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ">"
            .balign 4
            .object _str193
_str193:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "&"
            .balign 4
            .object _str194
_str194:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "="
            .balign 4
            .object _str195
_str195:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "dev"
            .balign 4
            .object _str196
_str196:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "srvi"
            .balign 4
            .object _str197
_str197:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "srvo"
            .balign 4
            .object _str198
_str198:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "no role"
            .balign 4
            .object _str199
_str199:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "invalid attach"
            .balign 4
            .object _str200
_str200:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "role: +\xa0"
            .balign 4
            .object _str201
_str201:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "roles: - "
            .balign 4
            .object _str202
_str202:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "invalid detach"
            .balign 4
            .object _str203
_str203:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "role: match "
            .balign 4
            .object _str204
_str204:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string " (precise:)"
            .balign 4
            .object _str205
_str205:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string " (dev+srvi)"
            .balign 4
            .object _str206
_str206:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string " (dev+srvo)"
            .balign 4
            .object _str207
_str207:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string " (dev+!srv)"
            .balign 4
            .object _str208
_str208:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "destroy "
            .balign 4
            .object _str209
_str209:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "u32 u32 u8"
            .balign 4
            .object _str210
_str210:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "reset requested"
            .balign 4
            .object _str211
_str211:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "flood"
            .balign 4
            .object _str212
_str212:
 .word pxt::string_inline_ascii_vt
    .short 24
    .string "enabling power fault pin"
            .balign 4
            .object _str213
_str213:
 .word pxt::string_inline_ascii_vt
    .short 39
    .string "jacdac power overload; restarting power"
            .balign 4
            .object _str214
_str214:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "enabling identity LED"
            .balign 4
            .object _str215
_str215:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "__jacdac_proxy"
            .balign 4
            .object _str216
_str216:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "__jacdac_proxy_late"
            .balign 4
            .object _str217
_str217:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "jacdac: start dongle ("
            .balign 4
            .object _str218
_str218:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "late"
            .balign 4
            .object _str219
_str219:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "early"
            .balign 4
            .object _str220
_str220:
 .word pxt::string_inline_ascii_vt
    .short 23
    .string "jacdac: reset in dongle"
            .balign 4
            .object _str221
_str221:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "jacdac starting"
            .balign 4
            .object _str223
_str223:
 .word pxt::string_inline_ascii_vt
    .short 35
    .string "waiting for devices to enumerate..."
            .balign 4
            .object _str224
_str224:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "error"
            .balign 4
            .object _str225
_str225:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "v1.9.29"
            .balign 4
            .object _str226
_str226:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "i12.20 i12.20 i12.20"
            .balign 4
            .object _str227
_str227:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "u12.20"
            .balign 4
            .object _str228
_str228:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "r: u12.20"
            .balign 4
            .object _str229
_str229:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "u22.10"
            .balign 4
            .object _str230
_str230:
 .word pxt::string_inline_ascii_vt
    .short 64
    .string "\x00.\x10<+)/\x047>!, $(\x0c4\x02\x06\x122\"\x166&\x1410#?\x1c9\x08\x01\x03\x09\x19\x11\x0b\x1b\x13\n\x1a\x05\x07\x0d\x1d\x15\x0f\x1f\x17\x0e\x1e%':-=5*3;\x188"
            .balign 4
            .object _str231
_str231:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "u0.16"
            .balign 4
            .object _str232
_str232:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "u16 u16 u16"
            .balign 4
            .object _str233
_str233:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "u16.16"
            .balign 4
            .object _str234
_str234:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "u32 i1.15 i1.15"
            .balign 4
            .object _str235
_str235:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "r: u16 u8 u8"
            .balign 4
            .object _str236
_str236:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "u0.8"
            .balign 4
            .object _str237
_str237:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "i1.15"
            .balign 4
            .object _str238
_str238:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "i16.16"
            .balign 4
            .object _str239
_str239:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "cont=1"
            .balign 4
            .object _str240
_str240:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "i22.10"
            .balign 4
            .object _str241
_str241:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "r: u8 u0.8"
            .balign 4
            .object _str243
_str243:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "event_a"
            .balign 4
            .object _str244
_str244:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "event_b"
            .balign 4
            .object _str245
_str245:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "event_ab"
            .balign 4
            .object _str246
_str246:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "event_tone"
            .balign 4
            .object _str247
_str247:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "value_change"
            .balign 4
            .object _str248
_str248:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "modules: register "
            .balign 4
            .object _str251
_str251:
 .word pxt::string_inline_ascii_vt
    .short 23
    .string "jacdac-microbit-jukebox"
.object _dbl69
.balign 4
_dbl69:
 .word pxt::number_vt
        .hex 000000000000f03c
.object _dbl70
.balign 4
_dbl70:
 .word pxt::number_vt
        .hex 000000000000b03f
.object _dbl98
.balign 4
_dbl98:
 .word pxt::number_vt
        .hex 0000c0ffffffdf41
.object _dbl113
.balign 4
_dbl113:
 .word pxt::number_vt
        .hex 000040555555e541
.object _dbl126
.balign 4
_dbl126:
 .word pxt::number_vt
        .hex 000000000000f041
.object _dbl135
.balign 4
_dbl135:
 .word pxt::number_vt
        .hex 0000e0ffffffef41
.object _dbl136
.balign 4
_dbl136:
 .word pxt::number_vt
        .hex 000000000000e0c1
.object _dbl249
.balign 4
_dbl249:
 .word pxt::number_vt
        .hex 7b14ae47e17a843f
.object _dbl250
.balign 4
_dbl250:
 .word pxt::number_vt
        .hex 333333333333d33f
.balign 4
.object _hexlit71
_hexlit71:
 .word pxt::buffer_vt
                .word 194
                .hex 1f00210023002500270029002c002e003100340037003a003e004100450049004e00520057005c00620068006e0075007b0083008b0093009c00a500af00b900c400d000dc00e900f70006011501260137014a015d01720188019f01b801d201ee010b022a024b026e029302ba02e40210033f037003a403dc03170455049704dd0427057505c80520067d06e0064907b8072d08a9082d09b9094d0aea0a900b400cfa0cc00d910e6f0f5a1053115b1272139a14d41520178018f519801b231dde1e
.balign 4
.section code
.object _perf_counters
_pxt_perf_counters:
    .word 0
_literals_end:
