{
  "jacdac.ServoReg.ActualAngle": "Read-only ° i16.16 (int32_t). The current physical position of the arm, if the device has a way to sense the position.\n* ```\nconst [actualAngle] = jdunpack<[number]>(buf, \"i16.16\")\n```",
  "jacdac.ServoReg.Angle": "Read-write ° i16.16 (int32_t). Specifies the angle of the arm (request).\n* ```\nconst [angle] = jdunpack<[number]>(buf, \"i16.16\")\n```",
  "jacdac.ServoReg.Enabled": "Read-write bool (uint8_t). Turn the power to the servo on/off.\n* ```\nconst [enabled] = jdunpack<[number]>(buf, \"u8\")\n```",
  "jacdac.ServoReg.MaxAngle": "Constant ° i16.16 (int32_t). Highest angle that can be set, typically 180°.\n* ```\nconst [maxAngle] = jdunpack<[number]>(buf, \"i16.16\")\n```",
  "jacdac.ServoReg.MaxPulse": "Read-write μs uint16_t. The length of pulse corresponding to highest angle.\n* ```\nconst [maxPulse] = jdunpack<[number]>(buf, \"u16\")\n```",
  "jacdac.ServoReg.MinAngle": "Constant ° i16.16 (int32_t). Lowest angle that can be set, typically 0 °.\n* ```\nconst [minAngle] = jdunpack<[number]>(buf, \"i16.16\")\n```",
  "jacdac.ServoReg.MinPulse": "Read-write μs uint16_t. The length of pulse corresponding to lowest angle.\n* ```\nconst [minPulse] = jdunpack<[number]>(buf, \"u16\")\n```",
  "jacdac.ServoReg.Offset": "Read-write ° i16.16 (int32_t). Correction applied to the angle to account for the servo arm drift.\n* ```\nconst [offset] = jdunpack<[number]>(buf, \"i16.16\")\n```",
  "jacdac.ServoReg.ResponseSpeed": "Constant s/60° u16.16 (uint32_t). Time to move 60°.\n* ```\nconst [responseSpeed] = jdunpack<[number]>(buf, \"u16.16\")\n```",
  "jacdac.ServoReg.StallTorque": "Constant kg/cm u16.16 (uint32_t). The servo motor will stop rotating when it is trying to move a `stall_torque` weight at a radial distance of `1.0` cm.\n* ```\nconst [stallTorque] = jdunpack<[number]>(buf, \"u16.16\")\n```",
  "modules.ServoClient.actualAngle|block": "%servo actual angle (°)",
  "modules.ServoClient.angle|block": "%servo angle (°)",
  "modules.ServoClient.enabled|block": "%servo enabled",
  "modules.ServoClient.onActualAngleChangedBy|block": "on %servo actual angle changed by %threshold (°)",
  "modules.ServoClient.run|block": "servo continuous %servo run at %speed=speedPicker \\%",
  "modules.ServoClient.setAngle|block": "set %servo angle to %value (°)",
  "modules.ServoClient.setEnabled|block": "set %servo %value=toggleOnOff",
  "modules.ServoClient.stop|block": "servo continuous %servo stop",
  "modules.servo1|block": "servo1",
  "modules.servo2|block": "servo2",
  "modules.servo3|block": "servo3",
  "modules.servo4|block": "servo4",
  "modules|block": "modules",
  "{id:category}Jacdac": "Jacdac",
  "{id:category}Modules": "Modules",
  "{id:group}Servo": "Servo",
  "{id:group}Servo (Continuous)": "Servo (Continuous)"
}