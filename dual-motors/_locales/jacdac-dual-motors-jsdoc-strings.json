{
  "jacdac.DualMotorsReg.Enabled": "Read-write bool (uint8_t). Turn the power to the motors on/off.\n* ```\nconst [enabled] = jdunpack<[number]>(buf, \"u8\")\n```",
  "jacdac.DualMotorsReg.LoadRotationSpeed": "Constant rpm u16.16 (uint32_t). Revolutions per minute of the motor under full load.\n* ```\nconst [loadRotationSpeed] = jdunpack<[number]>(buf, \"u16.16\")\n```",
  "jacdac.DualMotorsReg.LoadTorque": "Constant kg/cm u16.16 (uint32_t). Torque required to produce the rated power of an each electrical motor at load speed.\n* ```\nconst [loadTorque] = jdunpack<[number]>(buf, \"u16.16\")\n```",
  "jacdac.DualMotorsReg.Reversible": "Constant bool (uint8_t). Indicates if the motors can run backwards.\n* ```\nconst [reversible] = jdunpack<[number]>(buf, \"u8\")\n```",
  "jacdac.DualMotorsReg.Speed": "Relative speed of the motors. Use positive/negative values to run the motor forwards and backwards.\nA speed of ``0`` while ``enabled`` acts as brake.\n* ```\nconst [left, right] = jdunpack<[number, number]>(buf, \"i1.15 i1.15\")\n```",
  "jacdac.DualMotorsRegPack.Enabled": "Pack format for 'enabled' data.",
  "jacdac.DualMotorsRegPack.LoadRotationSpeed": "Pack format for 'load_rotation_speed' data.",
  "jacdac.DualMotorsRegPack.LoadTorque": "Pack format for 'load_torque' data.",
  "jacdac.DualMotorsRegPack.Reversible": "Pack format for 'reversible' data.",
  "jacdac.DualMotorsRegPack.Speed": "Pack format for 'speed' data.",
  "modules": "Jacdac modules",
  "modules.DualMotorsClient": "A synchronized pair of motors.",
  "modules.DualMotorsClient.brake": "Turn on motor and keep speed at 0",
  "modules.DualMotorsClient.enabled": "Turn the power to the motors on/off.",
  "modules.DualMotorsClient.loadRotationSpeed": "Revolutions per minute of the motor under full load.",
  "modules.DualMotorsClient.loadTorque": "Torque required to produce the rated power of an each electrical motor at load speed.",
  "modules.DualMotorsClient.reversible": "Indicates if the motors can run backwards.",
  "modules.DualMotorsClient.run": "Set the speed on a DC motor",
  "modules.DualMotorsClient.setEnabled": "Turn the power to the motors on/off.",
  "modules.DualMotorsClient.speedLeft": "Relative speed of the motors. Use positive/negative values to run the motor forwards and backwards.\nA speed of ``0`` while ``enabled`` acts as brake.",
  "modules.DualMotorsClient.speedRight": "Relative speed of the motors. Use positive/negative values to run the motor forwards and backwards.\nA speed of ``0`` while ``enabled`` acts as brake.",
  "modules.DualMotorsClient.stop": "Unpower motor"
}