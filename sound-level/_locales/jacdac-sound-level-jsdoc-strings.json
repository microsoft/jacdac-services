{
  "jacdac.SoundLevelEvent.Loud": "Generated when a loud sound is detected.",
  "jacdac.SoundLevelEvent.Quiet": "Generated low level of sound is detected.",
  "jacdac.SoundLevelReg.Enabled": "Read-write bool (uint8_t). Turn on or off the microphone.\n* ```\nconst [enabled] = jdunpack<[number]>(buf, \"u8\")\n```",
  "jacdac.SoundLevelReg.LoudThreshold": "Read-write ratio u0.16 (uint16_t). Set level at which the `loud` event is generated.\n* ```\nconst [loudThreshold] = jdunpack<[number]>(buf, \"u0.16\")\n```",
  "jacdac.SoundLevelReg.QuietThreshold": "Read-write ratio u0.16 (uint16_t). Set level at which the `quiet` event is generated.\n* ```\nconst [quietThreshold] = jdunpack<[number]>(buf, \"u0.16\")\n```",
  "jacdac.SoundLevelReg.SoundLevel": "Read-only ratio u0.16 (uint16_t). The sound level detected by the microphone\n* ```\nconst [soundLevel] = jdunpack<[number]>(buf, \"u0.16\")\n```",
  "jacdac.SoundLevelRegPack.Enabled": "Pack format for 'enabled' data.",
  "jacdac.SoundLevelRegPack.LoudThreshold": "Pack format for 'loud_threshold' data.",
  "jacdac.SoundLevelRegPack.QuietThreshold": "Pack format for 'quiet_threshold' data.",
  "jacdac.SoundLevelRegPack.SoundLevel": "Pack format for 'sound_level' data.",
  "modules": "Jacdac modules",
  "modules.SoundLevelClient": "A sound level detector sensor, gives a relative indication of the sound level.",
  "modules.SoundLevelClient.enabled": "Turn on or off the microphone.",
  "modules.SoundLevelClient.loudThreshold": "Set level at which the `loud` event is generated.",
  "modules.SoundLevelClient.onEvent": "Register code to run when an event is raised",
  "modules.SoundLevelClient.onLoud": "Generated when a loud sound is detected.",
  "modules.SoundLevelClient.onQuiet": "Generated low level of sound is detected.",
  "modules.SoundLevelClient.onSoundLevelChangedBy": "Run code when the sound level changes by the given threshold value.",
  "modules.SoundLevelClient.quietThreshold": "Set level at which the `quiet` event is generated.",
  "modules.SoundLevelClient.setEnabled": "Turn on or off the microphone.",
  "modules.SoundLevelClient.setLoudThreshold": "Set level at which the `loud` event is generated.",
  "modules.SoundLevelClient.setQuietThreshold": "Set level at which the `quiet` event is generated.",
  "modules.SoundLevelClient.soundLevel": "The sound level detected by the microphone"
}